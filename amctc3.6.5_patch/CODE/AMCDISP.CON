/* Commenting out as it appears to be unused
defstate menu_bar
    ife DISP_TEMP 0 myospal 160 20 3183 0 0 0 else
    ife DISP_TEMP 1 myospal 160 20 3184 0 0 0 else
    ife DISP_TEMP 2 myospal 160 14 3185 0 0 0 else
    ife DISP_TEMP 3 myospal 160 20 3186 0 0 0 else
    ife DISP_TEMP 6 myospal 160 18 3188 0 0 0 else
    myospal 160 20 3187 0 0 0
ends
*/

// INVENTORY WHEEL DISPLAY STUFF

defstate display_invitem_description
    qputs 810 
    qputs 811
    qputs 812
    switch INVENTORY_SLOTS[THIS_SLOT]
        case 0
            qputs 810 ERROR
            break
        case 1
            qputs 810 Healing Item
            qputs 812 ^32(Active Use)
            break
        case 2
            ife CHAR 0 
                {
                qputs 810 Improved Movement & 
                qputs 811 Stronger Melee
                }
            else ife CHAR 1 
                {
                qputs 810 Faster Movement & 
                qputs 811 Stronger Kick
                }
            else ife CHAR 2 
                {
                qputs 810 Improved Movement &
                qputs 811 Stronger Melee
                }
            else ife CHAR 3 
                {
                qputs 810 Regen., Strength &
                qputs 811 Greater Accuracy
                }
            else ife CHAR 4 
                {
                qputs 810 Faster Movement &
                qputs 811 Stronger Kick
                }
            else ife CHAR 5 
                {
                qputs 810 Faster Movement &
                qputs 811 Stronger Kick
                }
            else ife CHAR 6 
                {
                qputs 810 Faster Movement &
                qputs 811 Stronger Kick
                }
            else ife CHAR 7 qputs 810 Spawn temporary Mechsuit
            else ife CHAR 8 qputs 810 Unused
            else ife CHAR 9                 
                {
                qputs 810 Faster Movement &
                qputs 811 Stronger Kick
                }
            else ife CHAR 10                
                {
                qputs 810 Faster Movement &
                qputs 811 Stronger Kick
                }
            else ife CHAR 11 
                {
                qputs 810 Better Movement &
                qputs 811 Stronger Melee
                }
            else ife CHAR 12 
                {
                qputs 810 Faster Movement &
                qputs 811 Stronger Kick
                }
            else ife CHAR 13 
                { 
                qputs 810 Absorb Lasers
                qputs 811 Into Armor
                }
            else ife CHAR 14
                {
                qputs 810 Faster Movement &
                qputs 811 Stronger Kick
                }
            else qputs 810 Invalid Char
            qputs 812 ^32(Active Use)
            break
        case 3
            ife CHAR 0 qputs 810 Deflect Projectiles
            else ife CHAR 1 qputs 810 Distracts Enemies
            else ife CHAR 2 qputs 810 +200 Shield Strength
            else ife CHAR 3 qputs 810 Call Support
            else ife CHAR 4 qputs 810 Reflects Damage
            else ife CHAR 5
                {
                qputs 810 Fires a Wave of 
                qputs 811 Silver Projectiles
                }
            else ife CHAR 6 qputs 810 Infinite Ammo
            else ife CHAR 7 qputs 810 Refills Ammo
            else ife CHAR 8 qputs 810 Unused
            else ife CHAR 9 qputs 810 Reflects Damage
            else ife CHAR 10 qputs 810 Deflect Projectiles
            else ife CHAR 11 
                {
                qputs 810 Spawns Random
                qputs 811 Powerups
                }
            else ife CHAR 12 qputs 810 Cluster Bombs
            else ife CHAR 13 qputs 810 Portable Turret
            else ife CHAR 14 
                { 
                qputs 810 Protects against 
                qputs 811 Psychic Damage
                }
            else qputs 810 Invalid Character
            qputs 812 ^32(Active Use)
            break
        case 4
            qputs 810 Grants Flight
            qputs 812 ^32(Active Use)
            break
        case 5
            ife HELMET_LOADOUT[CHAR] 2 qputs 810 Heat Vision
            else ife HELMET_LOADOUT[CHAR] 4 qputs 810 Ghost Vision
            else qputs 810 Night Vision
            qputs 812 ^32(Active Use)
            break
        case 6
            qputs 810 Breathe Underwater
            qputs 812 ^1(Passive Use)
            break
        case 7
            ife CHAR 7 
                { 
                qputs 810 Environm. Hazard 
                qputs 811 Protection
                qputs 812 ^1(Passive Use)
                }
            else 
                {
                qputs 810 Floor Hazard
                qputs 811 Protection 
                qputs 812 ^1(Passive Use)
                }
            break
    endswitch
    gametextz STARTALPHANUM 320 113 810 0 8 1 0 0 xdim ydim HALFSIZE 
    gametextz STARTALPHANUM 320 117 811 0 8 1 0 0 xdim ydim HALFSIZE
    gametextz STARTALPHANUM 320 121 812 0 0 1 0 0 xdim ydim HALFSIZE
ends

defstate INVENTORY_SLOTS_DEV
set DISP_TEMP 0
set DISP_TEMP2 0
set DISP_TEMP3 0

qputs 572
switch INVENTORY_SLOTS[THIS_SLOT]
case 0
    set DISP_TEMP2 3054
    break
case 1 // First aid
    ifg player[].firstaid_amount 0
        {
        set DISP_TEMP2 CMEDIKIT
        getkeyname 572 35 2
        }
    break
case 2 // Item 1
    ifg player[].steroids_amount 0
        {
        set DISP_TEMP2 CSTEROIDS
        getkeyname 572 48 2
        }
    break
case 3 // Item 2
    ifg player[].holoduke_amount 0
        {
        set DISP_TEMP2 CHOLODUKE
        getkeyname 572 32 2
        }
    break
case 4 // Jetpack
    ifg player[].jetpack_amount 0
        {
        set DISP_TEMP2 CJETPACK
        getkeyname 572 33 2
        }
    break
case 5 // night vision
    ifg player[].heat_amount 0
        {
        set DISP_TEMP2 DISP_NVG
        getkeyname 572 34 2
        }
    break
case 6 // Scuba
    ifg player[].scuba_amount 0 set DISP_TEMP2 CSCUBA
    break
case 7 // boot
    ifg player[].boot_amount 0 set DISP_TEMP2 CBOOTS
    break
endswitch

ifn DISP_TEMP2 0
{
	set DISP_TEMP6 26
	sub DISP_TEMP6 player[].invdisptime
    set DISP_TEMP5 INVEN_BAR_SIZE[THIS_SLOT]
	ifl DISP_TEMP5 28000 set DISP_TEMP5 28000
	ife player[].inven_icon THIS_SLOT
		{
		ifl DISP_TEMP5 40000 add DISP_TEMP5 250
		setarray INVEN_BAR_SIZE[THIS_SLOT] DISP_TEMP5
		rotatespritea WH_SLOT_X WH_SLOT_Y INVEN_BAR_SIZE[THIS_SLOT] 0 3607 0 0 33 -255 0 0 xdim ydim
		rotatesprite WH_SLOT_X WH_SLOT_Y HALFSIZE 0 DISP_TEMP2 0 0 0 0 0 xdim ydim
        state display_invitem_description
		}
    else 
		{
		ifg DISP_TEMP5 28000 sub DISP_TEMP5 125
		setarray INVEN_BAR_SIZE[THIS_SLOT] DISP_TEMP5
		rotatespritea WH_SLOT_X WH_SLOT_Y INVEN_BAR_SIZE[THIS_SLOT] 0 3607 DISP_TEMP6 12 33 -255 0 0 xdim ydim
		mulvar DISP_TEMP6 2
		rotatespritea WH_SLOT_X WH_SLOT_Y INVENSIZE 0 DISP_TEMP2 15 27 1 DISP_TEMP6 0 0 xdim ydim
		}
    set DISP_TEMP7 WH_SLOT_X
    mulvar DISP_TEMP7 2
    set DISP_TEMP8 WH_SLOT_Y
    add DISP_TEMP8 10
    gametextz STARTALPHANUM DISP_TEMP7 DISP_TEMP8 572 0 8 1 0 0 xdim ydim HALFSIZE    
    
}

ends



define NUMBER_OF_HINTS 66

defstate lookup_hints
    switch LOADING_SCREEN_HINT
    case 0
        qputs 801 If you press and hold the sprint key while scoped, you will enter slow motion.
        qputs 802 Use it to score accurate headshots while under enemy fire!
        qputs 803 Rusty, Mikko and Highwire can hold the slowmo longer than other characters.
        break
    case 1
        qputs 801 Temporary weapons can be used by every character, and are selected with
        qputs 802 weapon key 1. You can only hold a single temporary weapon at once; hold the
        qputs 803 reload key to drop one if you wish to pick up another, or press and hold the
        qputs 804 use key to directly swap one for another when standing near it.
        break
    case 2
        qputs 801 Certain weapons you find may have alternate ammo types; you can view them
        qputs 802 with the PDU (accessed with the mission key). Press the fire mode key to
        qputs 803 toggle between ammo types. Types you can select have a red outline to them.
        break
    case 3
        qputs 801 Killing enemies earns you credits. You can upgrade your weapons at the
        qputs 802 AMC base, or at blue vending machines. These credits will reset once you
        qputs 803 start a new episode, so spend them liberally.
        break
    case 4
        qputs 801 Sometimes your explosive weapons aren't good enough to destroy an obstacle.
        qputs 802 C4 can be used where a flashing red silhouette is found; press space to place
        qputs 803 the C4, than retreat to a safe distance.
        break
    case 5
        qputs 801 You may find broken switches and other items during your travels. Sometimes these
        qputs 802 can be fixed, as long as you have a toolbox. Face the broken item and hit your use
        qputs 803 key to repair it. Certain characters may be able to salvage the toolbox and reuse it!
        break
    case 6
        qputs 801 Don't forget your sprint key if you need an extra boost of speed to avoid
        qputs 802 enemy fire or certain hazards. Running out of stamina will temporarily impair
        qputs 803 you for a second though!
        break
    case 7
        qputs 801 Some weapons have a laser-sight attached that you can turn on and off.
        qputs 802 Laser sight color can be changed in the character loadout menu.
        break
    case 8
        qputs 801 Merlijn can spin in a 360-degree circle and perform a spinning slash with his
        qputs 802 sword, by pressing the alternate fire key. This drains his stamina by a large
        qputs 803 degree however.
        break
    case 9
        qputs 801 In Professional mode and above, you no longer have a crosshair; you'll
        qputs 802 have to make do using scopes, holosights, laser-dots, and your skill.
        break
    case 10
        qputs 801 AMC members can perform powerful melee attacks with the quick kick key.
        qputs 802 For instance, move backwards and kick to do a powerful roundhouse kick, 
        qputs 803 or kick while sprinting to perform a slide.
        break
    case 11
        qputs 801 Stuck? On certain areas you have access to a powerful scanning tool.
        qputs 802 Access it via your PDU (selected with the mission key) and look around
        qputs 803 any suspicious looking areas. This can also reveal hidden secrets!
        break
    case 12
        qputs 801 You can command up to 3 allies at once. Press use on them to get them to
        qputs 802 follow you; you can also command each one individually by pressing the voice
        qputs 803 key. Highwire, due to his commanding experience, can lead 4 allies at once.
        break
    case 13
        qputs 801 Once you find a temporary weapon in the field, it will be available for
        qputs 802 use in the AMC armoury. You can take one of them with you on future missions.
        break
    case 14
        qputs 801 Physical armour protects 100% against most types of damage; however psychic
        qputs 802 or fire attacks bypass regular armour and damage your health directly.
        break
    case 15
        qputs 801 Merlijn's shield protects against attacks as long as you're facing them;
        qputs 802 fix his shield by picking up armour plates. His Heavy shield item offers
        qputs 803 a wider arc of protection, and is much stronger as well.
        break
    case 16
        qputs 801 Spirit shields protects against magical attacks like the Octabrain's blast,
        qputs 802 or a ghosts attacks. These attacks bypass regular armour and deal
        qputs 803 damage directly to your health.
        break
    case 17
        qputs 801 Fire shields protect against fire attacks such as the Shade's fireblast,
        qputs 802 or a Bruiser's fireball. These attacks bypass regular armour and deal
        qputs 803 damage directly to your health over a period of time.
        break
    case 18
        qputs 801 The Environmental suit protects you against hazards; although too heavy to
        qputs 802 wear in combat, using this you can swim in Lava and walk through radiation
        qputs 803 without concern. Walk up to it and press use to put it on.
        qputs 804 Certain characters who are already wearing full-body suits can use parts
        qputs 805 of the enviro-suit, but will still need to remove it afterwards.
        break
    case 19
        qputs 801 The Gas Mask protects you against gas attacks; don't attempt to walk through
        qputs 802 gas without it as you'll choke to death. Most gas hazards have warning signs
        qputs 803 around; keep your eyes peeled.
        break
    case 20
        qputs 801 Red, Blue and Yellow plugs function like keycards except they can be reused.
        qputs 802 Press use on a plug socket to insert a plug if you have one or extract it.
        break
    case 21
        qputs 801 The MS-Corp Mech is a near-indestructible walking tank. Press use to enter,
        qputs 802 and jump to exit. The primary fire is a spread-fire explosive shell, and
        qputs 803 the alt-fire fires anti-armour missiles. The crouch button fires lasers.
        break
    case 22
        qputs 801 Pay attention to onscreen prompts; if one appears telling you to hit use
        qputs 802 and it's flashing, hit it as fast as you can!
        break
    case 23
        qputs 801 Geoffrey and Mikko can enter cyberspace via VR Terminals. You have a set
        qputs 802 number of activity points, and opening doors uses them up. Black doors
        qputs 803 have a chance of shocking and draining you of 4 points!
        break
    case 24
        qputs 801 Blood sigils are magically locked doors that only one trained in the
        qputs 802 black arts can unlock, at the cost of some of their blood. If you see
        qputs 803 a door with a pentagram on it, chances are only Sang can open it!
        break
    case 25
        qputs 801 Due to the events of Imagination World, James can use strange anomalies
        qputs 802 called Time portals. They're only visible to him though; press use
        qputs 803 to enter it and see where it takes you!
        break
    case 26
        qputs 801 Highwire can use his support radio to summon 2 AMC soldiers to his
        qputs 802 side, but he can also use it to fix some devices that in turn may
        qputs 803 help him in better ways.
        break
    case 27
        qputs 801 Some guns have a bipod attached; pressing alt-fire deploys it if
        qputs 802 a suitable surface is near. Pushback is decreased dramatically,
        qputs 803 and you'll fire far more accurately as well.
        break
    case 28
        qputs 801 Some guns have a bayonet attached; press alt-fire to
        qputs 802 attack with it. Researching new knife types will allow you to
        qputs 803 change the blade on it as well, via the equipment loadout screen.
        break
    case 29
        qputs 801 Certain objects, such as large vases and ammunition crates, can be
        qputs 802 opened, and may contain items. Press use if the prompt comes up, and
        qputs 803 click on any objects inside with the mouse cursor to take them.
        break
    case 30
        qputs 801 During missions you may come across vital information or data;
        qputs 802 press use to read it. If you haven't already gotten it before, it will
        qputs 803 then be stored in the AMC base's evidence database.
        break
    case 31
        qputs 801 Want to learn more about the characters and places of the AMC TC world?
        qputs 802 Check the computer in James' or Highwire's room in the AMC base.
        break
    case 32
        qputs 801 Hurting bad, and no health kits in sight? Try searching for food and
        qputs 802 drink instead. Although they only replenish a tiny amount of health, it
        qputs 803 can still help turn the tide of battle in your favour.
        break
    case 33
        qputs 801 Enemies have resistances and weaknesses to certain attacks;
        qputs 802 on Expert mode and above, these can become invulnerabilities.
        qputs 803 Learn enemies well before trying these skill levels! Your
        qputs 804 crosshair changes depending on the damage type you're dealing.
        break
    case 34
        qputs 801 Amulets give you a small boost in health, and also raise your maximum
        qputs 802 health level. Find as many as you can!
        break
    case 35
        qputs 801 Certain weapons have grenade launchers as a secondary fire;
        qputs 802 they utilise the grenade item as ammunition. Press the weapon's number
        qputs 803 key when selected to use it (You can also use the firemode key menu)
        break
    case 36
        qputs 801 Are your allies badly wounded? All friendly allies regain
        qputs 802 health if left idle; try and keep them alive as long as you can.
        break
    case 37
        qputs 801 Sang's oblivion staff can be planted on the ground as a sentry
        qputs 802 with the alt-fire key; it consumes less ammo in this state.
        qputs 803 Press use whilst facing it to pick it up again.
        break
    case 38
        qputs 801 Wooden boards can be used to form barricades and defensive
        qputs 802 structures; simply pick them up with the use key and stand near
        qputs 803 an area to place it, if there's a structure to be built.
        break
    case 39
        qputs 801 Minigun turrets are stationary weaponry that dish out an
        qputs 802 obscene amount of firepower. You can find ammo crates for them;
        qputs 803 press use on one and bring it to the turret to give it more ammo.
        break
    case 40
        qputs 801 Is the enemy you're fighting a human, or shaped like one? If so,
        qputs 802 there's a strong chance that headshots are the quickest way to
        qputs 803 take them out. Aim for the head to do more damage.
        break
    case 41
        qputs 801 The alt-fire for Sang's initial spell ring boosts his shield;
        qputs 802 if you have surplus mana for it, use it to top up your armour
        qputs 803 levels.
        break
    case 42
        qputs 801 Lost? The overhead map shows you the location of any key slots
        qputs 802 or items of interest.
        break
    case 43
        qputs 801 AMC TC follows on from the plot of IW; if you've finished IW episode 4,
        qputs 802 copy the file iw_complete.amctc to the AMC TC directory for bonus weapons
        qputs 803 for James. It may also have other effects on the game.
        break
    case 44
        qputs 801 Search for research projects on the field; they can give you access to,
        qputs 802 new weapons, upgrades and improvements for the AMC base. Research them
        qputs 803 in the AMC Base laboratory.
        break
    case 45
        qputs 801 Treasure you locate during battle will go towards the overall AMC budget,
        qputs 802 which can be used for research, buying weapons and structures on the map screen.
        qputs 803 You will also earn money by completing missions - the higher the difficulty,
        qputs 804 the better the reward!
        break
    case 46
        qputs 801 If you shoot an armoured enemy and blue sparks shoot off, it's protected
        qputs 802 against that attack and it won't be harmed as much. Try using armour-piercing
        qputs 803 flechettes, slugs, energy-based or other armour-penetrating attacks.
        break
    case 47
        qputs 801 Supernatural enemies are resistant to mundane attacks; energy can still
        qputs 802 hurt them but silver weapons are the most effective by far.
        break
    case 48
        qputs 801 Looking for a real challenge? Armageddon is the difficulty for you.
        qputs 802 Enemies kill you twice as fast, and armoured enemies are completely
        qputs 803 invulnerable to standard attacks, among other things.
        break
    case 49
        qputs 801 Certain attacks can set you on fire! Either find a source of water
        qputs 802 to douse the flame, or stop and roll sideways to make the flames die
        qputs 803 out faster.
        break
    case 50
        qputs 801 Ice attacks can slow down an enemy's movement speed temporarily;
        qputs 802 use it to increase the distance between yourself and the attacker.
        break
    case 51
        qputs 801 Lightning based attacks like Sang's Thunder Spell and the Tesla Ammo
        qputs 802 deal more damage to enemies if they're standing on metal flooring.
        break
    case 52
        qputs 801 If you have no weapons or are using your fists, right click on a nearby
        qputs 802 enemy to lock on to make it easier to punch it. You'll automatically perform
        qputs 803 a powerful uppercut when the enemy is low on health.
        break
    case 53
        qputs 801 The size of a gun affects how far you can sprint, and its accuracy while
        qputs 802 doing so as well. Large weapons are very inaccurate while sprinting, whereas
        qputs 803 smaller ones suffer no such penalty.
        break
    case 54
        qputs 801 Crouching and remaining still will increase your accuracy; this only helps with
        qputs 802 larger guns that have stocks to use however.
        break
    case 55
        qputs 801 Press and hold use, then press turn left or right to learn around corners. You can't
        qputs 802 fire like this, but enemies won't notice you either.
        break
    case 56
        qputs 801 Certain enemies can curse you; whilst the duration is short, you cannot heal up
        qputs 802 whilst cursed. Be careful and don't be caught unaware!
        break
    case 57
        qputs 801 Scanning objects will reward you with a small amount of credits, which you can use
        qputs 802 to upgrade your default weaponry. It may also reveal hidden items and upgrades!
        break
    case 58
        qputs 801 Mikko's enviro-suit has twice the capacity of regular protection gear (e.g. boots),
        qputs 802 and protects him against both fire and ice attacks!
        break
    case 59
        qputs 801 James' Scuba Gear has twice the capacity of that of other characters.
        break
    case 60
        qputs 801 Due to his catlike nature, Snowfall takes greatly reduced damage from falls.
        break
    case 61
        qputs 801 Each character has different active items usable in the field. James for instance can
        qputs 802 make use of a temporary force shield, while Highwire can call allies to support him.
        break
    case 62
        qputs 801 Each character's physical armor differs. Some characters have armors with strong
        qputs 802 absorption, yet low durability. Other characters have weak armors with high
        qputs 803 durability. There are also special armors that absorb fire and spirit damage.
        break
    case 63
        qputs 801 Characters with energy armor can recharge these at charging stations, and their armor
        qputs 802 completely absorbs all attacks!
        break
    case 64
        qputs 801 Snowfall's jetpack has access to a very large fuel reserves, allowing him to fly for
        qputs 802 twice as long as other characters.
        break
    case 65
        qputs 801 Jump and kick simultaneously in order to do a crescent kick.
        qputs 802 Crouch, move backwards and kick to perform a spinning kick. 
        break
    case 66
        qputs 801 Kicking while falling will allow you to perform a flying kick.
        break
    default
        qputs 801 If you can read this, then the hint screen broke. Report me please!
        break
    endswitch
ends


state clean_hint_space
    // Blank existing hints
    qputs 801
    qputs 802
    qputs 803
    qputs 804
    qputs 805
ends

defstate loading_hints
    // Place hint header
    gametextz STARTALPHANUM 20 10 800 0 8 0 0 0 xdim ydim HALFSIZE

    // Pick a random hint
    ife LOADING_SCREEN_HINT 0 {
        state clean_hint_space
        displayrandvar LOADING_SCREEN_HINT NUMBER_OF_HINTS
    }
    state lookup_hints

    // Display hint
    gametextz STARTALPHANUM 20 15 801 0 0 0 0 0 xdim ydim HALFSIZE
    gametextz STARTALPHANUM 20 20 802 0 0 0 0 0 xdim ydim HALFSIZE
    gametextz STARTALPHANUM 20 25 803 0 0 0 0 0 xdim ydim HALFSIZE
    gametextz STARTALPHANUM 20 30 804 0 0 0 0 0 xdim ydim HALFSIZE
    gametextz STARTALPHANUM 20 35 805 0 0 0 0 0 xdim ydim HALFSIZE
ends


defstate helpscreen_hints
    // Place hint header
    gametextz STARTALPHANUM 20 47 800 0 8 0 0 0 xdim ydim HALFSIZE
    set DISPLAYMENU_TEMP4 LOADING_SCREEN_HINT
    add DISPLAYMENU_TEMP4 1
    redefinequote 801 #%d
    qsprintf 802 801 DISPLAYMENU_TEMP4
    gametextz STARTALPHANUM 120 47 802 0 8 0 0 0 xdim ydim HALFSIZE

    // load hint
    state clean_hint_space
    state lookup_hints

    // Display hint
    gametextz STARTALPHANUM 20 55 801 0 0 0 0 0 xdim ydim HALFSIZE
    gametextz STARTALPHANUM 20 60 802 0 0 0 0 0 xdim ydim HALFSIZE
    gametextz STARTALPHANUM 20 65 803 0 0 0 0 0 xdim ydim HALFSIZE
    gametextz STARTALPHANUM 20 70 804 0 0 0 0 0 xdim ydim HALFSIZE
    gametextz STARTALPHANUM 20 75 805 0 0 0 0 0 xdim ydim HALFSIZE
ends

onevent EVENT_DISPLAYOVERHEADMAPTEXT
	setvar RETURN 1

    getuserdef[].overhead_on DISP_TEMP
    ifn DISP_TEMP 0
        {
        ife CHAR 0 
			{
			ifand CHAR_APP 1 set DISP_TEMP3 25636
			else set DISP_TEMP3 5239 
			}
			else
        ife CHAR 1 set DISP_TEMP3 5401 else
		ife CHAR 2 
			{
			ifand CHAR_APP 4 set DISP_TEMP3 25637
			else set DISP_TEMP3 5402 
			}
			else
        ife CHAR 3 
			{
			ifand CHAR_APP 16 set DISP_TEMP3 25639 
			else set DISP_TEMP3 6118 
			}
			else
		ife CHAR 4 
			{
			ifand CHAR_APP 2 set DISP_TEMP3 23875
			else set DISP_TEMP3 5403
			}
		else
        ife CHAR 5 set DISP_TEMP3 6761 else
		ife CHAR 6 set DISP_TEMP3 5404 else
		ife CHAR 7 
			{
			ifand CHAR_APP 8 set DISP_TEMP3 25638
			else set DISP_TEMP3 6963 
			}
			else
        ife CHAR 10 set DISP_TEMP3 9946 else
        ife CHAR 12 set DISP_TEMP3 12800 else
		ife CHAR 13 set DISP_TEMP3 16541 else
		ife CHAR 14 set DISP_TEMP3 20943 else
        set DISP_TEMP3 3675

        getp[].zoom DISP_TEMP2
        mulvar DISP_TEMP2 20
        rotatesprite 161 101 DISP_TEMP2 0 DISP_TEMP3 shade 4 33 0 0 xdim ydim
        rotatesprite 160 100 DISP_TEMP2 0 DISP_TEMP3 shade pal 0 0 0 xdim ydim

        getp[].ang DISP_TEMP2
        ifg DISP_TEMP2 1408 ifl DISP_TEMP2 1664 myospalx 160 160 2867 0 0 0
        ifg DISP_TEMP2 1663 ifl DISP_TEMP2 1920 { myospalx 157 160 2867 0 0 0 myospalx 163 160 2858 0 0 0 }
        ifg DISP_TEMP2 1919 myospalx 160 160 2858 0 0 0
        ifl DISP_TEMP2 128 myospalx 160 160 2858 0 0 0
        ifg DISP_TEMP2 127 ifl DISP_TEMP2 384 { myospalx 157 160 2872 0 0 0 myospalx 163 160 2858 0 0 0 }
        ifg DISP_TEMP2 383 ifl DISP_TEMP2 640 myospalx 160 160 2872 0 0 0
        ifg DISP_TEMP2 639 ifl DISP_TEMP2 896 { myospalx 157 160 2872 0 0 0 myospalx 163 160 2876 0 0 0 }
        ifg DISP_TEMP2 895 ifl DISP_TEMP2 1152 myospalx 160 160 2876 0 0 0
        ifg DISP_TEMP2 1151 ifl DISP_TEMP2 1409 { myospalx 157 160 2867 0 0 0 myospalx 163 160 2876 0 0 0 }

        ife DISP_TEMP 2
            {
            ife VOLUME 0 qputs 408 THE MEN WHO WERE AMC
            ife VOLUME 1 qputs 408 SHOWDOWN IN HONG KONG
            ife VOLUME 2 qputs 408 QUEST FOR THE GOLDEN SANG
            ife VOLUME 3 qputs 408 LAW OF THE KNIGHTS
            ife VOLUME 4 qputs 408 SNAPE KILLS SOLO IN ENDGAME
            ife VOLUME 5 qputs 408 MULTIPLAYER MAPS
            ife VOLUME 6 qputs 408 EDF MISSIONS

            ife CHAR 2 gametextz 2822 10 45 408 5 2 256 0 0 xdim ydim HALFSIZE // Display episodes
            else gametextz 2822 10 10 408 5 2 256 0 0 xdim ydim HALFSIZE // Display episodes

            ife HUB_MAP 0
                {
                ife VOLUME 0 ife LEVEL 7 qgetsysstr 408 STR_USERMAPFILENAME
                else qgetsysstr 408 STR_MAPNAME
                ife CHAR 2 gametextz 2822 10 50 408 10 2 256 0 0 xdim ydim HALFSIZE // Display map name
                else gametextz 2822 10 15 408 10 2 256 0 0 xdim ydim HALFSIZE // Display map name
                }
            getp[].secret_rooms DISP_TEMP3
            getp[].max_secret_rooms DISP_TEMP4
            ifg DISP_TEMP4 0
                {
                ife DISP_TEMP3 DISP_TEMP4
                    {
                    qputs 408 ALL SECRETS FOUND
                    ife CHAR 2 gametextz 2822 10 55 408 DISP_PULSE 8 256 0 0 xdim ydim HALFSIZE // Display secrets
                    else gametextz 2822 10 20 408 DISP_PULSE 8 256 0 0 xdim ydim HALFSIZE // Display secrets
                    }
                else
                    {
                    qputs 408 SECRETS:  %ld/%ld
                    qsprintf 409 408 DISP_TEMP3 DISP_TEMP4
                    ife CHAR 2 gametextz 2822 10 55 409 0 1 256 0 0 xdim ydim HALFSIZE // Display secrets
                    else gametextz 2822 10 20 409 0 1 256 0 0 xdim ydim HALFSIZE // Display secrets
                    }
                }
            }
        }

endevent

onevent EVENT_GETLOADTILE
    // Reset prevtick for EVENT_DISPLAYLOADINGSCREEN.
    set prevtick -1
endevent


// loading screen
onevent EVENT_DISPLAYLOADINGSCREEN

    rotatesprite 160 100 DOUBLESIZE 0 3240 0 4 1024 0 0 xdim ydim
    rotatesprite 40 160 QUARTERSIZE 0 3604 0 0 0 0 0 xdim ydim

    getticks curtick
    ife prevtick -1
    set DISP_TEMP 0
    else
        {
        readgamevar WHEEL1
        readgamevar WHEEL2
        set DISP_TEMP curtick
        sub DISP_TEMP prevtick
        }

    add WHEEL1 2
    ifg WHEEL1 2048 set WHEEL1 0
    rotatespritea 10 135 INVENSIZE WHEEL1 3228 20 12 256 -255 0 0 xdim ydim
    sub WHEEL2 4
    ifl WHEEL2 -2048 set WHEEL2 0
    rotatespritea 10 135 QUARTERSIZE WHEEL2 3228 10 12 256 -255 0 0 xdim ydim


    set prevtick curtick


    ife CHAR 0 set DISP_TEMP 3746 else
    ife CHAR 1 set DISP_TEMP 3747 else
    ife CHAR 2 set DISP_TEMP 3748 else
    ife CHAR 3 set DISP_TEMP 3749 else
    ife CHAR 4
        {
        ifand CHAR_APP 2 set DISP_TEMP 23834 else
        set DISP_TEMP 3750
        }
    else
    ife CHAR 5 set DISP_TEMP 3751 else
    ife CHAR 6 set DISP_TEMP 3752 else
    ife CHAR 7 set DISP_TEMP 3753 else
    ife CHAR 10 set DISP_TEMP 10364 else
    ife CHAR 12 set DISP_TEMP 12883 else
    ife CHAR 13 set DISP_TEMP 16601 else
    ife CHAR 14 set DISP_TEMP 20964 
    else set DISP_TEMP 3587
    rotatespritea 160 100 NORMALSIZE 0 DISP_TEMP 0 0 0 -255 0 0 xdim ydim

    getp[].pals_time DISP_TEMP3

    state loading_hints
endevent

defstate clear_skill_info
    qputs 831
    qputs 832
    qputs 833
	qputs 834
	qputs 835
ends

defstate display_skill_info
    getuserdef[THISACTOR].m_origin_x x
	addvar x 65536
	shiftvarr x 16

    set DISP_TEMP x
    add DISP_TEMP 162 // Team image position
    set DISP_TEMP2 x
    add DISP_TEMP2 220 // Skilltext header
    set DISP_TEMP3 x
    add DISP_TEMP3 260 // Skilltext content

    state clear_skill_info

	switch userdef.m_player_skill
	case 1
    	// Header gets a different pal for each skill
        qputs 830 For casual fun or newer players.
		gametextz STARTALPHANUM DISP_TEMP2 50 830 0 1 0 0 0 xdim ydim HALFSIZE // Used to be pal: 126

        qputs 831 - Partial Enemy Resistances (50%)
		qputs 832 - Budget earned at x0.5 rate
		qputs 833 - Low enemy count, accuracy and aggressiveness
		qputs 834 - Double Ammunition
		qputs 835 - 1/3 Damage to Players

        rotatesprite DISP_TEMP 170 22000 0 10998 0 0 0 0 0 xdim ydim
        break
	case 2
		qputs 830 Intended for first-time players of the AMC TC
		gametextz STARTALPHANUM DISP_TEMP2 50 830 0 125 0 0 0 xdim ydim HALFSIZE

		qputs 831 - Partial Enemy Resistances (50%)
		qputs 832 - Budget earned at normal rate
		qputs 833 - Normal enemy count, accuracy and aggressiveness

        rotatesprite DISP_TEMP 170 22000 0 10999 0 0 0 0 0 xdim ydim
        break
	case 3
		qputs 830 Intended for experienced AMC players
		gametextz STARTALPHANUM DISP_TEMP2 50 830 0 32 0 0 0 xdim ydim HALFSIZE

		qputs 831 - Full Enemy Resistances (100%)
		qputs 832 - Budget earned at x1.5 rate
		qputs 833 - Higher enemy count, accuracy and aggressiveness
		qputs 834 - Characters will be fatigued with excessive use

        rotatesprite DISP_TEMP 170 22000 0 11000 0 0 0 0 0 xdim ydim
        break
	case 4
		qputs 830 Intended for hardcore AMC players
		gametextz STARTALPHANUM DISP_TEMP2 50 830 0 54 0 0 0 xdim ydim HALFSIZE

		qputs 831 - Full Enemy Resistances (100%)
		qputs 832 - Budget earned at x2 rate
		qputs 833 - Even higher enemy count, accuracy and aggressiveness
		qputs 834 - Characters will be fatigued with excessive use

        rotatesprite DISP_TEMP 170 22000 0 11001 0 0 0 0 0 xdim ydim
	    break
	case 5
        qputs 830 You will be massacred!
        gametextz STARTALPHANUM DISP_TEMP2 50 830 0 124 0 0 0 xdim ydim HALFSIZE

		qputs 831 - Full Enemy Resistances (100%)
		qputs 832 - Budget earned at x4 rate
		qputs 833 - Greatest enemy count, accuracy and aggressiveness
		qputs 834 - Characters will be fatigued with excessive use
		qputs 835 - Enemies do x2 damage!

        rotatesprite DISP_TEMP 170 22000 0 11002 0 0 0 0 0 xdim ydim
        break
	endswitch

    // Description (white text)
    gametextz STARTALPHANUM DISP_TEMP3 57 831 0 0 0 0 0 xdim ydim HALFSIZE
	gametextz STARTALPHANUM DISP_TEMP3 63 832 0 0 0 0 0 xdim ydim HALFSIZE
	gametextz STARTALPHANUM DISP_TEMP3 69 833 0 0 0 0 0 xdim ydim HALFSIZE
    gametextz STARTALPHANUM DISP_TEMP3 75 834 0 0 0 0 0 xdim ydim HALFSIZE
    gametextz STARTALPHANUM DISP_TEMP3 81 835 0 0 0 0 0 xdim ydim HALFSIZE

    // Unlockables (gold text, defined in AMCUSER.CON)
    ife userdef.m_user_map 0
        {
        ifg userdef.m_player_skill 2
            ifl userdef.m_volume_number 2
                gametextz STARTALPHANUM DISP_TEMP3 92 838 0 24 0 0 0 xdim ydim HALFSIZE
        ifg userdef.m_player_skill 3
                gametextz STARTALPHANUM DISP_TEMP3 99 839 0 24 0 0 0 xdim ydim HALFSIZE
        }


    // Reduce size of Armageddon graphic
    set DISP_TEMP3 HALFSIZE
    sub DISP_TEMP3 4096

    add x 32 // set position and palette of Armageddon graphic
	ife userdef.m_player_skill 5 set DISP_TEMP4 0
    else set DISP_TEMP4 54
	rotatespritea x 124 DISP_TEMP3 0 3597 0 DISP_TEMP4 16 -254 0 0 xdim ydim
	rotatespritea x 124 DISP_TEMP3 0 3597 0 DISP_TEMP4 16 -255 0 0 xdim ydim
ends

defstate override_dukecredits
        qputs 831 For the full credits for the AMC TC
        qputs 832 see "Credits.txt" included in the zip!
        gametext STARTALPHANUM 320 40 831 0 0 0 0 0 xdim ydim
        gametext STARTALPHANUM 320 50 832 0 0 0 0 0 xdim ydim
ends

onevent EVENT_CHANGEMENU

   ife RETURN 990 set RETURN 992
   else ife RETURN 991 set RETURN 994
   else ife RETURN 400 { add LOADING_SCREEN_HINT 1 mod LOADING_SCREEN_HINT NUMBER_OF_HINTS }
   else ife RETURN 401 { add LOADING_SCREEN_HINT 1 mod LOADING_SCREEN_HINT NUMBER_OF_HINTS }
endevent

onevent EVENT_DISPLAYINACTIVEMENUREST

ife RETURN 110 // Choose Skill
	{
	getuserdef[].m_volume_number DISP_TEMP
    state display_skill_info
	}
endevent



onevent EVENT_DISPLAYMENUREST

// Can't use a switch statement here due to nested switches
ife current_menu 200 set AUTOAIM_STATUS -1

// Help screen
else ife current_menu 400
	{
	rotatesprite 160 100 NNORMALSIZE 0 3584 0 0 1024 0 0 xdim ydim
    state helpscreen_hints
	}

else ife current_menu 401
	{
	rotatesprite 160 100 NNORMALSIZE 0 3584 0 0 1024 0 0 xdim ydim
    state helpscreen_hints
	}
// Display credits info
else ife current_menu 992 state override_dukecredits
// Display episode information
else ife current_menu 100
	{
	getuserdef[].m_volume_number DISP_TEMP

	switch DISP_TEMP
    case 0
		qputs 831 An attack on an EAF base precedes a sinister plot to unleash
		qputs 832 chaos on the world. Can the AMC squad stop this dark force from
		qputs 833 changing the face of the planet as we know it?
		break
    case 1
		qputs 831 The Triad have suddenly increased their hold on Asia, and have
		qputs 832 overthrown all law and order in China. Where did they get this new
		qputs 833 power from, and can the AMC Team stop it?
		break
	case 2
		qputs 831 The Warlock Sang's evil doppelganger, Le Sang, has surfaced deep in
		qputs 832 Egypt with an army of evil beings from beyond. Can Sangluss and the rest
		qputs 833 of the squad stop Le Sang from enslaving the planet?
		break
    case 3
		qputs 831 Stranded far, far away from Earth, the AMC Squad must
		qputs 832 traverse this vast location and not only find the evil
		qputs 833 responsible, but also a way home too.
        break
    default
    	qputs 831 
		qputs 832 Select custom maps to play using the AMC TC characters.
		qputs 833 
		break
    endswitch
    gametextz STARTALPHANUM 320 160 831 0 0 0 0 0 xdim ydim HALFSIZE
    gametextz STARTALPHANUM 320 165 832 0 0 0 0 0 xdim ydim HALFSIZE
    gametextz STARTALPHANUM 320 170 833 0 0 0 0 0 xdim ydim HALFSIZE
	}

else ife current_menu 110 // Choose Skill
	{
    state display_skill_info
	}

else ifg current_menu 20001 // Player Setup
	ifl current_menu 20004
        {
        rotatesprite 290 62 NORMALSIZE 0 3309 0 0 1024 0 0 xdim ydim // BG
        getp[].palookup DISP_TEMP2
        switch CHAR // James
        case 0
            rotatesprite 255 62 18384 0 5245 0 DISP_TEMP2 1024 0 0 xdim ydim // CHAR BIG
            rotatesprite 280 62 9192 0 5247 0 DISP_TEMP2 1024 0 0 xdim ydim // CHAR SIDE SMALL
            break
        case 1 // Zaxtor
            rotatesprite 255 62 HALFSIZE 0 5501 0 DISP_TEMP2 1024 0 0 xdim ydim // CHAR BIG
            rotatesprite 280 62 QUARTERSIZE 0 5503 0 DISP_TEMP2 1024 0 0 xdim ydim // CHAR SIDE SMALL
            break
        case 2 // Merlijn
            ife DISP_TEMP2 0 set DISP_TEMP2 21
            rotatesprite 255 62 QUARTERSIZE 0 6400 0 DISP_TEMP2 1024 0 0 xdim ydim // CHAR BIG
            rotatesprite 280 62 8192 0 6402 0 DISP_TEMP2 1024 0 0 xdim ydim // CHAR SIDE SMALL
            break
        case 3 // Highwire
            ife DISP_TEMP2 0 set DISP_TEMP2 11
            rotatesprite 255 62 HALFSIZE 0 6013 0 DISP_TEMP2 1024 0 0 xdim ydim // CHAR BIG
            rotatesprite 280 62 QUARTERSIZE 0 6015 0 DISP_TEMP2 1024 0 0 xdim ydim // CHAR SIDE SMALL
            break
        case 4 // Sang
            ife DISP_TEMP2 0 set DISP_TEMP2 21
            ifand CHAR_APP 2
                {
                rotatesprite 255 62 18384 0 23808 0 DISP_TEMP2 1024 0 0 xdim ydim // CHAR BIG
                rotatesprite 280 62 9192 0 23810 0 DISP_TEMP2 1024 0 0 xdim ydim // CHAR SIDE SMALL
                }
            else
                {
                rotatesprite 255 62 18384 0 6336 0 DISP_TEMP2 1024 0 0 xdim ydim // CHAR BIG
                rotatesprite 280 62 9192 0 6338 0 DISP_TEMP2 1024 0 0 xdim ydim // CHAR SIDE SMALL
                }
            break
        case 5 // Rusty
            ife DISP_TEMP2 0 set DISP_TEMP2 12
            rotatesprite 255 62 18384 0 6656 0 DISP_TEMP2 1024 0 0 xdim ydim // CHAR BIG
            rotatesprite 280 62 9192 0 6658 0 DISP_TEMP2 1024 0 0 xdim ydim // CHAR SIDE SMALL
            break
        case 6 // Geoffrey
            ife DISP_TEMP2 0 set DISP_TEMP2 21
            rotatesprite 255 62 18384 0 6456 0 DISP_TEMP2 1024 0 0 xdim ydim // CHAR BIG
            rotatesprite 280 62 9192 0 6432 0 DISP_TEMP2 1024 0 0 xdim ydim // CHAR SIDE SMALL
            break
        case 7 // Mikko
            ife DISP_TEMP2 0 set DISP_TEMP2 11
            rotatesprite 255 62 18384 0 6932 0 DISP_TEMP2 1024 0 0 xdim ydim // CHAR BIG
            rotatesprite 280 62 9192 0 6914 0 DISP_TEMP2 1024 0 0 xdim ydim // CHAR SIDE SMALL
            break
        case 9 // Cultist
            rotatesprite 255 62 18384 0 7680 0 DISP_TEMP2 1024 0 0 xdim ydim // CHAR BIG
            rotatesprite 280 62 9192 0 7682 0 DISP_TEMP2 1024 0 0 xdim ydim // CHAR SIDE SMALL
            break
        case 10 // Bombshell
            rotatesprite 255 62 HALFSIZE 0 10365 0 DISP_TEMP2 1024 0 0 xdim ydim // CHAR BIG
            rotatesprite 280 62 QUARTERSIZE 0 9905 0 DISP_TEMP2 1024 0 0 xdim ydim // CHAR SIDE SMALL
            break
        case 11 // Maarten
            rotatesprite 255 62 18384 0 26280 0 DISP_TEMP2 1024 0 0 xdim ydim // CHAR BIG
            rotatesprite 280 62 9132 0 26280 0 DISP_TEMP2 1024 0 0 xdim ydim // CHAR SIDE SMALL
            break
        case 12 // Jane
            ife DISP_TEMP2 0 set DISP_TEMP2 3
            rotatesprite 255 62 18384 0 12801 0 DISP_TEMP2 1024 0 0 xdim ydim // CHAR BIG
            rotatesprite 280 62 9192 0 12803 0 DISP_TEMP2 1024 0 0 xdim ydim // CHAR SIDE SMALL
            break
        case 13 // Micky
            rotatesprite 255 62 18384 0 16384 0 DISP_TEMP2 1024 0 0 xdim ydim // CHAR BIG
            rotatesprite 280 62 9192 0 16386 0 DISP_TEMP2 1024 0 0 xdim ydim // CHAR SIDE SMALL
            break
        case 14 // Snowfall
            rotatesprite 255 62 18384 0 20736 0 DISP_TEMP2 1024 0 0 xdim ydim // CHAR BIG
            rotatesprite 280 62 9192 0 20738 0 DISP_TEMP2 1024 0 0 xdim ydim // CHAR SIDE SMALL
            break
        endswitch
        }
endevent

onevent EVENT_DISPLAYMENU
ife current_menu 0 set DISP_MAINMENU 1

	ife DISP_MAINMENU 0
		{
		ife LOCATION 8448 rotatesprite 55 157 18210 0 13693 0 0 256 0 0 xdim ydim
		else ife LOCATION 8449 rotatesprite 55 157 18210 0 13698 0 0 256 0 0 xdim ydim
		else ife LOCATION 8450 rotatesprite 55 157 18210 0 13695 0 0 256 0 0 xdim ydim
		else ife LOCATION 8467 rotatesprite 55 157 18210 0 13696 0 0 256 0 0 xdim ydim
		else ife LOCATION 8459 rotatesprite 55 157 18210 0 13694 0 0 256 0 0 xdim ydim
		else ife LOCATION 20224 rotatesprite 55 157 39767 0 20224 0 0 256 0 0 xdim ydim
		else ife LOCATION 20429 rotatesprite 55 157 24210 0 20429 0 0 256 0 0 xdim ydim
		else rotatesprite 55 157 NORMALSIZE 0 LOCATION 0 0 256 0 0 xdim ydim
		}
		else
		{
		ife MAIN_MENU_TRACK 0
			{
			 getuserdef[].volume_number DISPLAYMENU_TEMP
			 setuserdef[].volume_number 0
			 readarrayfromfile BEAT_EPISODES 4053
			 ifand BEAT_EPISODES[2] 1024
			 starttrack 41 else
			 starttrack 40
			 set MAIN_MENU_TRACK 1
			 setuserdef[].volume_number DISPLAYMENU_TEMP
			}

		ifand BEAT_EPISODES[3] 65536
			{
			rotatesprite 160 100 40960 0 3599 0 0 1024 0 0 xdim ydim // background
			rotatesprite 55 157 18210 0 20428 10 0 256 0 0 xdim ydim // Uranus (HUHUHUHUHUHasghg325)
			}
		else ifand BEAT_EPISODES[2] 1024
			{
			rotatesprite 160 100 40960 0 23758 0 0 1024 0 0 xdim ydim // background
			rotatesprite 55 157 18210 0 13695 10 0 256 0 0 xdim ydim // Mars
			rotatespritea 55 157 18210 0 3608 10 0 256 -254 0 0 xdim ydim
			}
		else ifand BEAT_EPISODES[1] 128
			{
			rotatesprite 160 100 40960 0 23756 0 0 1024 0 0 xdim ydim // background
			rotatesprite 55 157 18210 0 13694 10 0 256 0 0 xdim ydim // Earth at night
			}
		else
			{
			rotatesprite 160 100 40960 0 23756 0 0 1024 0 0 xdim ydim // background
			rotatesprite 55 157 18210 0 13693 10 0 256 0 0 xdim ydim // Earth at day
			}



	  add DISPLAYMENU_TEMP2 2
	  ifg DISPLAYMENU_TEMP2 400 set DISPLAYMENU_TEMP2 -200

		readarrayfromfile BASE_RESEARCH 4003
		ife BASE_RESEARCH[7] 2 // show new AMC ship if researched
		rotatesprite DISPLAYMENU_TEMP2 105 7192 1024 22524 5 0 4 0 0 xdim ydim
		else rotatesprite DISPLAYMENU_TEMP2 105 8192 1024 3797 5 0 4 0 0 xdim ydim

		ifand BEAT_EPISODES[2] 1024 // 2nd AMC ship shows up once EP2 is done
			{
			set DISPLAYMENU_TEMP3 DISPLAYMENU_TEMP2
			sub DISPLAYMENU_TEMP3 15
			ife BASE_RESEARCH[7] 2 // show new AMC ship if researched
			rotatesprite DISPLAYMENU_TEMP3 120 6192 1024 22524 10 0 4 0 0 xdim ydim
			else rotatesprite DISPLAYMENU_TEMP3 120 7192 1024 3797 10 0 4 0 0 xdim ydim
			}

		ifn BEAT_EPISODES[3] 0 // Snowfall's ship will start appearing once any map in E3 is beaten
			{
			add DISPLAYMENU_TEMP4 1
			ifg DISPLAYMENU_TEMP4 400 set DISPLAYMENU_TEMP4 -200
			rotatesprite DISPLAYMENU_TEMP4 75 14192 0 23755 0 0 0 0 0 xdim ydim
			}

		ifand BEAT_EPISODES[3] 65536 // 3rd AMC ship shows up once EP3 is done
			{
			set DISPLAYMENU_TEMP3 DISPLAYMENU_TEMP2
			add DISPLAYMENU_TEMP3 25
			ife BASE_RESEARCH[7] 2 // show new AMC ship if researched
			rotatesprite DISPLAYMENU_TEMP3 150 11000 1024 22524 0 0 4 0 0 xdim ydim
			else rotatesprite DISPLAYMENU_TEMP3 150 12000 1024 3797 0 0 4 0 0 xdim ydim
			}

		}


	ife LOCATION 8450 rotatespritea 105 115 40960 0 3605 0 21 256 -255 0 0 xdim ydim
	else rotatespritea 105 115 40960 0 3605 0 0 256 -255 0 0 xdim ydim

    add DISP_TEMP7 2
    ifg DISP_TEMP7 2048 set DISP_TEMP7 0
    rotatespritea 10 135 INVENSIZE DISP_TEMP7 3228 20 12 256 -255 0 0 xdim ydim
    ifand BEAT_EPISODES[3] 65536 rotatespritea 10 135 INVENSIZE DISP_TEMP7 3227 26 12 256 -255 0 0 xdim ydim
    sub DISP_TEMP8 4
    ifl DISP_TEMP8 -2048 set DISP_TEMP8 0
    rotatespritea 10 135 QUARTERSIZE DISP_TEMP8 3228 10 12 256 -255 0 0 xdim ydim


    ife current_menu 100
    {
        getuserdef[].m_volume_number DISP_TEMP

        ife DISP_TEMP 0 rotatespritea 250 170 16384 0 3252 0 0 512 -255 0 0 xdim ydim
        ife DISP_TEMP 1 rotatespritea 250 170 16384 0 3253 0 0 512 -255 0 0 xdim ydim
        ife DISP_TEMP 2 rotatespritea 250 170 16384 0 3254 0 0 512 -255 0 0 xdim ydim
        ife DISP_TEMP 3 rotatespritea 76 160 NORMALSIZE 0 3255 0 0 512 -255 0 0 xdim ydim

    }

    ife current_menu 209
        {
        rotatespritea 160 100 45000 0 3584 0 4 1 -40 0 0 xdim ydim
        }

    getp[].palookup DISP_TEMP6

    ife CHAR 0 // JAMES
        {
        ife INJURED 1 // from PATCOS fight?
            {
            rotatesprite 294 144 98304 0 19157 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
            rotatesprite 290 140 98304 0 19157 CHARSHADE DISP_TEMP6 0 0 0 xdim ydim // CHARACTER
            }
            else
            {
            ifand CHAR_APP 1 set DISP_TEMP5 25630 else
            set DISP_TEMP5 5260
            rotatesprite 294 144 98304 0 DISP_TEMP5 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
            rotatesprite 290 140 98304 0 DISP_TEMP5 CHARSHADE DISP_TEMP6 0 0 0 xdim ydim // CHARACTER
            }
        }

    ife CHAR 1 // ZAXTOR
        {
        rotatesprite 294 144 98304 0 5501 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
        rotatesprite 290 140 98304 0 5501 CHARSHADE DISP_TEMP6 0 0 0 xdim ydim // CHARACTER
        }

    ife CHAR 2 // MERLIJN
        {
        ife DISP_TEMP6 0 set DISP_TEMP6 21
        rotatesprite 294 144 90304 0 6400 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
        rotatesprite 290 140 90304 0 6400 CHARSHADE DISP_TEMP6 0 0 0 xdim ydim // CHARACTER
        }

    ife CHAR 3 // HIGHWIRE
        {
        ife DISP_TEMP6 0 set DISP_TEMP6 11
        rotatesprite 294 144 90304 0 6073 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
        rotatesprite 290 140 90304 0 6073 CHARSHADE DISP_TEMP6 0 0 0 xdim ydim // CHARACTER
        }

    ife CHAR 4 // SANG
        {
        ife DISP_TEMP6 0 set DISP_TEMP6 21
        ifand CHAR_APP 2
            {
            rotatesprite 294 144 98304 0 23808 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
            rotatesprite 290 140 98304 0 23808 CHARSHADE DISP_TEMP6 0 0 0 xdim ydim // CHARACTER
            }
        else
            {
            rotatesprite 294 144 98304 0 6336 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
            rotatesprite 290 140 98304 0 6336 CHARSHADE DISP_TEMP6 0 0 0 xdim ydim // CHARACTER
            }
        }

    ife CHAR 5 // RUSTY
        {
        ife DISP_TEMP6 0 set DISP_TEMP6 12
        rotatesprite 294 144 90304 0 6676 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
        rotatesprite 290 140 90304 0 6676 CHARSHADE DISP_TEMP6 0 0 0 xdim ydim // CHARACTER
        }

    ife CHAR 6 // GEOFFREY
        {
        ife DISP_TEMP6 0 set DISP_TEMP6 21
        rotatesprite 294 144 84371 0 6456 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
        rotatesprite 290 140 84371 0 6456 CHARSHADE DISP_TEMP6 0 0 0 xdim ydim // CHARACTER
        }

    ife CHAR 7 // MIKKO
        {
        ife DISP_TEMP6 0 set DISP_TEMP6 11
        rotatesprite 294 144 98371 0 20074 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
        rotatesprite 290 140 98371 0 20074 CHARSHADE DISP_TEMP6 0 0 0 xdim ydim // CHARACTER
        }

    ife CHAR 9 // CULTIST
        {
        rotatesprite 294 144 101072 0 7680 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
        rotatesprite 290 140 101072 0 7680 CHARSHADE DISP_TEMP6 0 0 0 xdim ydim // CHARACTER
        }

    ife CHAR 10 // BOMBSHELL
        {
        rotatesprite 294 144 98304 0 10365 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
        rotatesprite 290 140 98304 0 10365 CHARSHADE DISP_TEMP6 0 0 0 xdim ydim // CHARACTER
        }

    ife CHAR 11 // MAARTEN
        {
        rotatesprite 294 144 88371 0 26280 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
        rotatesprite 290 140 88371 0 26280 CHARSHADE DISP_TEMP6 0 0 0 xdim ydim // CHARACTER
        }

    ife CHAR 12 // JANE
        {
        ife DISP_TEMP6 0 set DISP_TEMP6 3
        rotatesprite 294 144 76304 0 12801 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
        rotatesprite 290 140 76304 0 12801 CHARSHADE DISP_TEMP6 0 0 0 xdim ydim // CHARACTER
        }

    ife CHAR 13 // MICKY
        {
        rotatesprite 294 144 76304 0 16384 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
        rotatesprite 290 140 76304 0 16384 CHARSHADE DISP_TEMP6 0 0 0 xdim ydim // CHARACTER
        }

    ife CHAR 14 // Snowfall
        {
        ife TIMEZONE 6
            {
            rotatesprite 294 144 151072 0 15599 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
            rotatesprite 290 140 151072 0 15599 CHARSHADE 18 0 0 0 xdim ydim // CHARACTER
            }
        else
            {
            rotatesprite 294 144 76304 0 20736 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
            rotatesprite 290 140 76304 0 20736 CHARSHADE DISP_TEMP6 0 0 0 xdim ydim // CHARACTER
            }
        }

endevent

onevent EVENT_DISPLAYBONUSSCREEN

ife CHEATED 1 gametext STARTALPHANUM 27 158 8500 0 2 0 0 0 xdim ydim
else
ifg AMC_BUDGET_INCREASE 0
{
qsprintf 1026 1027 AMC_BUDGET_INCREASE
gametext STARTALPHANUM 27 158 1026 0 0 0 0 0 xdim ydim
}
ifg LOADOUT_COST 0
	{
	set TEMP6 LOADOUT_COST

        // Display 2 digits after the comma
        set DISP_TEMP9 TEMP6
        divvar DISP_TEMP9 10
        modvar DISP_TEMP9 10

        set DISP_TEMP8 TEMP6
        divvar DISP_TEMP8 100
        modvar DISP_TEMP8 10

	divvar TEMP6 1000

        qsprintf 1026 1090 TEMP6 DISP_TEMP8 DISP_TEMP9
	gametext STARTALPHANUM 27 168 1026 0 2 0 0 0 xdim ydim
	}

readgamevar AMC_BUDGET
qsprintf 1023 1024 AMC_BUDGET
gametext STARTALPHANUM 27 178 1023 0 0 0 0 0 xdim ydim

getp[].palookup DISP_TEMP6

ife CHAR 0 // JAMES
	{
	ifand CHAR_APP 1 set DISP_TEMP5 25630 else
	set DISP_TEMP5 5260
	rotatesprite 294 144 98304 0 DISP_TEMP5 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
	rotatesprite 290 140 98304 0 DISP_TEMP5 CHARSHADE DISP_TEMP6 0 0 0 xdim ydim // CHARACTER
	}

ife CHAR 1 // ZAXTOR
	{
	rotatesprite 294 144 98304 0 5501 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
	rotatesprite 290 140 98304 0 5501 CHARSHADE DISP_TEMP6 0 0 0 xdim ydim // CHARACTER
	}

ife CHAR 2 // MERLIJN
	{
	ife DISP_TEMP6 0 set DISP_TEMP6 21
	rotatesprite 294 144 90304 0 6400 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
	rotatesprite 290 140 90304 0 6400 CHARSHADE DISP_TEMP6 0 0 0 xdim ydim // CHARACTER
	}

ife CHAR 3 // HIGHWIRE
	{
	ife DISP_TEMP6 0 set DISP_TEMP6 11
	rotatesprite 294 144 90304 0 6073 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
	rotatesprite 290 140 90304 0 6073 CHARSHADE DISP_TEMP6 0 0 0 xdim ydim // CHARACTER
	}

ife CHAR 4 // SANG
	{
	ife DISP_TEMP6 0 set DISP_TEMP6 21
	ifand CHAR_APP 2
		{
		rotatesprite 294 144 98304 0 23808 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
		rotatesprite 290 140 98304 0 23808 CHARSHADE DISP_TEMP6 0 0 0 xdim ydim // CHARACTER
		}
	else
		{
		rotatesprite 294 144 98304 0 6336 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
		rotatesprite 290 140 98304 0 6336 CHARSHADE DISP_TEMP6 0 0 0 xdim ydim // CHARACTER
		}
	}

ife CHAR 5 // RUSTY
	{
	ife DISP_TEMP6 0 set DISP_TEMP6 12
	rotatesprite 294 144 90304 0 6676 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
	rotatesprite 290 140 90304 0 6676 CHARSHADE DISP_TEMP6 0 0 0 xdim ydim // CHARACTER
	}

ife CHAR 6 // GEOFFREY
	{
	ife DISP_TEMP6 0 set DISP_TEMP6 21
	rotatesprite 294 144 84370 0 6456 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
	rotatesprite 290 140 84370 0 6456 CHARSHADE DISP_TEMP6 0 0 0 xdim ydim // CHARACTER
	}

ife CHAR 7 // MIKKO
	{
	ife DISP_TEMP6 0 set DISP_TEMP6 11
	rotatesprite 294 144 98370 0 20074 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
	rotatesprite 290 140 98370 0 20074 CHARSHADE DISP_TEMP6 0 0 0 xdim ydim // CHARACTER
	}

ife CHAR 9 // CULTIST
	{
	rotatesprite 294 144 101072 0 7680 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
	rotatesprite 290 140 101072 0 7680 CHARSHADE DISP_TEMP6 0 0 0 xdim ydim // CHARACTER
	}

ife CHAR 10 // BOMBSHELL
	{
	rotatesprite 294 144 DOUBLESIZE 0 10365 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
	rotatesprite 290 140 DOUBLESIZE 0 10365 CHARSHADE DISP_TEMP6 0 0 0 xdim ydim // CHARACTER
	}

ife CHAR 11 // MAARTEN
	{
	rotatesprite 294 144 80304 0 26280 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
	rotatesprite 290 140 80304 0 26280 CHARSHADE DISP_TEMP6 0 0 0 xdim ydim // CHARACTER
	}

ife CHAR 12 // JANE
	{
	ife DISP_TEMP6 0 set DISP_TEMP6 3
	rotatesprite 294 144 76304 0 12801 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
	rotatesprite 290 140 76304 0 12801 CHARSHADE DISP_TEMP6 0 0 0 xdim ydim // CHARACTER
	}

ife CHAR 13 // MICKY
	{
	rotatesprite 294 144 76304 0 16384 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
	rotatesprite 290 140 76304 0 16384 CHARSHADE DISP_TEMP6 0 0 0 xdim ydim // CHARACTER
	}

ife CHAR 14 // Snowfall
	{
	rotatesprite 294 144 76304 0 20736 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
	rotatesprite 290 140 76304 0 20736 CHARSHADE DISP_TEMP6 0 0 0 xdim ydim // CHARACTER
	}

endevent

onevent EVENT_DISPLAYACCESS
set RETURN 1
set SHIELDUP 0
set MSHIELDUP 0
setp[].weapon_pos 9
endevent

onevent EVENT_DISPLAYTIP
set RETURN 1
set SHIELDUP 0
set MSHIELDUP 0
setp[].weapon_pos 9
getp[].tipincs DISP_TEMP

getp[].horiz DISP_TEMP3

sub DISP_TEMP3 player[].horizoff
divvar DISP_TEMP3 4

set DISP_TEMP6 CTIP

switch DISP_TEMP
 case 26
 case 25
 case 24
 case 23
 case 22
 case 21
	set DISP_TEMP2 240
	add DISP_TEMP2 DISP_TEMP3
  break
 case 20
 	set DISP_TEMP2 240
	add DISP_TEMP2 DISP_TEMP3
 	sub DISP_TEMP2 8
  break
 case 19
 	set DISP_TEMP2 240
	add DISP_TEMP2 DISP_TEMP3
	sub DISP_TEMP2 16
  break
 case 18
 	set DISP_TEMP2 240
	add DISP_TEMP2 DISP_TEMP3
	sub DISP_TEMP2 32
  break
 case 17
 	set DISP_TEMP2 240
	add DISP_TEMP2 DISP_TEMP3
	sub DISP_TEMP2 64
  break
 case 16
 	set DISP_TEMP2 240
	add DISP_TEMP2 DISP_TEMP3
	sub DISP_TEMP2 84
  break
 case 15
 case 14
 case 13
 case 12
 case 11
 	set DISP_TEMP2 240
	add DISP_TEMP2 DISP_TEMP3
	sub DISP_TEMP2 96
  break
 case 10
 case 9
 case 8
 case 7
 case 6
 	set DISP_TEMP2 240
	add DISP_TEMP2 DISP_TEMP3
	sub DISP_TEMP2 96
	add DISP_TEMP6 1
  break
 case 5
 	set DISP_TEMP2 240
	add DISP_TEMP2 DISP_TEMP3
	sub DISP_TEMP2 84
	add DISP_TEMP6 1
  break
 case 4
 	set DISP_TEMP2 240
	add DISP_TEMP2 DISP_TEMP3
	sub DISP_TEMP2 72
	add DISP_TEMP6 1
  break
 case 3
 	set DISP_TEMP2 240
	add DISP_TEMP2 DISP_TEMP3
	sub DISP_TEMP2 64
	add DISP_TEMP6 1
  break
 case 2
 	set DISP_TEMP2 240
	add DISP_TEMP2 DISP_TEMP3
	sub DISP_TEMP2 32
	add DISP_TEMP6 1
  break
 case 1
 	set DISP_TEMP2 240
	add DISP_TEMP2 DISP_TEMP3
	sub DISP_TEMP2 16
	add DISP_TEMP6 1
 case 0
  break
endswitch
ifn DISP_TEMP 0
	{
	ife CHAR 0 ifand CHAR_APP 1 rotatesprite 130 DISP_TEMP2 NORMALSIZE 1024 DISP_TEMP6 shade pal 4 0 0 xdim ydim
	else
	rotatesprite 170 DISP_TEMP2 NORMALSIZE 0 DISP_TEMP6 shade pal 0 0 0 xdim ydim
	}
endevent

onevent EVENT_DISPLAYSCUBA
		ife CHAR 0
			{
			myospal 44 171 2583 shade 16 pal
			myospal 278 171 2583 shade 20 pal
			rotatesprite 160 100 NNORMALSIZE 0 2586 shade pal 1024 0 0 xdim ydim
			ifl player_shade_diff -5
				{
				set WEAP_DISP_TEMP3 player_shade_diff
				mulvar WEAP_DISP_TEMP3 2
				rotatespritea 160 100 NNORMALSIZE 0 2587 player_shade_diff wall_pal 33 WEAP_DISP_TEMP3 0 0 xdim ydim // Glass in holosight
				}

			ife AIR_FILTER 1 myospal 160 191 6117 0 0 0
			else
				{
				getp[].scuba_amount DISP_TEMP2
				divvar DISP_TEMP2 128
				digitalnumberz 2472 160 191 DISP_TEMP2 0 4 0 0 0 xdim ydim 45536
				}
			}
		else
		ife CHAR 2
			{
			rotatesprite 160 100 NNORMALSIZE 0 2593 shade pal 1024 0 0 xdim ydim
			ifl player_shade_diff -5
				{
				set WEAP_DISP_TEMP3 player_shade_diff
				mulvar WEAP_DISP_TEMP3 2
				rotatespritea 160 100 NNORMALSIZE 0 2587 player_shade_diff wall_pal 33 WEAP_DISP_TEMP3 0 0 xdim ydim // Glass in holosight
				}
			}
		else
		ife CHAR 4
			{
			rotatesprite 160 100 NNORMALSIZE 0 6009 shade pal 1024 0 0 xdim ydim
			ifl player_shade_diff -5
				{
				set WEAP_DISP_TEMP3 player_shade_diff
				mulvar WEAP_DISP_TEMP3 2
				rotatespritea 106 84 HALFSIZE 0 2587 player_shade_diff wall_pal 33 WEAP_DISP_TEMP3 0 0 xdim ydim // Glass in holosight
				rotatespritea 235 88 HALFSIZE 0 2587 player_shade_diff wall_pal 33 WEAP_DISP_TEMP3 0 0 xdim ydim // Glass in holosight
				}
			}
		else
		ife CHAR 3
			{
			rotatesprite 160 100 NNORMALSIZE 0 6005 shade pal 1024 0 0 xdim ydim
			ifl player_shade_diff -5
				{
				set WEAP_DISP_TEMP3 player_shade_diff
				mulvar WEAP_DISP_TEMP3 2
				rotatespritea 106 84 HALFSIZE 0 2587 player_shade_diff wall_pal 33 WEAP_DISP_TEMP3 0 0 xdim ydim // Glass in holosight
				rotatespritea 235 88 HALFSIZE 0 2587 player_shade_diff wall_pal 33 WEAP_DISP_TEMP3 0 0 xdim ydim // Glass in holosight
				}
			}
		else
		ife CHAR 5
			{
			ifl player_shade_diff -5
				{
				set WEAP_DISP_TEMP3 player_shade_diff
				mulvar WEAP_DISP_TEMP3 2
				rotatespritea 160 100 NNORMALSIZE 0 2587 player_shade_diff wall_pal 33 WEAP_DISP_TEMP3 0 0 xdim ydim // Glass in holosight
				}
			myospal 160 100 2588 shade 1024 pal
			}
		else
		ife CHAR 6
			{
			myospal 44 171 2594 shade 16 pal
			myospal 278 171 2594 shade 20 pal
			}
		else
		ife CHAR 7
			{
			rotatesprite 160 200 NNORMALSIZE 0 7092 shade pal 1024 0 0 xdim ydim
			ifl player_shade_diff -5
				{
				set WEAP_DISP_TEMP3 player_shade_diff
				mulvar WEAP_DISP_TEMP3 2
				rotatespritea 160 100 NNORMALSIZE 0 2587 player_shade_diff wall_pal 33 WEAP_DISP_TEMP3 0 0 xdim ydim // Glass in holosight
				}
			}
		else
		ife CHAR 10
			{
			myospal 44 171 2583 shade 16 pal
			myospal 278 171 2583 shade 20 pal
			rotatesprite 160 100 NNORMALSIZE 0 2586 shade pal 1024 0 0 xdim ydim
			ifl player_shade_diff -5
				{
				set WEAP_DISP_TEMP3 player_shade_diff
				mulvar WEAP_DISP_TEMP3 2
				rotatespritea 160 100 NNORMALSIZE 0 2587 player_shade_diff wall_pal 33 WEAP_DISP_TEMP3 0 0 xdim ydim // Glass in holosight
				}
			ife AIR_FILTER 1 myospal 160 191 6117 0 0 0
			else
				{
				getp[].scuba_amount DISP_TEMP2
				divvar DISP_TEMP2 128
				digitalnumberz 2472 160 191 DISP_TEMP2 0 4 0 0 0 xdim ydim 45536
				}
			}
		else
		ife CHAR 11
			{
			rotatesprite 160 100 NNORMALSIZE 0 2593 shade pal 1024 0 0 xdim ydim
			ifl player_shade_diff -5
				{
				set WEAP_DISP_TEMP3 player_shade_diff
				mulvar WEAP_DISP_TEMP3 2
				rotatespritea 160 100 NNORMALSIZE 0 2587 player_shade_diff wall_pal 33 WEAP_DISP_TEMP3 0 0 xdim ydim // Glass in holosight
				}
			}
		else
			{
			myospal 44 171 2582 shade 16 pal
			myospal 277 171 2582 shade 20 pal
			ife AIR_FILTER 1 myospal 160 191 6117 0 0 0
			else
				{
				getp[].scuba_amount DISP_TEMP2
				divvar DISP_TEMP2 64
				digitalnumberz 2472 160 197 DISP_TEMP2 0 8 0 0 0 xdim ydim 45536
				}
			}
endevent

onevent EVENT_DISPLAYSBAR
set RETURN 1
endevent

onevent EVENT_DISPLAYBORDER
set RETURN 5684
endevent

onevent EVENT_DISPLAYREST
ife userdef[].screen_size 0 set HUDON 1 else set HUDON 0

ifn camerasprite -1 // Is the player in a cutscene?
{
set MOUSEUP 0
	ife cameratype 4 // flier
	{
	set HUDON 0
	rotatesprite 160 100 NORMALSIZE 0 3633 0 0 1024 0 0 xdim ydim
	state helmet_huds
	}

	ife cameratype 5 // camera
	{
	set HUDON 0
	rotatesprite 47 28 NORMALSIZE 0 2482 0 0 256 0 0 xdim ydim
	rotatesprite 273 28 NORMALSIZE 0 2483 0 0 512 0 0 xdim ydim
	rotatesprite 47 172 NORMALSIZE 1024 2483 0 0 256 0 0 xdim ydim
	rotatesprite 273 172 NORMALSIZE 0 2483 0 0 516 0 0 xdim ydim
	}

	ife cameratype 6 // news
	{
	set HUDON 0
	rotatesprite 160 100 NORMALSIZE 0 8494 0 0 1024 0 0 xdim ydim
	}

	ife cameratype 7 // news 2
	{
	set HUDON 0
	rotatesprite 160 100 NORMALSIZE 0 8493 0 0 1024 0 0 xdim ydim
	}

	ife cameratype 8 // in-game hud
	{
	state helmet_huds
	set HUDON 0
	}

ife cameratype 9 // flier locked on
	{
	getactorvar[camerasprite].cameratime DISP_TEMP
	ifl DISP_TEMP 90
		{
		soundonce TRACKED
		rotatesprite 160 100 NORMALSIZE 0 3632 0 0 1024 0 0 xdim ydim
		}
	else
	rotatesprite 160 100 NORMALSIZE 0 3633 0 0 1024 0 0 xdim ydim
	set HUDON 0
	state helmet_huds
	}

	ife cameratype 10 // drone
	{
	set HUDON 0
	rotatesprite 47 28 NORMALSIZE 0 2482 0 0 256 0 0 xdim ydim
	rotatesprite 273 28 NORMALSIZE 0 2483 0 0 512 0 0 xdim ydim
	rotatesprite 47 172 NORMALSIZE 1024 2483 0 0 256 0 0 xdim ydim
	rotatesprite 273 172 NORMALSIZE 0 2483 0 0 516 0 0 xdim ydim
	}

	ife cameratype 11 // new flier
	{
	set HUDON 0
	rotatesprite 160 100 NORMALSIZE 0 3639 0 0 1024 0 0 xdim ydim
	state helmet_huds
	}

	ifn cameratype 0 // CUTSCENE TYPE
	ifn cameratype 4
	ifn cameratype 5
	ifn cameratype 6
	ifn cameratype 7
	ifn cameratype 8
	ifn cameratype 9
	ifn cameratype 10
	{
	set HUDON 1
	rotatesprite 160 100 NNORMALSIZE 0 3542 0 0 1024 0 0 xdim ydim
	}

}

ifg camerasprite -1
	{
	ife cameratype 4 state player_huds
	ife cameratype 8 state player_huds
	ife cameratype 9 state player_huds
	}


ifg bomb_throw_power 0
	{
	myospalx 160 156 9025 0 1 2
	set DISP_TEMP bomb_throw_power
	mulvar DISP_TEMP 8
	rotatesprite 160 156 HALFSIZE DISP_TEMP 9026 0 0 0 0 0 xdim ydim
	}

ifg DS_LOCATION 0
	{
	ife DS_LOCATION 180 screensound WIND_TRANS
    ifg DS_LOCATION 150
		{
		set DISP_TEMP -150
		add DISP_TEMP DS_LOCATION
		}
	ifl DS_LOCATION 30
		{
		set DISP_TEMP 30
		sub DISP_TEMP DS_LOCATION
		}
	ifg DS_LOCATION 15 rotatespritea 161 141 HALFSIZE 0 DS_PICNUM 30 4 0 DS_LOCATION 0 0 xdim ydim
	rotatespritea 160 140 HALFSIZE 0 DS_PICNUM DISP_TEMP 0 0 -255 0 0 xdim ydim
	}

ife player[].over_shoulder_on 0
{

ifl water_screen -16
 ife camerasprite -1
	{
	set DISP_TEMP 18168
	add DISP_TEMP water_screen
	rotatespritea 160 100 407680 0 DISP_TEMP water_screen pal 0 -255 0 0 xdim ydim
	}

ifn ANGLE 0 // player in tank?
	{
	geta[SET].extra DISP_TEMP2
	digitalnumber DIGITALNUM 160 20 DISP_TEMP2 0 8 0 0 0 xdim ydim // Show tank's health
	ifand GUNFIREMODE 262144 gametext 17158 160 30 7046 0 8 0 0 0 xdim ydim
	else gametext 17158 160 30 7045 0 8 0 0 0 xdim ydim
	set x 270
	set y 165
	sub x WEAPSWAYX
	sub y WEAPSWAYY

	 ife TANK_MACHINEGUN 3
	    {
		add x 2
		add y 2
		set DISP_TEMP8 13634
		set DISP_TEMP9 6904

	  state random_AR_flash
	  sub x 40
	  sub y 20
	  rotatespritea x y 32638 0 M60FLASH 0 0 0 -255 0 0 xdim ydim
	  add x 40
	  add y 20

		}
		else { set DISP_TEMP8 13633 set DISP_TEMP9 6895 }

	sub x 100
	add y 40
	rotatesprite x y NORMALSIZE 0 DISP_TEMP9 shade pal 0 0 0 xdim ydim // display chain
	add x 100
	sub y 40
	rotatesprite x y NORMALSIZE 0 DISP_TEMP8 shade pal 0 0 0 xdim ydim // display M249

				ifg control_display 0
				{
				minitext 16 60 7040 0 4
				minitext 15 60 7040 0 125

				minitext 16 70 7041 0 4
				minitext 15 70 7041 0 125

				getkeyname 406 12 2
				minitext 16 80 406 0 4
				minitext 15 80 406 0 125

				minitext 26 80 7042 0 4
				minitext 25 80 7042 0 125


				getkeyname 406 9 2
				minitext 16 90 406 0 4
				minitext 15 90 406 0 125

				minitext 26 90 7023 0 4
				minitext 25 90 7023 0 125
				}


	}


	ifn player_using_mech -1 // Mech HUD
	{
	ifg hc_missile_fire 31 set DISP_TEMP8 11210 else set DISP_TEMP8 11209
	set DISP_TEMP7 10
	add DISP_TEMP7 mech_hud_shake
	rotatesprite 35 DISP_TEMP7 55000 0 DISP_TEMP8 shade pal 256 0 0 xdim ydim // Missile Launcher
	rotatesprite 285 DISP_TEMP7 55000 1024 DISP_TEMP8 shade pal 516 0 0 xdim ydim // Missile Launcher


	set DISP_TEMP6 265
	add DISP_TEMP6 WEAPSWAYX
	set DISP_TEMP7 180
	add DISP_TEMP7 WEAPSWAYY
	add DISP_TEMP7 mech_hud_shake

	ifg mech_maingun_fire 24
		{
		add DISP_TEMP6 8
		add DISP_TEMP7 8
		displayrandvar M60FLASH 2048
			sub DISP_TEMP6 70
			sub DISP_TEMP7 30
			rotatespritea DISP_TEMP6 DISP_TEMP7 HALFSIZE M60FLASH 16114 shade pal 512 -255 0 0 xdim ydim
			add DISP_TEMP6 70
			add DISP_TEMP7 30
		set DISP_TEMP8 11212
		}
	else
		{
		ifg DISP_TEMP6 265 sub DISP_TEMP6 1
		ifg DISP_TEMP7 180 sub DISP_TEMP7 1
		set DISP_TEMP8 11211
		}
	rotatesprite DISP_TEMP6 DISP_TEMP7 55000 0 DISP_TEMP8 shade pal 512 0 0 xdim ydim
	ifg mech_maingun_fire 0
	 ifl mech_maingun_fire 24
		{
		set DISP_TEMP5 24
		sub DISP_TEMP5 mech_maingun_fire
		rotatespritea DISP_TEMP6 DISP_TEMP7 55000 0 11213 DISP_TEMP5 0 512 -255 0 0 xdim ydim
		}


	ifg mech_startup_sequence 0
	{
	ifl mech_startup_sequence 10 myospal 160 100 4816 20 1057 0
	else ifl mech_startup_sequence 20 myospal 160 100 4816 20 1025 0
	else myospal 160 100 4816 20 1024 0
	ifg mech_startup_sequence 20
	 ifl mech_startup_sequence 35
		{
		set DISP_TEMP mech_startup_sequence
		sub DISP_TEMP 10
		ifg DISP_TEMP 25 set DISP_TEMP 25
		rotatesprite 160 100 DOUBLESIZE 0 1261 DISP_TEMP 12 1057 0 0 xdim ydim
		}
    ife mech_startup_sequence 23 { rotatesprite 160 100 282144 1536 351 0 0 1024 0 0 xdim ydim soundonce STATIC_S }
	ife mech_startup_sequence 22 rotatesprite 160 100 282144 1024 351 0 0 1024 0 0 xdim ydim
	ife mech_startup_sequence 21 rotatesprite 160 100 282144 512 351 0 0 1024 0 0 xdim ydim
	ife mech_startup_sequence 20 rotatesprite 160 100 282144 0 351 0 0 1024 0 0 xdim ydim
	set DISP_TEMP mech_startup_sequence
	ifg DISP_TEMP 25 set DISP_TEMP 25
	rotatesprite 160 100 NORMALSIZE 0 2587 DISP_TEMP pal 1057 0 0 xdim ydim // Glass
	rotatesprite 160 100 NORMALSIZE 0 11214 DISP_TEMP pal 1024 0 0 xdim ydim // Cockpit

	ifg mech_startup_sequence 20
		{
		ife mech_startup_sequence 170 sound MS_MECH_BLIP
		ifl mech_startup_sequence 170 minitext 40 30 7000 0 8

		ife mech_startup_sequence 160 sound MS_MECH_BLIP
		ifl mech_startup_sequence 160 minitext 40 40 7001 0 8

		ife mech_startup_sequence 150 sound MS_MECH_BLIP
		ifl mech_startup_sequence 150 minitext 40 50 7002 0 8

		ife mech_startup_sequence 140 sound MS_MECH_BLIP
		ifl mech_startup_sequence 140
			{
			getactorvar[player_using_mech].HITAGSAVED DISP_TEMP2
			ife DISP_TEMP2 0 minitext 40 60 7003 0 8
			else minitext 40 60 7004 0 2
			}

		ife mech_startup_sequence 130 sound MS_MECH_BLIP
		ifl mech_startup_sequence 130 minitext 40 70 7005 0 8

		ife mech_startup_sequence 120 sound MS_MECH_BLIP
		ifl mech_startup_sequence 120 minitext 40 80 7006 0 8

		ife mech_startup_sequence 110 sound MS_MECH_BLIP
		ifl mech_startup_sequence 110 minitext 40 90 7007 0 8

		ife mech_startup_sequence 100 sound MS_MECH_BLIP
		ifl mech_startup_sequence 100 minitext 40 100 7009 0 2

		ife mech_startup_sequence 80 sound MS_MECH_BLIP
		ifl mech_startup_sequence 80
			{
			ife CHAR 7 minitext 40 110 7010 0 8
			else
				{
				minitext 40 110 7011 0 2
				minitext 40 120 7012 0 2
				}
			}

		ife mech_startup_sequence 70 sound MS_MECH_BLIP
		ifl mech_startup_sequence 70 minitext 40 130 7013 0 8

		ife mech_startup_sequence 60 sound MS_MECH_BLIP
		ifl mech_startup_sequence 60 minitext 40 150 7014 0 8
		}

	ife mech_startup_sequence 2 soundonce MS_MECH_START
	}
	else
		{
		set DISP_TEMP6 100
		add DISP_TEMP6 mech_hud_shake
		rotatesprite 160 DISP_TEMP6 NORMALSIZE 0 2587 shade pal 1057 0 0 xdim ydim // Glass
		rotatesprite 160 DISP_TEMP6 NORMALSIZE 0 11214 shade pal 1024 0 0 xdim ydim // Cockpit

		geta[player_using_mech].extra DISP_TEMP2
		digitalnumber DIGITALNUM 160 180 DISP_TEMP2 0 0 0 0 0 xdim ydim // Show mech's health
		}

		ifg control_display 0
			{
			minitext 21 100 7020 0 4
			minitext 20 100 7020 0 125

			minitext 21 110 7021 0 4
			minitext 20 110 7021 0 125

			getkeyname 406 10 2
			minitext 21 120 406 0 4
			minitext 20 120 406 0 125
			minitext 36 120 7022 0 4
			minitext 35 120 7022 0 125

			getkeyname 406 9 2
			minitext 21 130 406 0 4
			minitext 20 130 406 0 125
			minitext 36 130 7023 0 4
			minitext 35 130 7023 0 125
			}

	}


	getuserdef[].overhead_on DISP_TEMP

	ifn DISP_TEMP 2
	{
		ifn player_using_hovercraft -1 // Hovercraft HUD
		{
		set DISP_TEMP 50
		getp[].horiz DISP_TEMP2
		divvar DISP_TEMP2 2
		add DISP_TEMP DISP_TEMP2
		rotatesprite 160 DISP_TEMP NNORMALSIZE 0 11221 shade pal 1024 0 0 xdim ydim // show boat hud
		geta[player_using_hovercraft].extra DISP_TEMP7
		sub DISP_TEMP 72
		digitalnumber DIGITALNUM 160 DISP_TEMP DISP_TEMP7 0 0 0 0 0 xdim ydim // Show boat's health
		add DISP_TEMP 238
		geta[].pal DISP_TEMP7
		ife CHAR 3 ife DISP_TEMP7 0 set DISP_TEMP7 11 // if it's Highwire, make his legs green if the default colour

		rotatesprite 240 DISP_TEMP NORMALSIZE 0 CKNEE shade DISP_TEMP7 0 0 0 xdim ydim // Show right leg
		ifand EXTBITS_PRESS 1 add DISP_TEMP 5
		rotatesprite 80 DISP_TEMP NORMALSIZE 1024 CKNEE shade DISP_TEMP7 4 0 0 xdim ydim // Show left leg

		getinput[].avel DISP_TEMP3

		add DISP_TEMP2 160

		geta[player_using_hovercraft].pal DISP_TEMP7
		ife DISP_TEMP7 26 set DISP_TEMP7 0
		rotatesprite 160 DISP_TEMP2 NORMALSIZE DISP_TEMP3 11222 shade DISP_TEMP7 0 0 0 xdim ydim // Show steering wheel
		add DISP_TEMP2 30
		rotatesprite 220 DISP_TEMP2 NORMALSIZE DISP_TEMP3 CHOLDING shade pal 0 0 0 xdim ydim // Show right hand
		add DISP_TEMP3 1024
		rotatesprite 100 DISP_TEMP2 NORMALSIZE DISP_TEMP3 CHOLDING_2 shade pal 4 0 0 xdim ydim // Show left hand

		getactorvar[player_using_hovercraft].forward_accelerate DISP_TEMP6

		ifg DISP_TEMP6 1199 set tilenum 9124 else
		ifg DISP_TEMP6 800 set tilenum 9125 else
		ifg DISP_TEMP6 600 set tilenum 9126 else
		ifg DISP_TEMP6 400 set tilenum 9127 else
		ifg DISP_TEMP6 200 set tilenum 9128 else
		ifg DISP_TEMP6 0 set tilenum 9129 else
		ife DISP_TEMP6 0 set tilenum 9130 else
		ifl DISP_TEMP6 0 set tilenum 2957

		sub DISP_TEMP2 85

		rotatesprite 160 DISP_TEMP2 NORMALSIZE 512 tilenum 0 0 0 0 0 xdim ydim // Speed icon

		digitalnumber DIGITALNUM 190 DISP_TEMP2 hc_gear 0 0 0 0 0 xdim ydim

		ifand GUNFIREMODE 262144
		{
		ife hc_missile_fire 0 set DISP_TEMP8 8 else set DISP_TEMP8 2
		rotatesprite 60 DISP_TEMP2 QUARTERSIZE 0 11224 0 DISP_TEMP8 0 0 0 xdim ydim // Missile Icon
		}
		else
		{
		ife hc_missile_fire 0 set DISP_TEMP8 8 else set DISP_TEMP8 2
		rotatesprite 60 DISP_TEMP2 QUARTERSIZE 0 11226 0 DISP_TEMP8 0 0 0 xdim ydim // Missile Icon
		}

		sub DISP_TEMP2 20
		ifand BITS_PRESS 4 set DISP_TEMP8 2 else set DISP_TEMP8 8
		rotatesprite 60 DISP_TEMP2 QUARTERSIZE 0 11223 0 DISP_TEMP8 0 0 0 xdim ydim // Machinegun icon


			ifg control_display 0
				{
				minitext 16 60 7030 0 4
				minitext 15 60 7030 0 125

				minitext 16 70 7031 0 4
				minitext 15 70 7031 0 125

				getkeyname 406 12 2

				minitext 16 80 406 0 4
				minitext 15 80 406 0 125

				minitext 26 80 7033 0 4
				minitext 25 80 7033 0 125

				minitext 16 90 7032 0 4
				minitext 15 90 7032 0 125

				getkeyname 406 9 2

				minitext 16 100 406 0 4
				minitext 15 100 406 0 125

				minitext 26 100 7023 0 4
				minitext 25 100 7023 0 125
				}

		}

		ifn player_using_hovertank -1 // hovertank HUD
		{
		rotatesprite 160 180 36863 0 21596 shade pal 0 0 0 xdim ydim // show hovertank hud


		geta[player_using_hovertank].extra DISP_TEMP
		digitalnumber DIGITALNUM 160 180 DISP_TEMP 0 8 16 0 0 xdim ydim // Show tank's health


		getactorvar[player_using_hovertank].forward_accelerate DISP_TEMP6

		ifg DISP_TEMP6 1199 set tilenum 15345 else
		ifg DISP_TEMP6 800 set tilenum 15346 else
		ifg DISP_TEMP6 600 set tilenum 15347 else
		ifg DISP_TEMP6 400 set tilenum 15348 else
		ifg DISP_TEMP6 200 set tilenum 15349 else
		ifg DISP_TEMP6 0 set tilenum 15350 else
		ife DISP_TEMP6 0 set tilenum 15343 else
		ifl DISP_TEMP6 0 set tilenum 15350

		rotatespritea 85 175 34000 0 tilenum 0 8 1 -255 0 0 xdim ydim // Speed icon
		digitalnumber DIGITALNUM 95 180 hc_gear 0 8 16 0 0 xdim ydim


			ifg control_display 0
				{
				minitext 16 60 7050 0 4
				minitext 15 60 7050 0 125

				minitext 16 70 7031 0 4
				minitext 15 70 7031 0 125

				minitext 16 80 7032 0 4
				minitext 15 80 7032 0 125

				getkeyname 406 6 2

				minitext 16 90 406 0 4
				minitext 15 90 406 0 125

				minitext 26 90 7023 0 4
				minitext 25 90 7023 0 125
				}

		}


	ifn player_using_fighter -1 // Fighter HUD
		{
			rotatesprite 160 100 NNORMALSIZE 0 15344 shade pal 1024 0 0 xdim ydim // show fighter hud
			ifand EXTBITS_PRESS 4
			{
			set DISP_TEMP3 -64
			}
			else
		ifand EXTBITS_PRESS 16
			{
			set DISP_TEMP3 -64
			}
			else
		ifand EXTBITS_PRESS 8
			{
			set DISP_TEMP3 64
			}
			else
		ifand EXTBITS_PRESS 32
			{
			set DISP_TEMP3 64
			}
			else set DISP_TEMP3 0

			add DISP_TEMP2 160


		ife hc_gear 6 set tilenum 15345 else
		ife hc_gear 5 set tilenum 15346 else
		ife hc_gear 4 set tilenum 15347 else
		ife hc_gear 3 set tilenum 15348 else
		ife hc_gear 2 set tilenum 15349 else
		ife hc_gear 1 set tilenum 15350 else
		set tilenum 15350

		rotatespritea 10 45 NORMALSIZE 0 tilenum 10 27 1 -255 0 0 xdim ydim // gear icon


		getactorvar[player_using_fighter].forward_accelerate DISP_TEMP6

		ifg DISP_TEMP6 1199 set tilenum 15345 else
		ifg DISP_TEMP6 800 set tilenum 15346 else
		ifg DISP_TEMP6 600 set tilenum 15347 else
		ifg DISP_TEMP6 400 set tilenum 15348 else
		ifg DISP_TEMP6 200 set tilenum 15349 else
		ifg DISP_TEMP6 0 set tilenum 15350 else
		ife DISP_TEMP6 0 set tilenum 15343 else
		ifl DISP_TEMP6 0 set tilenum 15350

		rotatespritea 10 45 NORMALSIZE 0 tilenum 0 0 1 -255 0 0 xdim ydim // Speed icon

		geta[player_using_fighter].extra DISP_TEMP6

		ifg DISP_TEMP6 4500 set tilenum 15345 else
		ifg DISP_TEMP6 3500 set tilenum 15346 else
		ifg DISP_TEMP6 2500 set tilenum 15347 else
		ifg DISP_TEMP6 1500 set tilenum 15348 else
		ifg DISP_TEMP6 500 set tilenum 15349 else
		ifg DISP_TEMP6 0 set tilenum 15350 else
		set tilenum 15343

		rotatespritea 310 45 NORMALSIZE 1024 tilenum 0 0 5 -255 0 0 xdim ydim // health icon

			ifg control_display 0
				{
				minitext 16 60 7030 0 4
				minitext 15 60 7030 0 125

				minitext 16 70 7031 0 4
				minitext 15 70 7031 0 125

				minitext 16 80 7032 0 4
				minitext 15 80 7032 0 125

				getkeyname 406 6 2

				minitext 16 90 406 0 4
				minitext 15 90 406 0 125

				minitext 26 90 7023 0 4
				minitext 25 90 7023 0 125
				}

		}
	}

}

ife KEYCARDTYPE 0 set DISP_TEMP 9471
else ife KEYCARDTYPE 1 set DISP_TEMP 9470 // Rune key
else ife KEYCARDTYPE 2 set DISP_TEMP 9469 // Egyption Key

switch CUSTOMKEYCARDPOS
 case 0:
  break
 case 1:
 rotatesprite 130 190 NORMALSIZE 0 CKEYCARDTILE3 shade pal 0 0 0 xdim ydim
  break
 case 2:
 rotatesprite 130 185 NORMALSIZE 0 CKEYCARDTILE3 shade pal 0 0 0 xdim ydim
  break
 case 3:
 rotatesprite 130 180 NORMALSIZE 0 CKEYCARDTILE3 shade pal 0 0 0 xdim ydim
  break
 case 4:
 rotatesprite 130 175 NORMALSIZE 0 CKEYCARDTILE3 shade pal 0 0 0 xdim ydim
  break
 case 5:
 rotatesprite 130 170 NORMALSIZE 0 CKEYCARDTILE2 shade pal 0 0 0 xdim ydim
  break
 case 6:
 rotatesprite 130 165 NORMALSIZE 0 CKEYCARDTILE2 shade pal 0 0 0 xdim ydim
  break
 case 7:
 rotatesprite 130 160 NORMALSIZE 0 CKEYCARDTILE2 shade pal 0 0 0 xdim ydim
  break
 case 8:
 rotatesprite 130 155 NORMALSIZE 0 CKEYCARDTILE2 shade pal 0 0 0 xdim ydim
  break
 case 9:
 rotatesprite 130 150 NORMALSIZE 0 CKEYCARDTILE2 shade pal 0 0 0 xdim ydim
  break
 case 10:
 rotatesprite 130 150 NORMALSIZE 0 DISP_TEMP shade CKEYCARDPAL 0 0 0 xdim ydim
 rotatesprite 130 150 NORMALSIZE 0 CKEYCARDTILE shade pal 0 0 0 xdim ydim
  break
 case 11:
 case 12:
 rotatesprite 130 155 NORMALSIZE 0 DISP_TEMP shade CKEYCARDPAL 0 0 0 xdim ydim
 rotatesprite 130 155 NORMALSIZE 0 CKEYCARDTILE shade pal 0 0 0 xdim ydim
  break
 case 13:
 rotatesprite 130 160 NORMALSIZE 0 DISP_TEMP shade CKEYCARDPAL 0 0 0 xdim ydim
 rotatesprite 130 160 NORMALSIZE 0 CKEYCARDTILE shade pal 0 0 0 xdim ydim
  break
 case 14:
 rotatesprite 130 165 NORMALSIZE 0 DISP_TEMP shade CKEYCARDPAL 0 0 0 xdim ydim
 rotatesprite 130 165 NORMALSIZE 0 CKEYCARDTILE shade pal 0 0 0 xdim ydim
  break
 case 15:
 rotatesprite 130 170 NORMALSIZE 0 DISP_TEMP shade CKEYCARDPAL 0 0 0 xdim ydim
 rotatesprite 130 170 NORMALSIZE 0 CKEYCARDTILE shade pal 0 0 0 xdim ydim
  break
 case 16:
 rotatesprite 130 175 NORMALSIZE 0 DISP_TEMP shade CKEYCARDPAL 0 0 0 xdim ydim
 rotatesprite 130 175 NORMALSIZE 0 CKEYCARDTILE shade pal 0 0 0 xdim ydim
  break
 case 17:
 rotatesprite 130 180 NORMALSIZE 0 DISP_TEMP shade CKEYCARDPAL 0 0 0 xdim ydim
 rotatesprite 130 180 NORMALSIZE 0 CKEYCARDTILE shade pal 0 0 0 xdim ydim
  break
 case 18:
 rotatesprite 130 185 NORMALSIZE 0 DISP_TEMP shade CKEYCARDPAL 0 0 0 xdim ydim
 rotatesprite 130 185 NORMALSIZE 0 CKEYCARDTILE shade pal 0 0 0 xdim ydim
  break
 case 19:
 rotatesprite 130 190 NORMALSIZE 0 DISP_TEMP shade CKEYCARDPAL 0 0 0 xdim ydim
 rotatesprite 130 190 NORMALSIZE 0 CKEYCARDTILE shade pal 0 0 0 xdim ydim
  break
 case 20:
 rotatesprite 130 195 NORMALSIZE 0 DISP_TEMP shade CKEYCARDPAL 0 0 0 xdim ydim
 rotatesprite 130 195 NORMALSIZE 0 CKEYCARDTILE shade pal 0 0 0 xdim ydim
  break
 case 21:
 rotatesprite 130 200 NORMALSIZE 0 DISP_TEMP shade CKEYCARDPAL 0 0 0 xdim ydim
 rotatesprite 130 200 NORMALSIZE 0 CKEYCARDTILE shade pal 0 0 0 xdim ydim
  break
endswitch

// PDU SCREEN

	ifn DOCUMENT -1
		{
		set DISP_TEMP4 700
		sub DISP_TEMP4 tilesizy[DOCUMENT]
		mul DISP_TEMP4 110
		ifg DISP_TEMP4 36000 set DISP_TEMP4 36000
		rotatesprite 160 100 DISP_TEMP4 0 DOCUMENT 0 0 0 0 0 xdim ydim
		ifg MAXPAGES 0
			{
			set DISP_TEMP2 tilesizx[DOCUMENT]
			divvar DISP_TEMP2 5
			set DISP_TEMP3 100
			sub DISP_TEMP3 DISP_TEMP2

			ifn PAGENUMBER 0
				{
				rotatespritea DISP_TEMP3 100 HALFSIZE 1024 2488 DISP_PULSE 0 4 -255 0 0 xdim ydim // Left Arrow
				getkeyname 406 15 2
				mulvar DISP_TEMP3 2
				gametext STARTALPHANUM DISP_TEMP3 100 406 0 2 16 0 0 xdim ydim
				}
			set DISP_TEMP3 220
			add DISP_TEMP3 DISP_TEMP2
			ifvarvarn PAGENUMBER MAXPAGES
				{
				rotatespritea DISP_TEMP3 100 HALFSIZE 0 2488 DISP_PULSE 0 0 -255 0 0 xdim ydim // Right arrow
				getkeyname 406 16 2
				mulvar DISP_TEMP3 2
				gametext STARTALPHANUM DISP_TEMP3 100 406 0 2 16 0 0 xdim ydim
				}
			}
		}

ifn MISSIONUP 0
{
ife MISSIONSCREEN 0 // Mission screen
	{
	set DISP_TEMP 3611
	set DISP_TEMP2 3261
	}
else
ife MISSIONSCREEN 1 // Item screen
	{
	set DISP_TEMP 3631
	set DISP_TEMP2 3262
	}
else
ife MISSIONSCREEN 2 // key screen
	{
	set DISP_TEMP 3631
	set DISP_TEMP2 3263
	}
else
ife MISSIONSCREEN 3 // ammo types
	{
	set DISP_TEMP 3631
	set DISP_TEMP2 3264
	}
else
ife MISSIONSCREEN 4 // stat screen
	{
	set DISP_TEMP 3611
	set DISP_TEMP2 3265
	}
else
ife MISSIONSCREEN 5 // Scanner
	{
	set DISP_TEMP 10332
	ife MISSIONPOS 100 { set DISP_TEMP4 0 set DISP_TEMP5 33 } else { set DISP_TEMP4 20 set DISP_TEMP5 0 }
	rotatesprite 160 MISSIONPOS 34734 0 10333 DISP_TEMP4 0 DISP_TEMP5 0 0 xdim ydim
	set DISP_TEMP2 3266

		/*
		ife DOCUMENT 17028
		 ife MISSIONPOS 100
			{
			rotatespritea 160 100 HALFSIZE 0 17029 0 6 0 -254 0 0 xdim ydim
			}
		*/
	}



rotatesprite 160 MISSIONPOS 34734 0 DISP_TEMP 0 0 0 0 0 xdim ydim
ife CHAR 9 rotatesprite 160 MISSIONPOS 34734 0 12140 shade pal 0 0 0 xdim ydim
else rotatesprite 160 MISSIONPOS 34734 0 10332 shade pal 0 0 0 xdim ydim
ife MISSIONPOS 100
 ifn MISSIONSCREEN 5
{
ifn mission_scare 0
	{
	  rotatespritea 160 100 88000 0 11013 20 0 8 -255 0 0 xdim ydim
	  rotatespritea 110 100 10384 0 21341 0 0 8 -255 0 0 xdim ydim // SPOOPY
	  rotatespritea 210 100 10384 0 21341 0 0 8 -255 0 0 xdim ydim // SPOOPY
	}
else ife CHAR 9 rotatespritea 160 100 40734 0 12139 20 0 0 -255 0 0 xdim ydim // Cultist
else ife CHAR 10 rotatespritea 160 100 40734 0 12163 20 0 0 -255 0 0 xdim ydim // Bombshell
else ife CHAR 12 rotatespritea 160 100 40734 0 12163 20 0 0 -255 0 0 xdim ydim // Jane
else ife CHAR 3 ife TIMEZONE 1 rotatespritea 160 100 40734 0 12163 20 0 0 -255 0 0 xdim ydim // Highwire revolution
else ife TIMEZONE 5 rotatespritea 160 100 40734 0 23669 20 0 0 -255 0 0 xdim ydim // Snowfall future
else ife TIMEZONE 6 rotatespritea 160 100 40734 0 23669 20 0 0 -255 0 0 xdim ydim // Snowfall VR future
else ife TIMEZONE 2 // Micky begins
	{
	ife CHAR 0 rotatespritea 160 100 40734 0 12163 20 0 0 -255 0 0 xdim ydim // James IW flashback
	else rotatespritea 160 100 56734 0 12141 20 0 0 -255 0 0 xdim ydim // Adelaide
	}
else
	{
	  add WHEEL_ROTATE 1
	  ifg WHEEL_ROTATE 2048 set WHEEL_ROTATE 0
	  rotatespritea 160 100 40734 WHEEL_ROTATE 12256 20 0 0 -255 0 0 xdim ydim // AMC LOGO
	}

rotatespritea 56 132 34734 0 DISP_TEMP2 DISP_PULSE 21 0 -255 0 0 xdim ydim

ife RADIO_CONTACT YES
	{
	ifoutside set DISP_TEMP 3246 else set DISP_TEMP 3247
	rotatesprite 291 51 34734 0 DISP_TEMP 0 0 8 0 0 xdim ydim
	}

// Mission button
set GUI_POS_X 52
set GUI_POS_Y 95
state CURSOR_OVER_ITEM
 ifn MISSIONSCREEN 0
	ifl GUI_POS_X_TEMP 25
	 ifg GUI_POS_X_TEMP -25
	    ifl GUI_POS_Y_TEMP 6
		 ifg GUI_POS_Y_TEMP -6
			{
			rotatespritea 56 132 34734 0 3261 DISP_PULSE 21 0 -255 0 0 xdim ydim
			ifand BITS_PRESS 4
				{
				sound PDU_MOVE
				set MISSIONSCREEN 0
				}
			}

// item button
set GUI_POS_Y 108
state CURSOR_OVER_ITEM
 ifn MISSIONSCREEN 1
	ifl GUI_POS_X_TEMP 25
	 ifg GUI_POS_X_TEMP -25
	    ifl GUI_POS_Y_TEMP 6
		 ifg GUI_POS_Y_TEMP -6
			{
			rotatespritea 56 132 34734 0 3262 DISP_PULSE 21 0 -255 0 0 xdim ydim
			ifand BITS_PRESS 4
				{
				sound PDU_MOVE
				set MISSIONSCREEN 1
				}
			}

// key button
set GUI_POS_Y 119
state CURSOR_OVER_ITEM
 ifn MISSIONSCREEN 2
	ifl GUI_POS_X_TEMP 25
	 ifg GUI_POS_X_TEMP -25
	    ifl GUI_POS_Y_TEMP 6
		 ifg GUI_POS_Y_TEMP -6
			{
			rotatespritea 56 132 34734 0 3263 DISP_PULSE 21 0 -255 0 0 xdim ydim
			ifand BITS_PRESS 4
				{
				sound PDU_MOVE
				set MISSIONSCREEN 2
				}
			}

// special ammo button
set GUI_POS_Y 132
state CURSOR_OVER_ITEM
 ifn MISSIONSCREEN 3
	ifl GUI_POS_X_TEMP 25
	 ifg GUI_POS_X_TEMP -25
	    ifl GUI_POS_Y_TEMP 6
		 ifg GUI_POS_Y_TEMP -6
			{
			rotatespritea 56 132 34734 0 3264 DISP_PULSE 21 0 -255 0 0 xdim ydim
			ifand BITS_PRESS 4
				{
				sound PDU_MOVE
				set MISSIONSCREEN 3
				}
			}

// stats button
set GUI_POS_Y 145
state CURSOR_OVER_ITEM
 ifn MISSIONSCREEN 4
	ifl GUI_POS_X_TEMP 25
	 ifg GUI_POS_X_TEMP -25
	    ifl GUI_POS_Y_TEMP 6
		 ifg GUI_POS_Y_TEMP -6
			{
			rotatespritea 56 132 34734 0 3265 DISP_PULSE 21 0 -255 0 0 xdim ydim
			ifand BITS_PRESS 4
				{
				sound PDU_MOVE
				set MISSIONSCREEN 4
				}
			}

// scan button
set GUI_POS_Y 157
state CURSOR_OVER_ITEM
 ifn MISSIONSCREEN 5
	ifl GUI_POS_X_TEMP 25
	 ifg GUI_POS_X_TEMP -25
	    ifl GUI_POS_Y_TEMP 6
		 ifg GUI_POS_Y_TEMP -6
			{
			rotatespritea 56 132 34734 0 3266 DISP_PULSE 21 0 -255 0 0 xdim ydim
			ifand BITS_PRESS 4
				{
				sound PDU_MOVE
				set MISSIONSCREEN 5
				}
			}

// abort mission button
set GUI_POS_Y 171
state CURSOR_OVER_ITEM
	ifl GUI_POS_X_TEMP 25
	 ifg GUI_POS_X_TEMP -25
	    ifl GUI_POS_Y_TEMP 8
		 ifg GUI_POS_Y_TEMP -8
			{
			rotatespritea 56 132 34734 0 3267 DISP_PULSE 21 0 -255 0 0 xdim ydim
			set MOUSE_HINT 580 // refers to quote in user.con
			sub MOUSE_HINT_TIMER 2
			}


}

set DISP_TEMP MISSIONPOS
add DISP_TEMP 80
	ife FIRE_SUIT 1 rotatesprite 310 DISP_TEMP DOUBLESIZE 0 9436 shade 13 0 0 0 xdim ydim
	else ife JUGGERN_SUIT 1 rotatesprite 310 DISP_TEMP DOUBLESIZE 0 9429 shade pal 0 0 0 xdim ydim
	else ife SPACE_SUIT 1 rotatesprite 310 DISP_TEMP DOUBLESIZE 0 23085 shade pal 0 0 0 xdim ydim
	else rotatesprite 310 DISP_TEMP DOUBLESIZE 0 CHOLDING shade pal 0 0 0 xdim ydim

ife MISSIONPOS 100
	{
	getp[].palookup pal

	ife MISSIONSCREEN 0 // Mission text!
		{
		ife CHAR 0 gametext 17158 60 30 1003 10 2 0 0 0 xdim ydim
		ife CHAR 1 gametext 17158 60 30 1004 10 2 0 0 0 xdim ydim
		ife CHAR 2 gametext 17158 60 30 1005 10 2 0 0 0 xdim ydim
		ife CHAR 3
			{
			ife TIMEZONE 1 gametext 17158 60 30 1218 10 2 0 0 0 xdim ydim
			else gametext 17158 60 30 1006 10 2 0 0 0 xdim ydim
			}
		ife CHAR 4 gametext 17158 60 30 1007 10 2 0 0 0 xdim ydim
		ife CHAR 5 gametext 17158 60 30 1008 10 2 0 0 0 xdim ydim
		ife CHAR 6 gametext 17158 60 30 1009 10 2 0 0 0 xdim ydim
		ife CHAR 7 gametext 17158 60 30 1010 10 2 0 0 0 xdim ydim
		ife CHAR 9 gametext 17158 60 30 1212 10 2 0 0 0 xdim ydim
		ife CHAR 10 gametext 17158 60 30 1213 10 2 0 0 0 xdim ydim
		ife CHAR 11 gametext 17158 60 30 1214 10 2 0 0 0 xdim ydim
		ife CHAR 12 gametext 17158 60 30 1215 10 2 0 0 0 xdim ydim
		ife CHAR 13
			{
			ife TIMEZONE 2 gametext 17158 60 30 1221 10 2 0 0 0 xdim ydim
			else gametext 17158 60 30 1216 10 2 0 0 0 xdim ydim
			}
		ife CHAR 14
			{
			ife TIMEZONE 5 gametext 17158 60 30 1219 10 2 0 0 0 xdim ydim
			else gametext 17158 60 30 1217 10 2 0 0 0 xdim ydim
			}
		ifn mission_scare 0
			{
			ife mission_scare 1 { screensound I_SEE_YOU set mission_scare 2 }
			ifrnd 96 qputs 340 ^2USELESS USELESS USELESS USELESS USELESS
			else ifrnd 96 qputs 340 ^2JOIN US JOIN ME JOIN US JOIN ME JOIN US
			else ifrnd 96 qputs 340 ^2COME TO US COME TO ME COME TO US COME TO ME
			screentext 17158 25 40 38252 0 0 340 0 2 16 0 2 0 1 1 0 0 0 xdim ydim
			screentext 17158 25 45 38252 0 0 340 0 2 16 0 2 0 1 1 0 0 0 xdim ydim
			screentext 17158 25 50 38252 0 0 340 0 2 16 0 2 0 1 1 0 0 0 xdim ydim
			screentext 17158 25 55 38252 0 0 340 0 2 16 0 2 0 1 1 0 0 0 xdim ydim
			screentext 17158 25 60 38252 0 0 340 0 2 16 0 2 0 1 1 0 0 0 xdim ydim
			screentext 17158 25 65 38252 0 0 340 0 2 16 0 2 0 1 1 0 0 0 xdim ydim
			}
		else
			{
			ifn MISSIONLINE1 0 screentext 17158 25 40 38252 0 0 MISSIONLINE1 0 2 16 0 2 0 1 1 0 0 0 xdim ydim
			ifn MISSIONLINE2 0 screentext 17158 25 45 38252 0 0 MISSIONLINE2 0 2 16 0 2 0 1 1 0 0 0 xdim ydim
			ifn MISSIONLINE3 0 screentext 17158 25 50 38252 0 0 MISSIONLINE3 0 2 16 0 2 0 1 1 0 0 0 xdim ydim
			ifn MISSIONLINE4 0 screentext 17158 25 55 38252 0 0 MISSIONLINE4 0 2 16 0 2 0 1 1 0 0 0 xdim ydim
			ifn MISSIONLINE5 0 screentext 17158 25 60 38252 0 0 MISSIONLINE5 0 2 16 0 2 0 1 1 0 0 0 xdim ydim
			ifn MISSIONLINE6 0 screentext 17158 25 65 38252 0 0 MISSIONLINE6 0 2 16 0 2 0 1 1 0 0 0 xdim ydim
			}

		gettimedate DISP_TEMP DISP_TEMP2 DISP_TEMP3 DISP_TEMP4 DISP_TEMP5 DISP_TEMP6 DISP_TEMP7 DISP_TEMP7
		digitalnumber 17173 100 175 DISP_TEMP3 0 21 0 0 0 xdim ydim // Hours
		myospal 105 175 17183 0 0 21
		ifl DISP_TEMP2 10 // Add the extra '0' infront of the number
				{
				myospal 115 175 17173 0 0 21
				digitalnumber 17173 125 175 DISP_TEMP2 0 21 0 0 0 xdim ydim // minutes
				}
				else
			digitalnumber 17173 120 175 DISP_TEMP2 0 21 0 0 0 xdim ydim // minutes
		myospal 130 175 17183 0 0 21
			ifl DISP_TEMP 10 // Add the extra '0' infront of the number
				{
				myospal 140 175 17173 0 0 21
				digitalnumber 17173 150 175 DISP_TEMP 0 21 0 0 0 xdim ydim // minutes
				}
			else
			digitalnumber 17173 145 175 DISP_TEMP 0 21 0 0 0 xdim ydim // seconds

		digitalnumber 17173 184 175 DISP_TEMP4 0 21 0 0 0 xdim ydim // Day
		myospal 192 175 17172 0 0 21
		add DISP_TEMP5 1
		digitalnumber 17173 205 175 DISP_TEMP5 0 21 0 0 0 xdim ydim // Month
		myospal 210 175 17172 0 0 21
		digitalnumber 17173 230 175 DISP_TEMP6 0 21 0 0 0 xdim ydim // Year

		}
	else
	ife MISSIONSCREEN 1 // Inventory display
		{
		set GUI_POS_X 52
		set GUI_POS_Y 37
		state CURSOR_OVER_ITEM
		ifg GOT_EXPLOSIVE 0
			{
			rotatesprite GUI_POS_X GUI_POS_Y 22000 0 C4_EXPLOSIVE 0 0 0 0 0 xdim ydim
			digitalnumber 17173 GUI_POS_X GUI_POS_Y GOT_EXPLOSIVE 0 32 0 0 0 xdim ydim

		ifl GUI_POS_X_TEMP 20
		 ifg GUI_POS_X_TEMP -20
			ifl GUI_POS_Y_TEMP 5
			 ifg GUI_POS_Y_TEMP -5
				{
				set MOUSE_HINT 3020 // refers to quote in user.con
				sub MOUSE_HINT_TIMER 2
				}

			}

		add GUI_POS_X 31
		state CURSOR_OVER_ITEM
		ife AIR_FILTER 1
			{
			rotatesprite GUI_POS_X GUI_POS_Y 22000 0 3688 0 0 0 0 0 xdim ydim

		ifl GUI_POS_X_TEMP 20
		 ifg GUI_POS_X_TEMP -20
			ifl GUI_POS_Y_TEMP 5
			 ifg GUI_POS_Y_TEMP -5
				{
				set MOUSE_HINT 3023 // refers to quote in user.con
				sub MOUSE_HINT_TIMER 2
				}

			}

		add GUI_POS_X 31
		state CURSOR_OVER_ITEM
		ife GOT_FLIPPER 1
			{
			rotatesprite GUI_POS_X GUI_POS_Y HALFSIZE 0 FLIPPER 0 0 0 0 0 xdim ydim

		ifl GUI_POS_X_TEMP 20
		 ifg GUI_POS_X_TEMP -20
			ifl GUI_POS_Y_TEMP 5
			 ifg GUI_POS_Y_TEMP -5
				{
				set MOUSE_HINT 3100 // refers to quote in user.con
				sub MOUSE_HINT_TIMER 2
				}

			}

		add GUI_POS_X 31
		state CURSOR_OVER_ITEM
		ifg GAS_MASK 0
			{
			rotatesprite GUI_POS_X GUI_POS_Y 40768 0 GASMASK 0 0 0 0 0 xdim ydim

			ifl GUI_POS_X_TEMP 20
			 ifg GUI_POS_X_TEMP -20
				ifl GUI_POS_Y_TEMP 5
				 ifg GUI_POS_Y_TEMP -5
				{
				set MOUSE_HINT 3025 // refers to quote in user.con
				sub MOUSE_HINT_TIMER 2
				}

			}

		add GUI_POS_X 31
		state CURSOR_OVER_ITEM
		ifg COGS 0
			{
			rotatesprite GUI_POS_X GUI_POS_Y 42768 0 COG_PICKUP 0 0 0 0 0 xdim ydim
			digitalnumber 17173 GUI_POS_X GUI_POS_Y COGS 0 32 0 0 0 xdim ydim

			ifl GUI_POS_X_TEMP 20
			 ifg GUI_POS_X_TEMP -20
				ifl GUI_POS_Y_TEMP 5
				 ifg GUI_POS_Y_TEMP -5
				{
				set MOUSE_HINT 3027 // refers to quote in user.con
				sub MOUSE_HINT_TIMER 2
				}

			}

		add GUI_POS_X 31
		state CURSOR_OVER_ITEM
		ife TOOLBOX 1
			{
			rotatesprite GUI_POS_X GUI_POS_Y 42768 0 TOOLBOX_PICKUP 0 0 0 0 0 xdim ydim

			ifl GUI_POS_X_TEMP 20
			 ifg GUI_POS_X_TEMP -20
				ifl GUI_POS_Y_TEMP 5
				 ifg GUI_POS_Y_TEMP -5
				{
				set MOUSE_HINT 3028 // refers to quote in user.con
				sub MOUSE_HINT_TIMER 2
				}

			}

		add GUI_POS_X 32
		state CURSOR_OVER_ITEM
		ife ROPE 1
			{
			rotatesprite GUI_POS_X GUI_POS_Y 12000 0 17916 0 0 0 0 0 xdim ydim

			ifl GUI_POS_X_TEMP 20
			 ifg GUI_POS_X_TEMP -20
				ifl GUI_POS_Y_TEMP 5
				 ifg GUI_POS_Y_TEMP -5
				{
				set MOUSE_HINT 3102 // refers to quote in user.con
				sub MOUSE_HINT_TIMER 2
				}

			}

		add GUI_POS_X 32
		state CURSOR_OVER_ITEM
		ifand EGYPT_ARTIFACTS 1
			{
			rotatesprite GUI_POS_X GUI_POS_Y 14000 0 16835 0 0 0 0 0 xdim ydim

			ifl GUI_POS_X_TEMP 20
			 ifg GUI_POS_X_TEMP -20
				ifl GUI_POS_Y_TEMP 5
				 ifg GUI_POS_Y_TEMP -5
				{
				set MOUSE_HINT 3101 // refers to quote in user.con
				sub MOUSE_HINT_TIMER 2
				}
			}

		set GUI_POS_X 50
		add GUI_POS_Y 30
		state CURSOR_OVER_ITEM
		ifand EGYPT_ARTIFACTS 2
			{
			rotatesprite GUI_POS_X GUI_POS_Y 16000 0 16836 0 0 0 0 0 xdim ydim

			ifl GUI_POS_X_TEMP 20
			 ifg GUI_POS_X_TEMP -20
				ifl GUI_POS_Y_TEMP 5
				 ifg GUI_POS_Y_TEMP -5
				{
				set MOUSE_HINT 3103 // refers to quote in user.con
				sub MOUSE_HINT_TIMER 2
				}
			}

		add GUI_POS_X 32
		state CURSOR_OVER_ITEM
		ifand EGYPT_ARTIFACTS 4
			{
			rotatesprite GUI_POS_X GUI_POS_Y 16000 0 16837 0 0 0 0 0 xdim ydim

			ifl GUI_POS_X_TEMP 20
			 ifg GUI_POS_X_TEMP -20
				ifl GUI_POS_Y_TEMP 5
				 ifg GUI_POS_Y_TEMP -5
				{
				set MOUSE_HINT 3104 // refers to quote in user.con
				sub MOUSE_HINT_TIMER 2
				}
			}

		add GUI_POS_X 32
		state CURSOR_OVER_ITEM
		ifand EGYPT_ARTIFACTS 8
			{
			rotatesprite GUI_POS_X GUI_POS_Y 16000 0 16838 0 0 0 0 0 xdim ydim

			ifl GUI_POS_X_TEMP 20
			 ifg GUI_POS_X_TEMP -20
				ifl GUI_POS_Y_TEMP 5
				 ifg GUI_POS_Y_TEMP -5
				{
				set MOUSE_HINT 3105 // refers to quote in user.con
				sub MOUSE_HINT_TIMER 2
				}
			}



		add GUI_POS_X 31
		state CURSOR_OVER_ITEM
		ife AIRSTRIKE_MARKER 1
			{
			rotatesprite GUI_POS_X GUI_POS_Y 16000 0 ASTRIKE_MARKER 0 0 0 0 0 xdim ydim

			ifl GUI_POS_X_TEMP 20
			 ifg GUI_POS_X_TEMP -20
				ifl GUI_POS_Y_TEMP 5
				 ifg GUI_POS_Y_TEMP -5
				{
				set MOUSE_HINT 3106 // refers to quote in user.con
				sub MOUSE_HINT_TIMER 2
				}
			}

		add GUI_POS_X 31
		state CURSOR_OVER_ITEM
		ife GOT_FIREWALL 1
			{
			rotatesprite GUI_POS_X GUI_POS_Y 16000 0 FIREWALL_CHIP 0 0 0 0 0 xdim ydim

			ifl GUI_POS_X_TEMP 20
			 ifg GUI_POS_X_TEMP -20
				ifl GUI_POS_Y_TEMP 5
				 ifg GUI_POS_Y_TEMP -5
				{
				set MOUSE_HINT 3107 // refers to quote in user.con
				sub MOUSE_HINT_TIMER 2
				}
			}

			ifpinventory GET_FIRSTAID 0
			{
			rotatesprite 238 130 INVENSIZE 0 CMEDIKIT 0 0 0 0 0 xdim ydim
			getp[].firstaid_amount DISP_TEMP2
			digitalnumber 17173 238 140 DISP_TEMP2 0 27 0 0 0 xdim ydim
			}

			ifpinventory GET_BOOTS 0
			{
			rotatesprite 268 130 INVENSIZE 0 CBOOTS 0 0 0 0 0 xdim ydim
			getp[].boot_amount DISP_TEMP2
			divvar DISP_TEMP2 2
			digitalnumber 17173 268 140 DISP_TEMP2 0 27 0 0 0 xdim ydim
			}

			ifg player[].holoduke_amount 0
			{
			rotatesprite 114 160 22000 0 CHOLODUKE 0 0 0 0 0 xdim ydim
			divvar DISP_TEMP2 24
			digitalnumber 17173 114 170 DISP_TEMP2 0 27 0 0 0 xdim ydim
			}

			ifpinventory GET_JETPACK 0
			{
			rotatesprite 145 160 INVENSIZE 0 CJETPACK 0 0 0 0 0 xdim ydim
			getp[].jetpack_amount DISP_TEMP2
			divvar DISP_TEMP2 16
			digitalnumber 17173 145 170 DISP_TEMP2 0 27 0 0 0 xdim ydim
			}

			ifpinventory GET_HEATS 0
			{
			rotatesprite 176 160 INVENSIZE 0 DISP_NVG 0 0 0 0 0 xdim ydim
			getp[].heat_amount DISP_TEMP2
			divvar DISP_TEMP2 48
			digitalnumber 17173 176 170 DISP_TEMP2 0 27 0 0 0 xdim ydim
			}

			ifpinventory GET_SCUBA 0
			{
			rotatesprite 207 160 INVENSIZE 0 CSCUBA 0 0 0 0 0 xdim ydim
			getp[].scuba_amount DISP_TEMP2
			ife CHAR 0 divvar DISP_TEMP2 128 else divvar DISP_TEMP2 64
			digitalnumber 17173 207 170 DISP_TEMP2 0 27 0 0 0 xdim ydim
			}

			ifpinventory GET_STEROIDS 0
			{
			rotatesprite 238 160 INVENSIZE 0 CSTEROIDS 0 0 0 0 0 xdim ydim
			getp[].steroids_amount DISP_TEMP2
			divvar DISP_TEMP2 4
			digitalnumber 17173 238 170 DISP_TEMP2 0 27 0 0 0 xdim ydim
			}
		}
	else
	ife MISSIONSCREEN 2 // Check keys!
		{
		ifand PLUGKEY 1 rotatesprite 49 34 22000 0 3463 0 0 0 0 0 xdim ydim
		ifand PLUGKEY 2 rotatesprite 53 38 22000 0 3464 0 0 0 0 0 xdim ydim
		ifand PLUGKEY 4 rotatesprite 57 42 22000 0 3465 0 0 0 0 0 xdim ydim
		ifand player[].got_access 1 rotatesprite 80 34 22000 0 60 0 0 0 0 0 xdim ydim
		ifand player[].got_access 2 rotatesprite 83 38 22000 0 60 0 21 0 0 0 xdim ydim
		ifand player[].got_access 4 rotatesprite 86 42 22000 0 60 0 23 0 0 0 xdim ydim
		ifand ACCESSKEY2 1 rotatesprite 111 34 22000 0 60 0 12 0 0 0 xdim ydim
		ifand ACCESSKEY2 2 rotatesprite 114 38 22000 0 60 0 11 0 0 0 xdim ydim
		ifand ACCESSKEY2 4 rotatesprite 117 42 22000 0 60 0 15 0 0 0 xdim ydim
		ifand ACCESSKEY2 8 rotatesprite 142 34 22000 0 60 0 49 0 0 0 xdim ydim
		ifand ACCESSKEY2 16 rotatesprite 145 38 22000 0 60 0 10 0 0 0 xdim ydim
		ifand ACCESSKEY2 32 rotatesprite 148 42 22000 0 60 0 22 0 0 0 xdim ydim
		ifand ACCESSKEY2 64 rotatesprite 176 38 22000 0 60 0 16 0 0 0 xdim ydim

		ifand RUNEKEYS 1 rotatesprite 203 34 22000 0 66 0 0 0 0 0 xdim ydim
		ifand RUNEKEYS 2 rotatesprite 207 38 22000 0 66 0 21 0 0 0 xdim ydim
		ifand RUNEKEYS 4 rotatesprite 211 42 22000 0 66 0 23 0 0 0 xdim ydim
		ifand RUNEKEYS 8 rotatesprite 234 34 22000 0 66 0 12 0 0 0 xdim ydim
		ifand RUNEKEYS 16 rotatesprite 238 38 22000 0 66 0 11 0 0 0 xdim ydim
		ifand RUNEKEYS 32 rotatesprite 242 42 22000 0 66 0 49 0 0 0 xdim ydim

		ifand SCARABKEYS 1 rotatesprite 265 34 12000 0 10088 0 0 0 0 0 xdim ydim
		ifand SCARABKEYS 2 rotatesprite 269 38 12000 0 10088 0 21 0 0 0 xdim ydim
		ifand SCARABKEYS 4 rotatesprite 273 42 12000 0 10088 0 23 0 0 0 xdim ydim
		ifand SCARABKEYS 8 rotatesprite 48 65 12000 0 10088 0 11 0 0 0 xdim ydim
		ifand SCARABKEYS 16 rotatesprite 52 69 12000 0 10088 0 49 0 0 0 xdim ydim
		ifand SCARABKEYS 32 rotatesprite 267 37 12000 0 10088 0 35 0 0 0 xdim ydim
		ifand SCARABKEYS 64 rotatesprite 267 41 12000 0 10088 0 15 0 0 0 xdim ydim
		ifand SCARABKEYS 128 rotatesprite 267 45 12000 0 10088 0 37 0 0 0 xdim ydim
		ifand SCARABKEYS 256 rotatesprite 50 68 12000 0 10088 0 12 0 0 0 xdim ydim

		ifand OLDKEYS 1 rotatesprite 83 69 26000 0 7952 0 0 0 0 0 xdim ydim
		ifand OLDKEYS 2 rotatesprite 114 69 26000 0 7953 0 0 0 0 0 xdim ydim
		ifand OLDKEYS 4 rotatesprite 145 69 26000 0 7954 0 0 0 0 0 xdim ydim
		ifand OLDKEYS 8 rotatesprite 176 69 26000 0 7955 0 0 0 0 0 xdim ydim
		ifand OLDKEYS 16 rotatesprite 207 69 26000 0 7956 0 0 0 0 0 xdim ydim
		ifand OLDKEYS 32 rotatesprite 238 69 26000 0 7941 0 0 0 0 0 xdim ydim

		ifg GENERIC_KEYS 0
			{
			rotatesprite 176 100 24000 0 GENERICKEY 0 0 0 0 0 xdim ydim
			digitalnumber 2472 176 100 GENERIC_KEYS 0 0 0 0 0 xdim ydim
			}

		ifand HELLGKEYS 1 rotatesprite 142 95 34000 0 7663 0 0 0 0 0 xdim ydim
		ifand HELLGKEYS 2 rotatesprite 146 102 34000 0 7664 0 0 0 0 0 xdim ydim
		ifand HELLGKEYS 4 rotatesprite 150 106 34000 0 7665 0 0 0 0 0 xdim ydim

		ifand HELLGKEYS 8 rotatesprite 176 95 34000 0 7666 0 0 0 0 0 xdim ydim
		ifand HELLGKEYS 16 rotatesprite 180 106 34000 0 7667 0 0 0 0 0 xdim ydim

		ifand ABYSS_KEYS 1 rotatesprite 265 65 16000 0 ABYSS_KEY 0 0 0 0 0 xdim ydim
		ifand ABYSS_KEYS 2 rotatesprite 269 69 16000 0 ABYSS_KEY 0 21 0 0 0 xdim ydim
		ifand ABYSS_KEYS 4 rotatesprite 273 73 16000 0 ABYSS_KEY 0 23 0 0 0 xdim ydim
		ifand ABYSS_KEYS 8 rotatesprite 114 95 16000 0 ABYSS_KEY 0 11 0 0 0 xdim ydim
		ifand ABYSS_KEYS 16 rotatesprite 118 104 16000 0 ABYSS_KEY 0 18 0 0 0 xdim ydim

		ifand SW_KEYS 1 rotatesprite 138 95 25000 0 SW_TECHCARD 0 0 0 0 0 xdim ydim
		ifand SW_KEYS 2 rotatesprite 138 104 25000 0 SW_TECHCARD 0 10 0 0 0 xdim ydim
		ifand SW_KEYS 4 rotatesprite 150 95 25000 0 SW_TECHCARD 0 11 0 0 0 xdim ydim
		ifand SW_KEYS 8 rotatesprite 150 104 25000 0 SW_TECHCARD 0 23 0 0 0 xdim ydim

		ifand SW_KEYS 16 rotatesprite 176 95 25000 0 SW_OLDKEY 0 15 0 0 0 xdim ydim
		ifand SW_KEYS 32 rotatesprite 176 104 25000 0 SW_OLDKEY 0 12 0 0 0 xdim ydim
		ifand SW_KEYS 64 rotatesprite 204 95 25000 0 SW_OLDKEY 0 83 0 0 0 xdim ydim
		ifand SW_KEYS 128 rotatesprite 204 104 25000 0 SW_OLDKEY 0 10 0 0 0 xdim ydim

		ifand NORMAL_KEYS 1 rotatesprite 207 100 20000 0 NORMAL_KEY1 0 0 0 0 0 xdim ydim
		ifand NORMAL_KEYS 2 rotatesprite 238 100 20000 0 NORMAL_KEY2 0 0 0 0 0 xdim ydim
		ifand NORMAL_KEYS 4 rotatesprite 269 100 20000 0 NORMAL_KEY3 0 0 0 0 0 xdim ydim
		ifand NORMAL_KEYS 8 rotatesprite 114 130 20000 0 NORMAL_KEY4 0 0 0 0 0 xdim ydim
		ifand NORMAL_KEYS 16 rotatesprite 145 130 20000 0 NORMAL_KEY5 0 0 0 0 0 xdim ydim

		ifand TEMPLE_KEY 1 rotatesprite 176 130 20000 0 22377 0 0 0 0 0 xdim ydim
		else ifand TEMPLE_KEY 2 rotatesprite 176 130 20000 0 22378 0 0 0 0 0 xdim ydim
		else ifand TEMPLE_KEY 4 rotatesprite 176 130 20000 0 22376 0 0 0 0 0 xdim ydim

		ife SWIPECARDS 64 rotatesprite 208 165 24000 0 SWIPE_MASTER 0 0 0 0 0 xdim ydim
		else
		{
		ifand SWIPECARDS 1 rotatesprite 202 156 15000 0 SWIPE_CARD 0 0 0 0 0 xdim ydim
		ifand SWIPECARDS 2 rotatesprite 207 160 15000 0 SWIPE_CARD 0 21 0 0 0 xdim ydim
		ifand SWIPECARDS 4 rotatesprite 211 164 15000 0 SWIPE_CARD 0 23 0 0 0 xdim ydim
		ifand SWIPECARDS 8 rotatesprite 233 156 15000 0 SWIPE_CARD 0 12 0 0 0 xdim ydim
		ifand SWIPECARDS 16 rotatesprite 238 160 15000 0 SWIPE_CARD 0 11 0 0 0 xdim ydim
		ifand SWIPECARDS 32 rotatesprite 242 164 15000 0 SWIPE_CARD 0 49 0 0 0 xdim ydim
		}


		}
	else
	ife MISSIONSCREEN 3 // ammo display
		{

		ifg dragon_shells 0
			{
			rotatesprite 52 37 28000 0 DRAGONS_SHELLS 0 0 0 0 0 xdim ydim
			digitalnumber 17173 52 47 dragon_shells 0 27 0 0 0 xdim ydim
			ifand GUN_AMMO_TYPES 64 rotatesprite 114 37 NNORMALSIZE 0 7839 0 0 0 0 0 xdim ydim

			ifg MOUSEX 42
			 ifg MOUSEY 27
			  ifl MOUSEX 62
			   ifl MOUSEY 47 // Prev button
				{
				set MOUSE_HINT 3034 // refers to quote in user.con
				sub MOUSE_HINT_TIMER 2
				}

			}

		ifg silver_ammo 0
			{
			rotatesprite 114 37 28000 0 SILVERAMMO_DRUM 0 0 0 0 0 xdim ydim
			digitalnumber 17173 114 47 silver_ammo 0 27 0 0 0 xdim ydim
			ifand GUN_AMMO_TYPES 2 rotatesprite 114 37 NNORMALSIZE 0 7839 0 0 0 0 0 xdim ydim

			ifg MOUSEX 104
			 ifg MOUSEY 27
			  ifl MOUSEX 134
			   ifl MOUSEY 47 // Prev button
				{
				set MOUSE_HINT 3021 // refers to quote in user.con
				sub MOUSE_HINT_TIMER 2
				}

			}

		ifg explosive_shells 0
			{
			rotatesprite 145 37 28000 0 EXPL_SHELLS 0 0 0 0 0 xdim ydim
			digitalnumber 17173 145 47 explosive_shells 0 27 0 0 0 xdim ydim
			ifand GUN_AMMO_TYPES 1 rotatesprite 145 37 NNORMALSIZE 0 7839 0 0 0 0 0 xdim ydim

			ifg MOUSEX 134
			 ifg MOUSEY 27
			  ifl MOUSEX 155
			   ifl MOUSEY 47 // Prev button
				{
				set MOUSE_HINT 3022 // refers to quote in user.con
				sub MOUSE_HINT_TIMER 2
				}

			}

		ifg tesla_ammo 0
			{
			rotatesprite 269 37 22000 0 TESLA_AMMO_SPRITE 0 0 0 0 0 xdim ydim
			digitalnumber 17173 269 47 tesla_ammo 0 27 0 0 0 xdim ydim
			ifand GUN_AMMO_TYPES 8 rotatesprite 269 37 NNORMALSIZE 0 7839 0 0 0 0 0 xdim ydim

			ifg MOUSEX 259
			 ifg MOUSEY 27
			  ifl MOUSEX 279
			   ifl MOUSEY 47 // Prev button
				{
				set MOUSE_HINT 3026 // refers to quote in user.con
				sub MOUSE_HINT_TIMER 2
				}

			}

		ifg flechete_shells 0
			{
			rotatesprite 145 67 28000 0 FLECHETE_SHELLS 0 0 0 0 0 xdim ydim
			digitalnumber 17173 145 77 flechete_shells 0 27 0 0 0 xdim ydim
			ifand GUN_AMMO_TYPES 1 rotatesprite 145 69 NNORMALSIZE 0 7839 0 0 0 0 0 xdim ydim

			ifg MOUSEX 135
			 ifg MOUSEY 57
			  ifl MOUSEX 155
			   ifl MOUSEY 77 // Prev button
				{
				set MOUSE_HINT 3029 // refers to quote in user.con
				sub MOUSE_HINT_TIMER 2
				}

			}

		ifg silver_bolts 0
			{
			set GUI_POS_X 176
			set GUI_POS_Y 67
			rotatesprite GUI_POS_X GUI_POS_Y 22000 0 SILVER_CROSSBOW_BOLTS 0 0 0 0 0 xdim ydim
			digitalnumber 17173 GUI_POS_X 77 silver_bolts 0 27 0 0 0 xdim ydim
			ifand GUN_AMMO_TYPES 16 rotatesprite GUI_POS_X GUI_POS_Y NNORMALSIZE 0 7839 0 0 0 0 0 xdim ydim

			ifl GUI_POS_X_TEMP 10
			 ifg GUI_POS_X_TEMP -10
			  ifl GUI_POS_Y_TEMP 10
				ifg GUI_POS_Y_TEMP -10
				{
				set MOUSE_HINT 3030 // refers to quote in user.con
				sub MOUSE_HINT_TIMER 2
				}
			}

		ifg micro_torpedo 0
			{
			set GUI_POS_X 207
			set GUI_POS_Y 67
			rotatesprite GUI_POS_X GUI_POS_Y 22000 0 MICRO_TORPEDO_PACK 0 0 0 0 0 xdim ydim
			digitalnumber 17173 GUI_POS_X 77 micro_torpedo 0 27 0 0 0 xdim ydim
			ife CURWEAP 0 ife temp_weapon 30 rotatesprite GUI_POS_X GUI_POS_Y NNORMALSIZE 0 7839 0 0 0 0 0 xdim ydim

			state CURSOR_OVER_ITEM

				ifl GUI_POS_X_TEMP 10
				 ifg GUI_POS_X_TEMP -10
					ifl GUI_POS_Y_TEMP 10
					 ifg GUI_POS_Y_TEMP -10
						{
						set MOUSE_HINT 3031 // refers to quote in user.con
						sub MOUSE_HINT_TIMER 2
						}
			}

		ifg magnum_shells 0
			{
			set GUI_POS_X 238
			set GUI_POS_Y 67
			rotatesprite GUI_POS_X GUI_POS_Y 22000 0 MAGNUM_SHELLS 0 0 0 0 0 xdim ydim
			digitalnumber 17173 GUI_POS_X 77 magnum_shells 0 27 0 0 0 xdim ydim
			ifand GUN_AMMO_TYPES 4 rotatesprite GUI_POS_X GUI_POS_Y NNORMALSIZE 0 7839 0 0 0 0 0 xdim ydim

			state CURSOR_OVER_ITEM

				ifl GUI_POS_X_TEMP 10
				 ifg GUI_POS_X_TEMP -10
					ifl GUI_POS_Y_TEMP 10
					 ifg GUI_POS_Y_TEMP -10
						{
						set MOUSE_HINT 3032 // refers to quote in user.con
						sub MOUSE_HINT_TIMER 2
						}
			}

		ifg HEAT_SINKS 0
			{
			set GUI_POS_X 269
			set GUI_POS_Y 67
			rotatesprite GUI_POS_X GUI_POS_Y HALFSIZE 0 6543 0 0 0 0 0 xdim ydim
			digitalnumber 17173 GUI_POS_X 77 HEAT_SINKS 0 27 0 0 0 xdim ydim

			state CURSOR_OVER_ITEM

				ifl GUI_POS_X_TEMP 10
				 ifg GUI_POS_X_TEMP -10
					ifl GUI_POS_Y_TEMP 10
					 ifg GUI_POS_Y_TEMP -10
						{
						set MOUSE_HINT 3033 // refers to quote in user.con
						sub MOUSE_HINT_TIMER 2
						}
			}

		ifg heat_seek_card 0
			{
			set GUI_POS_X 145
			set GUI_POS_Y 97
			rotatesprite GUI_POS_X GUI_POS_Y HALFSIZE 0 HEAT_SEEK_CARD_PICKUP 0 0 0 0 0 xdim ydim
			digitalnumber 17173 GUI_POS_X 107 heat_seek_card 0 27 0 0 0 xdim ydim

			state CURSOR_OVER_ITEM

				ifl GUI_POS_X_TEMP 10
				 ifg GUI_POS_X_TEMP -10
					ifl GUI_POS_Y_TEMP 10
					 ifg GUI_POS_Y_TEMP -10
						{
						set MOUSE_HINT 5000 // refers to quote in user.con
						sub MOUSE_HINT_TIMER 2
						}
			}

		ifg atomic_bomb 0
			{
			set GUI_POS_X 176
			set GUI_POS_Y 97
			rotatesprite GUI_POS_X GUI_POS_Y HALFSIZE 0 ATOMIC_BOMB_PICKUP 0 0 0 0 0 xdim ydim
			digitalnumber 17173 GUI_POS_X 107 atomic_bomb 0 27 0 0 0 xdim ydim

			state CURSOR_OVER_ITEM

				ifl GUI_POS_X_TEMP 10
				 ifg GUI_POS_X_TEMP -10
					ifl GUI_POS_Y_TEMP 10
					 ifg GUI_POS_Y_TEMP -10
						{
						set MOUSE_HINT 5001 // refers to quote in user.con
						sub MOUSE_HINT_TIMER 2
						}
			}

		ifg DUP_missile_ammo 0
			{
			set GUI_POS_X 209
			set GUI_POS_Y 97
			rotatesprite GUI_POS_X GUI_POS_Y HALFSIZE 0 DUP_MISSILES_PICKUP 0 0 0 0 0 xdim ydim
			digitalnumber 17173 GUI_POS_X 107 DUP_missile_ammo 0 27 0 0 0 xdim ydim

			state CURSOR_OVER_ITEM

				ifl GUI_POS_X_TEMP 10
				 ifg GUI_POS_X_TEMP -10
					ifl GUI_POS_Y_TEMP 10
					 ifg GUI_POS_Y_TEMP -10
						{
						set MOUSE_HINT 5002 // refers to quote in user.con
						sub MOUSE_HINT_TIMER 2
						}
			}

		ifg fortymm_grenades 0
			{
			set GUI_POS_X 238
			set GUI_POS_Y 97
			rotatesprite GUI_POS_X GUI_POS_Y HALFSIZE 0 5411 0 0 0 0 0 xdim ydim
			digitalnumber 17173 GUI_POS_X 107 fortymm_grenades 0 27 0 0 0 xdim ydim

			state CURSOR_OVER_ITEM

				ifl GUI_POS_X_TEMP 10
				 ifg GUI_POS_X_TEMP -10
					ifl GUI_POS_Y_TEMP 10
					 ifg GUI_POS_Y_TEMP -10
						{
						set MOUSE_HINT 5003 // refers to quote in user.con
						sub MOUSE_HINT_TIMER 2
						}
			}

		ifg fortymm_caseless 0
			{
			set GUI_POS_X 269
			set GUI_POS_Y 97
			rotatesprite GUI_POS_X GUI_POS_Y HALFSIZE 0 6128 0 0 0 0 0 xdim ydim
			digitalnumber 17173 GUI_POS_X 107 fortymm_caseless 0 27 0 0 0 xdim ydim

			state CURSOR_OVER_ITEM

				ifl GUI_POS_X_TEMP 10
				 ifg GUI_POS_X_TEMP -10
					ifl GUI_POS_Y_TEMP 10
					 ifg GUI_POS_Y_TEMP -10
						{
						set MOUSE_HINT 5004 // refers to quote in user.con
						sub MOUSE_HINT_TIMER 2
						}
			}


		ifg fortymm_slug 0
			{
			set GUI_POS_X 114
			set GUI_POS_Y 130
			rotatesprite GUI_POS_X GUI_POS_Y HALFSIZE 0 6129 0 0 0 0 0 xdim ydim
			digitalnumber 17173 GUI_POS_X 140 fortymm_slug 0 27 0 0 0 xdim ydim

			state CURSOR_OVER_ITEM

				ifl GUI_POS_X_TEMP 10
				 ifg GUI_POS_X_TEMP -10
					ifl GUI_POS_Y_TEMP 10
					 ifg GUI_POS_Y_TEMP -10
						{
						set MOUSE_HINT 5008 // refers to quote in user.con
						sub MOUSE_HINT_TIMER 2
						}
			}

		ifg fortymm_MIA_shells 0
			{
			set GUI_POS_X 145
			set GUI_POS_Y 130
			rotatesprite GUI_POS_X GUI_POS_Y HALFSIZE 0 5463 0 0 0 0 0 xdim ydim
			digitalnumber 17173 GUI_POS_X 140 fortymm_MIA_shells 0 27 0 0 0 xdim ydim

			state CURSOR_OVER_ITEM

				ifl GUI_POS_X_TEMP 10
				 ifg GUI_POS_X_TEMP -10
					ifl GUI_POS_Y_TEMP 10
					 ifg GUI_POS_Y_TEMP -10
						{
						set MOUSE_HINT 5006 // refers to quote in user.con
						sub MOUSE_HINT_TIMER 2
						}
			}

		ifg fortymm_plasma 0
			{
			set GUI_POS_X 176
			set GUI_POS_Y 130
			rotatesprite GUI_POS_X GUI_POS_Y HALFSIZE 0 5476 0 0 0 0 0 xdim ydim
			digitalnumber 17173 GUI_POS_X 140 fortymm_plasma 0 27 0 0 0 xdim ydim

			state CURSOR_OVER_ITEM

				ifl GUI_POS_X_TEMP 10
				 ifg GUI_POS_X_TEMP -10
					ifl GUI_POS_Y_TEMP 10
					 ifg GUI_POS_Y_TEMP -10
						{
						set MOUSE_HINT 5007 // refers to quote in user.con
						sub MOUSE_HINT_TIMER 2
						}
			}

		ifg fortymm_shells 0
			{
			set GUI_POS_X 207
			set GUI_POS_Y 130
			rotatesprite GUI_POS_X GUI_POS_Y HALFSIZE 0 FORTYMM_SHELLS 0 0 0 0 0 xdim ydim
			digitalnumber 17173 GUI_POS_X 140 fortymm_shells 0 27 0 0 0 xdim ydim

			state CURSOR_OVER_ITEM

				ifl GUI_POS_X_TEMP 10
				 ifg GUI_POS_X_TEMP -10
					ifl GUI_POS_Y_TEMP 10
					 ifg GUI_POS_Y_TEMP -10
						{
						set MOUSE_HINT 5005 // refers to quote in user.con
						sub MOUSE_HINT_TIMER 2
						}
			}

		ifg fortymm_electro 0
			{
			set GUI_POS_X 114
			set GUI_POS_Y 163
			rotatesprite GUI_POS_X GUI_POS_Y HALFSIZE 0 FORTYMM_ELECTRO 0 0 0 0 0 xdim ydim
			digitalnumber 17173 GUI_POS_X 173 fortymm_electro 0 27 0 0 0 xdim ydim

			state CURSOR_OVER_ITEM

				ifl GUI_POS_X_TEMP 10
				 ifg GUI_POS_X_TEMP -10
					ifl GUI_POS_Y_TEMP 10
					 ifg GUI_POS_Y_TEMP -10
						{
						set MOUSE_HINT 5009 // refers to quote in user.con
						sub MOUSE_HINT_TIMER 2
						}
			}

		ifg fortymm_cryo 0
			{
			set GUI_POS_X 145
			set GUI_POS_Y 163
			rotatesprite GUI_POS_X GUI_POS_Y HALFSIZE 0 FORTYMM_CRYO 0 0 0 0 0 xdim ydim
			digitalnumber 17173 GUI_POS_X 173 fortymm_cryo 0 27 0 0 0 xdim ydim

			state CURSOR_OVER_ITEM

				ifl GUI_POS_X_TEMP 10
				 ifg GUI_POS_X_TEMP -10
					ifl GUI_POS_Y_TEMP 10
					 ifg GUI_POS_Y_TEMP -10
						{
						set MOUSE_HINT 5010 // refers to quote in user.con
						sub MOUSE_HINT_TIMER 2
						}
			}

		}
	else
	ife MISSIONSCREEN 4 // Player status!
		{
		ife CHAR 0 gametext 17158 60 30 1003 10 2 0 0 0 xdim ydim
		ife CHAR 1 gametext 17158 60 30 1004 10 2 0 0 0 xdim ydim
		ife CHAR 2 gametext 17158 60 30 1005 10 2 0 0 0 xdim ydim
		ife CHAR 3 gametext 17158 60 30 1006 10 2 0 0 0 xdim ydim
		ife CHAR 4 gametext 17158 60 30 1007 10 2 0 0 0 xdim ydim
		ife CHAR 5 gametext 17158 60 30 1008 10 2 0 0 0 xdim ydim
		ife CHAR 6 gametext 17158 60 30 1009 10 2 0 0 0 xdim ydim
		ife CHAR 7 gametext 17158 60 30 1010 10 2 0 0 0 xdim ydim
		ife CHAR 9 gametext 17158 60 30 1212 10 2 0 0 0 xdim ydim
		ife CHAR 10 gametext 17158 60 30 1213 10 2 0 0 0 xdim ydim
		ife CHAR 11 gametext 17158 60 30 1214 10 2 0 0 0 xdim ydim
		ife CHAR 12 gametext 17158 60 30 1215 10 2 0 0 0 xdim ydim
		ife CHAR 13 gametext 17158 60 30 1216 10 2 0 0 0 xdim ydim
		ife CHAR 14 gametext 17158 60 30 1217 10 2 0 0 0 xdim ydim
		qputs 409 Health: %ld
		qsprintf 409 409 PHEALTH
		ifg PHEALTH PMAXHEALTH set DISP_TEMP 8 else set DISP_TEMP 21
		gametext 17158 60 40 409 0 DISP_TEMP 0 0 0 xdim ydim
		qputs 409 Max Health: %ld
		qsprintf 409 409 PMAXHEALTH
		gametext 17158 60 50 409 0 18 0 0 0 xdim ydim

		qputs 409 Armour: %ld
		qsprintf 409 409 PARMOUR
		gametext 17158 317 40 409 0 12 0 0 0 xdim ydim

		qputs 409 Spirit Armour: %ld
		qsprintf 409 409 P_SPIRIT_ARMOUR
		gametext 17158 317 50 409 0 1 0 0 0 xdim ydim

		qputs 409 Fire Armour: %ld
		qsprintf 409 409 P_FIRE_ARMOUR
		gametext 17158 60 60 409 0 2 0 0 0 xdim ydim

		ife CHEATED 1 gametext 17158 190 165 8500 0 2 0 0 0 xdim ydim

		qputs 409 Credits: %ld
		qsprintf 409 409 CREDITS
		gametext 17158 190 176 409 0 1 0 0 0 xdim ydim
		}

	}
}

// EQUIPMENT AND SCUBA GEAR SCREEN DRAWING

ife camerasprite -1
{

ifn pal 1
ifn pal 2
ifn pal 4
ifn pal 7
ifn pal 8
ifn pal 17
ifn pal 19
{
getp[].palookup pal
ife CHAR 3 ife pal 0 set pal 11
}

getp[].over_shoulder_on DISP_TEMP9
 ife DISP_TEMP9 0
{

	ifg caught_in_net 0
	{

	ifg caught_in_net 32 set DISP_TEMP 10293 else
	ifg caught_in_net 24 set DISP_TEMP 10294 else
	ifg caught_in_net 16 set DISP_TEMP 10295 else
	ifg caught_in_net 8 set DISP_TEMP 10296 else
	ifg caught_in_net 0 set DISP_TEMP 10297

	myospal 160 100 DISP_TEMP shade 1024 pal

	ifn SHOTGUN_STRUGGLE -1
		{
		ifand BITS_PRESS 536870912 set DISP_TEMP CKEYCARDTILE2 else set DISP_TEMP CKEYCARDTILE3
		myospal 110 190 DISP_TEMP shade 0 pal
		ife CHAR 4 { ifand BITS_PRESS 536870912 set DISP_TEMP 6390 else set DISP_TEMP 6389 }
		myospal 190 180 DISP_TEMP shade 4 pal
		}
	}

	ifg PHANTASM_STICK -1
	{
	rotatesprite 160 100 DOUBLESIZE 0 13228 shade pal 0 0 0 xdim ydim
	}

	ifg SHOTGUN_STRUGGLE -1
	{
	ifg SHOTGUN_STRUGGLE_NUM 75 set DISP_TEMP 9424 else
	ifg SHOTGUN_STRUGGLE_NUM 25 set DISP_TEMP 9423 else
	ifg SHOTGUN_STRUGGLE_NUM -10 set DISP_TEMP 9422 else
	ifg SHOTGUN_STRUGGLE_NUM -25 set DISP_TEMP 9421 else
	ifg SHOTGUN_STRUGGLE_NUM -50 set DISP_TEMP 9420
	ife SHOTGUN_STRUGGLE_NUM -100 { myospal 160 100 7890 0 0 pal set SHOTGUN_STRUGGLE -1 }
	set DISP_TEMP2 155
	displayrandvar DISP_TEMP4 10 // Add a random number to the X position
	add DISP_TEMP2 DISP_TEMP4
	set DISP_TEMP3 95
	displayrandvar DISP_TEMP4 10 // Add a random number to the Y position
	add DISP_TEMP3 DISP_TEMP4

	ifl SHOTGUN_STRUGGLE_NUM -10
	rotatesprite DISP_TEMP2 190 NORMALSIZE 0 7810 shade cultist_pal 0 0 0 xdim ydim

	myospal DISP_TEMP2 DISP_TEMP3 DISP_TEMP shade 0 pal

	 ifg SHOTGUN_STRUGGLE_NUM -10
		{
		add DISP_TEMP3 80
		ifg SHOTGUN_STRUGGLE_NUM 75 rotatesprite DISP_TEMP2 DISP_TEMP3 45538 1024 CHOLDING_2 shade pal 4 0 0 xdim ydim
		else ifg SHOTGUN_STRUGGLE_NUM 25 rotatesprite DISP_TEMP2 DISP_TEMP3 55538 1024 CHOLDING_2 shade pal 4 0 0 xdim ydim
		else rotatesprite DISP_TEMP2 DISP_TEMP3 NORMALSIZE 1024 CHOLDING_2 shade pal 4 0 0 xdim ydim
	    add DISP_TEMP2 25
		add DISP_TEMP3 30
		ifg SHOTGUN_STRUGGLE_NUM 75 nullop
		else ifg SHOTGUN_STRUGGLE_NUM 25 rotatesprite DISP_TEMP2 DISP_TEMP3 55538 0 CHOLDING shade pal 0 0 0 xdim ydim
		else rotatesprite DISP_TEMP2 DISP_TEMP3 NORMALSIZE 0 CHOLDING shade pal 0 0 0 xdim ydim
		}

	}

	ifg CHOKE 0
	{
	set DISP_TEMP 190
	getp[].horiz DISP_TEMP2
	ifg DISP_TEMP2 100 { divvar DISP_TEMP2 5 add DISP_TEMP DISP_TEMP2 }
	rotatesprite 160 DISP_TEMP NORMALSIZE 0 7810 shade cultist_pal 0 0 0 xdim ydim
	}

	ifg FCHOKE 0
	{
	set DISP_TEMP 190
	getp[].horiz DISP_TEMP2
	ifg DISP_TEMP2 100 { divvar DISP_TEMP2 5 add DISP_TEMP DISP_TEMP2 }
	rotatesprite 160 DISP_TEMP NORMALSIZE 0 7810 0 27 33 0 0 xdim ydim
	}

	ife SPACE_SUIT 1
	 ifn CHAR 13
	  ifn CHAR 14
	   ifn CHAR 12
		{
		ifl player_shade_diff -5
			{
			set WEAP_DISP_TEMP3 player_shade_diff
			mulvar WEAP_DISP_TEMP3 2
			sub y 35
			rotatespritea 160 100 NORMALSIZE 0 22782 player_shade_diff wall_pal 33 WEAP_DISP_TEMP3 0 0 xdim ydim // Glass
			}
		rotatesprite 160 100 NORMALSIZE 0 7864 0 0 1024 0 0 xdim ydim
		rotatespritea 160 100 NORMALSIZE 0 7865 0 0 1024 -254 0 0 xdim ydim

		set HUD_DISP_TEMP LIFE_SUPPORT
		divvar HUD_DISP_TEMP 60
		qsprintf 1400 1401 HUD_DISP_TEMP
		screentext 2472 30 42 NORMALSIZE 0 0 1400 0 27 256 -255 5 16 0 0 524290 0 0 xdim ydim
		rotatespritea 30 52 HALFSIZE 0 22448 0 0 256 -255 0 0 xdim ydim

		}

	ife FIRE_SUIT 1
	 ifn CHAR 12
	  ifn CHAR 13
	   ifn CHAR 14
		{
		state water_driplets
		ifl player_shade_diff -5
			{
			set WEAP_DISP_TEMP3 player_shade_diff
			mulvar WEAP_DISP_TEMP3 2
			sub y 35
			rotatespritea 160 100 NORMALSIZE 0 22782 player_shade_diff wall_pal 33 WEAP_DISP_TEMP3 0 0 xdim ydim // Glass
			}
		rotatesprite 160 100 NORMALSIZE 0 22773 0 0 0 0 0 xdim ydim
		rotatespritea 160 100 NORMALSIZE 0 22774 0 0 0 -254 0 0 xdim ydim
		}

	ife JUGGERN_SUIT 1
	 ifn CHAR 12
	  ifn CHAR 13
	   ifn CHAR 14
		{
		state water_driplets
		ifl player_shade_diff -5
			{
			set WEAP_DISP_TEMP3 player_shade_diff
			mulvar WEAP_DISP_TEMP3 2
			sub y 35
			rotatespritea 160 100 NORMALSIZE 0 22782 player_shade_diff wall_pal 33 WEAP_DISP_TEMP3 0 0 xdim ydim // Glass
			}
		rotatesprite 60 23 NNORMALSIZE 0 23957 shade pal 256 0 0 xdim ydim
		rotatesprite 260 23 NNORMALSIZE 1024 23957 shade pal 516 0 0 xdim ydim
		}

	ife GAS_MASK 2
	ife ingas 26
	ifn CHAR 12
		{
		set DISP_TEMP6 4000
		// GASK MASK ON
		ifg GAS_MASK_PUTON 10
		 ifn CHAR 13
		  ifn CHAR 14
			{
			mulvarvar DISP_TEMP6 GAS_MASK_PUTON
			ifl player_shade_diff -5
				{
				set WEAP_DISP_TEMP3 player_shade_diff
				mulvar WEAP_DISP_TEMP3 2
				rotatespritea 160 100 DISP_TEMP6 0 22782 player_shade_diff wall_pal 33 WEAP_DISP_TEMP3 0 0 xdim ydim // Glass
				}
			rotatesprite 160 100 DISP_TEMP6 0 7923 shade pal 1024 0 0 xdim ydim
			}
		else
		ifl GAS_MASK_PUTON 8 // PUTTING IT ON
		ifg GAS_MASK_PUTON 0
			{
			set DISP_TEMP8 1000
			mulvarvar DISP_TEMP8 GAS_MASK_PUTON
			add DISP_TEMP8 NORMALSIZE
			set DISP_TEMP7 80
			sub DISP_TEMP7 GAS_MASK_PUTON
			mulvar DISP_TEMP7 2
			ife CHAR 12 rotatesprite 160 DISP_TEMP7 DISP_TEMP8 0 9440 shade pal 1024 0 0 xdim ydim
			else ife CHAR 13 rotatesprite 160 DISP_TEMP7 DISP_TEMP8 0 9440 shade pal 1024 0 0 xdim ydim
			else ife CHAR 14 rotatesprite 160 DISP_TEMP7 DISP_TEMP8 0 9440 shade pal 1024 0 0 xdim ydim
			else rotatesprite 160 DISP_TEMP7 DISP_TEMP8 0 9442 shade pal 1024 0 0 xdim ydim
			rotatesprite 90 DISP_TEMP7 DISP_TEMP8 1024 CHOLDING_2 shade pal 1028 0 0 xdim ydim
			rotatesprite 230 DISP_TEMP7 DISP_TEMP8 0 CHOLDING shade pal 1024 0 0 xdim ydim
			}
		else
		ifl GAS_MASK_PUTON 11
		ifg GAS_MASK_PUTON 7
			{
			rotatesprite 160 100 NNORMALSIZE 0 3584 30 4 1024 0 0 xdim ydim
			}

		getp[].fta DISP_TEMP
			ifg DISP_TEMP 0
				{
				getp[].ftq DISP_TEMP2
				gametext 2822 320 7 DISP_TEMP2 0 0 0 0 0 xdim ydim
				}
		}

	ife GAS_MASK 2
	ifg ingas 0
	ifl ingas 26
	ifn CHAR 12
		{
		set DISP_TEMP6 4000
		// TAKING GAS MASK OFF
		ifg ingas 10
		 ifn CHAR 13
		  ifn CHAR 14
			{
			mulvarvar DISP_TEMP6 ingas
			rotatesprite 160 100 DISP_TEMP6 0 7923 20 pal 1057 0 0 xdim ydim
			add DISP_TEMP6 2000
			rotatesprite 160 100 DISP_TEMP6 0 7923 20 pal 1025 0 0 xdim ydim
			add DISP_TEMP6 2000
			rotatesprite 160 100 DISP_TEMP6 0 7923 20 pal 1024 0 0 xdim ydim
			}
		else
		ifl ingas 8
		ifg ingas 0
			{
			set DISP_TEMP8 1000
			mulvarvar DISP_TEMP8 ingas
			add DISP_TEMP8 NORMALSIZE
			set DISP_TEMP7 80
			sub DISP_TEMP7 ingas
			mulvar DISP_TEMP7 2
			ife CHAR 12 rotatesprite 160 DISP_TEMP7 DISP_TEMP8 0 9440 10 pal 1024 0 0 xdim ydim
			else ife CHAR 13 rotatesprite 160 DISP_TEMP7 DISP_TEMP8 0 9440 10 pal 1024 0 0 xdim ydim
			else ife CHAR 14 rotatesprite 160 DISP_TEMP7 DISP_TEMP8 0 9440 10 pal 1024 0 0 xdim ydim
			else rotatesprite 160 DISP_TEMP7 DISP_TEMP8 0 9442 10 pal 1024 0 0 xdim ydim
			rotatesprite 90 DISP_TEMP7 DISP_TEMP8 1024 CHOLDING_2 0 pal 1028 0 0 xdim ydim
			rotatesprite 230 DISP_TEMP7 DISP_TEMP8 0 CHOLDING 0 pal 1024 0 0 xdim ydim
			}
		else
		ifl ingas 11
		ifg ingas 7
			{
			rotatesprite 160 100 NNORMALSIZE 0 3584 30 4 1024 0 0 xdim ydim
			}


		getp[].fta DISP_TEMP
			ifg DISP_TEMP 0
				{
				getp[].ftq DISP_TEMP2
				gametext 2822 320 7 DISP_TEMP2 0 0 0 0 0 xdim ydim
				}
		}

}

// can't remember if I made this code or M210 did for his old Blood Eduke mod...apologies to him if it is and I forgot
ifg FIRE_DAMAGE 0
{
	set x 10
	whilevarn x 340
	{
		getticks DISP_TEMP
		divvar DISP_TEMP 50
		add DISP_TEMP x
		modvar DISP_TEMP 13
		set tilenum 2270
		add tilenum DISP_TEMP
		set y 240
		sub y FIRE_DAMAGE
		sub y 10
		ifl y 200 set y 200
		rotatesprite x y HALFSIZE 0 tilenum -128 0 1024 0 0 xdim ydim
		add x 30
	}
}

ifl SPRINTING PMAX_STAMINA // Bar code from DukePlus by DeeperThought
		{
        // Center the sprinting bar
		set digx 158
        set DISP_TEMP5 PMAX_STAMINA
        divvar DISP_TEMP5 2
		sub digx DISP_TEMP5
        
        // Store the position so we don't have to recompute it
        set DISP_TEMP6 digx
        
		set DISP_TEMP3 digx
		add DISP_TEMP3 SPRINTING

		// handles the additive shade value
        // Once the sprint bar is close to being full, it's supposed to disappear.
        // Explicitly check that SPRINTING > DISP_TEMP2 to prevent an underflow from occurring.
		set DISP_TEMP2 PMAX_STAMINA
		sub DISP_TEMP2 30
		ifg SPRINTING DISP_TEMP2 {
            mulvar DISP_TEMP2 -1
            add DISP_TEMP2 SPRINTING
        } else set DISP_TEMP2 0

		set DISP_TEMP 0
		whilevarn DISP_TEMP 1
			{
			ifg digx DISP_TEMP3 set DISP_TEMP 1
			ife GUN_SIZE 0 set DISP_TEMP4 1
			else ife GUN_SIZE 1 set DISP_TEMP4 8
			else ife GUN_SIZE 2 set DISP_TEMP4 21
			else ife GUN_SIZE 3 set DISP_TEMP4 10
			rotatespritea digx 175 QUARTERSIZE 0 4732 DISP_TEMP2 DISP_TEMP4 0 -255 0 0 xdim ydim
			add digx 1
			break
			}
		ifl SPRINTING 0 set DISP_TEMP3 27 else set DISP_TEMP3 DISP_TEMP4
		set digx DISP_TEMP6
		sub digx 10
		rotatespritea digx 175 HALFSIZE 0 2098 DISP_TEMP2 DISP_TEMP3 0 -255 0 0 xdim ydim
		}

ife CONTROL_VR -1 ife camerasprite -1 ife SLO_MO_SHOWOFF 0 state ALLY_STATUS_STUFF

ife fire_mode_menu 1
{
ifand GUN_AMMO_TYPES 1 // standard special shells
	{
	gametextz 2822 11 71 700 0 4 289 0 0 xdim ydim HALFSIZE
	ifg explosive_shells 0 gametextz 2822 11 75 701 0 4 289 0 0 xdim ydim HALFSIZE
	ifg flechete_shells 0 gametextz 2822 11 79 702 0 4 289 0 0 xdim ydim HALFSIZE
	gametextz 2822 11 83 703 0 4 289 0 0 xdim ydim HALFSIZE

	gametextz 2822 10 70 700 0 27 256 0 0 xdim ydim HALFSIZE
	ifg explosive_shells 0 gametextz 2822 10 74 701 0 2 256 0 0 xdim ydim HALFSIZE
	ifg flechete_shells 0 gametextz 2822 10 78 702 0 8 256 0 0 xdim ydim HALFSIZE
	gametextz 2822 10 82 703 0 27 256 0 0 xdim ydim HALFSIZE
	}
ifand GUN_AMMO_TYPES 4 // advanced special shells
	{
	gametextz 2822 10 70 700 0 27 256 0 0 xdim ydim HALFSIZE
	ifg magnum_shells 0 gametextz 2822 11 86 704 0 7 256 0 0 xdim ydim HALFSIZE
	ifg dragon_shells 0 gametextz 2822 11 90 705 0 19 256 0 0 xdim ydim HALFSIZE
	gametextz 2822 10 82 703 0 27 256 0 0 xdim ydim HALFSIZE
	}

gametextz 2822 11 111 610 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 10 110 610 0 27 256 0 0 xdim ydim HALFSIZE
}

ife fire_mode_menu 2
{
gametextz 2822 11 71 700 0 4 289 0 0 xdim ydim HALFSIZE
ifg silver_ammo 0 gametextz 2822 11 75 710 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 79 711 0 4 289 0 0 xdim ydim HALFSIZE

gametextz 2822 10 70 700 0 27 256 0 0 xdim ydim HALFSIZE
ifg silver_ammo 0 gametextz 2822 10 74 710 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 78 711 0 0 256 0 0 xdim ydim HALFSIZE

gametextz 2822 11 111 610 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 10 110 610 0 27 256 0 0 xdim ydim HALFSIZE
}

ife fire_mode_menu 3
{
gametextz 2822 11 71 700 0 4 289 0 0 xdim ydim HALFSIZE
ifand GUNFIREMODE 32768 gametextz 2822 11 75 721 0 4 289 0 0 xdim ydim HALFSIZE
else gametextz 2822 11 75 720 0 4 289 0 0 xdim ydim HALFSIZE

gametextz 2822 10 70 700 0 27 256 0 0 xdim ydim HALFSIZE
ifand GUNFIREMODE 32768 gametextz 2822 10 74 721 0 27 256 0 0 xdim ydim HALFSIZE
else gametextz 2822 10 74 720 0 27 256 0 0 xdim ydim HALFSIZE

gametextz 2822 11 111 610 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 10 110 610 0 27 256 0 0 xdim ydim HALFSIZE
}

ife fire_mode_menu 4
{
gametextz 2822 11 71 700 0 4 289 0 0 xdim ydim HALFSIZE
ifg silver_bolts 0 gametextz 2822 11 75 730 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 79 731 0 4 289 0 0 xdim ydim HALFSIZE

gametextz 2822 10 70 700 0 27 256 0 0 xdim ydim HALFSIZE
ifg silver_bolts 0 gametextz 2822 10 74 730 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 78 731 0 0 256 0 0 xdim ydim HALFSIZE

gametextz 2822 11 111 610 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 10 110 610 0 27 256 0 0 xdim ydim HALFSIZE
}

ife fire_mode_menu 5
{
gametextz 2822 11 71 700 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 75 740 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 79 741 0 4 289 0 0 xdim ydim HALFSIZE

gametextz 2822 10 70 700 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 74 740 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 78 741 0 0 256 0 0 xdim ydim HALFSIZE

gametextz 2822 11 111 610 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 10 110 610 0 27 256 0 0 xdim ydim HALFSIZE
}

ife fire_mode_menu 6
{
gametextz 2822 11 71 700 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 75 745 0 4 289 0 0 xdim ydim HALFSIZE
ifg DUP_missile_ammo 0 gametextz 2822 11 79 746 0 4 289 0 0 xdim ydim HALFSIZE

gametextz 2822 10 70 700 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 74 745 0 27 256 0 0 xdim ydim HALFSIZE
ifg DUP_missile_ammo 0 gametextz 2822 10 78 746 0 8 256 0 0 xdim ydim HALFSIZE

gametextz 2822 11 111 610 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 10 110 610 0 27 256 0 0 xdim ydim HALFSIZE
}

ife fire_mode_menu 7
{
gametextz 2822 11 71 700 0 4 289 0 0 xdim ydim HALFSIZE
ifg fortymm_grenades 0 gametextz 2822 11 75 760 0 4 289 0 0 xdim ydim HALFSIZE
ifg fortymm_shells 0 gametextz 2822 11 79 761 0 4 289 0 0 xdim ydim HALFSIZE
ifg fortymm_MIA_shells 0 gametextz 2822 11 83 762 0 4 289 0 0 xdim ydim HALFSIZE
ifg fortymm_plasma 0 gametextz 2822 11 87 763 0 4 289 0 0 xdim ydim HALFSIZE

gametextz 2822 10 70 700 0 27 256 0 0 xdim ydim HALFSIZE
ifg fortymm_grenades 0 gametextz 2822 10 74 760 0 0 256 0 0 xdim ydim HALFSIZE
ifg fortymm_shells 0 gametextz 2822 10 78 761 0 2 256 0 0 xdim ydim HALFSIZE
ifg fortymm_MIA_shells 0 gametextz 2822 10 82 762 0 7 256 0 0 xdim ydim HALFSIZE
ifg fortymm_plasma 0 gametextz 2822 10 86 763 0 8 256 0 0 xdim ydim HALFSIZE

gametextz 2822 11 107 769 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 10 106 769 0 0 256 0 0 xdim ydim HALFSIZE
gametextz 2822 11 111 610 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 10 110 610 0 27 256 0 0 xdim ydim HALFSIZE
}

ife fire_mode_menu 8
{
gametextz 2822 11 71 700 0 4 289 0 0 xdim ydim HALFSIZE
ifg fortymm_caseless 0 gametextz 2822 11 75 760 0 4 289 0 0 xdim ydim HALFSIZE
ifg fortymm_slug 0 gametextz 2822 11 79 771 0 4 289 0 0 xdim ydim HALFSIZE
ifg fortymm_electro 0 gametextz 2822 11 83 772 0 4 289 0 0 xdim ydim HALFSIZE
ifg fortymm_cryo 0 gametextz 2822 11 87 773 0 4 289 0 0 xdim ydim HALFSIZE

gametextz 2822 10 70 700 0 27 256 0 0 xdim ydim HALFSIZE
ifg fortymm_caseless 0 gametextz 2822 10 74 760 0 0 256 0 0 xdim ydim HALFSIZE
ifg fortymm_slug 0 gametextz 2822 10 78 771 0 2 256 0 0 xdim ydim HALFSIZE
ifg fortymm_electro 0 gametextz 2822 10 82 772 0 1 256 0 0 xdim ydim HALFSIZE
ifg fortymm_cryo 0 gametextz 2822 10 86 773 0 7 256 0 0 xdim ydim HALFSIZE

gametextz 2822 11 107 769 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 10 106 769 0 0 256 0 0 xdim ydim HALFSIZE
gametextz 2822 11 111 610 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 10 110 610 0 27 256 0 0 xdim ydim HALFSIZE
}

ife voice_comm_menu 9
{
gametextz 2822 11 71 600 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 75 590 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 79 591 0 4 289 0 0 xdim ydim HALFSIZE
ifn ALLYSLOT1 -1 gametextz 2822 11 83 592 0 4 289 0 0 xdim ydim HALFSIZE
ifn ALLYSLOT2 -1 gametextz 2822 11 87 593 0 4 289 0 0 xdim ydim HALFSIZE
ifn ALLYSLOT3 -1 gametextz 2822 11 91 594 0 4 289 0 0 xdim ydim HALFSIZE
ifn ALLYSLOT4 -1 gametextz 2822 11 95 589 0 4 289 0 0 xdim ydim HALFSIZE

gametextz 2822 10 70 600 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 74 590 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 78 591 0 27 256 0 0 xdim ydim HALFSIZE
ifn ALLYSLOT1 -1 gametextz 2822 10 82 592 0 27 256 0 0 xdim ydim HALFSIZE
ifn ALLYSLOT2 -1 gametextz 2822 10 86 593 0 27 256 0 0 xdim ydim HALFSIZE
ifn ALLYSLOT3 -1 gametextz 2822 10 90 594 0 27 256 0 0 xdim ydim HALFSIZE
ifn ALLYSLOT4 -1 gametextz 2822 10 94 589 0 27 256 0 0 xdim ydim HALFSIZE

gametextz 2822 11 111 610 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 10 110 610 0 27 256 0 0 xdim ydim HALFSIZE
}
else
ife voice_comm_menu 1
{
gametextz 2822 11 71 600 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 75 601 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 79 602 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 83 603 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 87 604 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 91 605 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 95 606 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 99 607 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 103 608 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 107 609 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 111 610 0 4 289 0 0 xdim ydim HALFSIZE

gametextz 2822 10 70 600 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 74 601 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 78 602 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 82 603 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 86 604 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 90 605 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 94 606 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 98 607 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 102 608 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 106 609 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 110 610 0 27 256 0 0 xdim ydim HALFSIZE
}
else
ife voice_comm_menu 2
{
gametextz 2822 11 71 600 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 75 611 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 79 612 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 83 613 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 87 614 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 91 615 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 95 616 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 99 617 0 4 289 10 0 xdim ydim HALFSIZE
gametextz 2822 11 103 618 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 107 619 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 111 610 0 4 289 0 0 xdim ydim HALFSIZE


gametextz 2822 10 70 600 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 74 611 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 78 612 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 82 613 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 86 614 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 90 615 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 94 616 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 98 617 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 102 618 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 106 619 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 110 610 0 27 256 0 0 xdim ydim HALFSIZE
}
else
ife voice_comm_menu 3
{
gametextz 2822 11 71 600 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 75 621 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 79 622 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 83 623 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 87 624 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 91 625 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 95 626 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 99 627 0 4 289 10 0 xdim ydim HALFSIZE
gametextz 2822 11 103 628 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 107 629 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 111 610 0 4 289 0 0 xdim ydim HALFSIZE


gametextz 2822 10 70 600 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 74 621 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 78 622 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 82 623 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 86 624 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 90 625 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 94 626 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 98 627 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 102 628 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 106 629 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 110 610 0 27 256 0 0 xdim ydim HALFSIZE
}
else
ife voice_comm_menu 5 // Ally 1 menu
{
gametextz 2822 11 71 599 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 75 595 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 79 596 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 83 597 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 87 598 0 4 289 0 0 xdim ydim HALFSIZE

gametextz 2822 10 70 599 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 74 595 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 78 596 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 82 597 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 86 598 0 27 256 0 0 xdim ydim HALFSIZE

gametextz 2822 11 111 610 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 10 110 610 0 27 256 0 0 xdim ydim HALFSIZE
}
else
ife voice_comm_menu 6 // Ally 2 menu
{
gametextz 2822 11 71 599 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 75 595 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 79 596 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 83 597 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 87 598 0 4 289 0 0 xdim ydim HALFSIZE

gametextz 2822 10 70 599 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 74 595 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 78 596 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 82 597 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 86 598 0 27 256 0 0 xdim ydim HALFSIZE

gametextz 2822 11 111 610 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 10 110 610 0 27 256 0 0 xdim ydim HALFSIZE
}
else
ife voice_comm_menu 7 // Ally 3 menu
{
gametextz 2822 11 71 599 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 75 595 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 79 596 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 83 597 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 87 598 0 4 289 0 0 xdim ydim HALFSIZE

gametextz 2822 10 70 599 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 74 595 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 78 596 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 82 597 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 86 598 0 27 256 0 0 xdim ydim HALFSIZE

gametextz 2822 11 111 610 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 10 110 610 0 27 256 0 0 xdim ydim HALFSIZE
}
else
ife voice_comm_menu 8 // Ally 4 menu
{
gametextz 2822 11 71 599 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 75 595 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 79 596 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 83 597 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 87 598 0 4 289 0 0 xdim ydim HALFSIZE

gametextz 2822 10 70 599 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 74 595 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 78 596 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 82 597 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 86 598 0 27 256 0 0 xdim ydim HALFSIZE

gametextz 2822 11 111 610 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 10 110 610 0 27 256 0 0 xdim ydim HALFSIZE
}
}

ifn CONTROL_VR -1
	{
	rotatesprite 160 100 NORMALSIZE 0 12529 0 0 1024 0 0 xdim ydim
	digitalnumberz DIGITALNUM 182 186 VR_ACTION_POINTS 0 8 0 0 0 xdim ydim 55536

	getp[].fta DISP_TEMP // Gets any quotes that are being displayed
		ifg DISP_TEMP 0
			{
			getp[].ftq DISP_TEMP2
			gametext 2822 320 53 DISP_TEMP2 0 0 0 0 0 xdim ydim
			}

	}

ife camerasprite -1
ife CONTROL_VR -1
ife DOCUMENT -1
ife player[].newowner -1
ife PCINTER 0
ife CHARSELECT 0
state player_huds

 ife player_using_train 0
  ife MISSIONUP 0
	{
	ife hc_gear -1 rotatespritea 160 140 QUARTERSIZE 0 22744 0 27 0 -255 0 0 xdim ydim
	ife hc_gear 0 rotatespritea 160 140 QUARTERSIZE 0 22744 0 0 0 -255 0 0 xdim ydim
	ife hc_gear 1 rotatespritea 160 140 QUARTERSIZE 0 22745 0 0 0 -255 0 0 xdim ydim
	ife hc_gear 2 rotatespritea 160 140 QUARTERSIZE 0 22746 0 0 0 -255 0 0 xdim ydim
	ife hc_gear 3 rotatespritea 160 140 QUARTERSIZE 0 22747 0 0 0 -255 0 0 xdim ydim
	ife hc_gear 4 rotatespritea 160 140 QUARTERSIZE 0 22748 0 0 0 -255 0 0 xdim ydim
	ife hc_gear 5 rotatespritea 160 140 QUARTERSIZE 0 22749 0 0 0 -255 0 0 xdim ydim
	}

	ifn HACKING_PROGRESS -1
	{
	set DISP_TEMP HACKING_PROGRESS
	ifl DISP_TEMP 13 set DISP_TEMP3 10675 else
	ifl DISP_TEMP 26 set DISP_TEMP3 10676 else
	ifl DISP_TEMP 39 set DISP_TEMP3 10677 else
	ifl DISP_TEMP 52 set DISP_TEMP3 10678 else
	ifl DISP_TEMP 65 set DISP_TEMP3 10679 else
	ifl DISP_TEMP 78 set DISP_TEMP3 10680 else
	ifl DISP_TEMP 91 set DISP_TEMP3 10681 else
	ifl DISP_TEMP 104 set DISP_TEMP3 10682 else
	ifl DISP_TEMP 117 set DISP_TEMP3 10683 else
	ifl DISP_TEMP 130 set DISP_TEMP3 10684 else
	set DISP_TEMP3 10675
	rotatesprite 160 60 HALFSIZE 0 DISP_TEMP3 0 0 0 0 0 xdim ydim

	}

	ife camerasprite -1
	{
	ifn SHIP_INTEGRITY -1
		{
		set DISP_TEMP SHIP_INTEGRITY
		divvar DISP_TEMP 10
		ife DISP_TEMP 100 set DISP_TEMP3 10675 else
		ifg DISP_TEMP 90 set DISP_TEMP3 10676 else
		ifg DISP_TEMP 80 set DISP_TEMP3 10677 else
		ifg DISP_TEMP 70 set DISP_TEMP3 10678 else
		ifg DISP_TEMP 60 set DISP_TEMP3 10679 else
		ifg DISP_TEMP 50 set DISP_TEMP3 10680 else
		ifg DISP_TEMP 40 set DISP_TEMP3 10681 else
		ifg DISP_TEMP 30 set DISP_TEMP3 10682 else
		ifg DISP_TEMP 20 set DISP_TEMP3 10683 else
		ifg DISP_TEMP 10 set DISP_TEMP3 10684 else
		set DISP_TEMP3 10685
		rotatesprite 160 15 HALFSIZE 0 DISP_TEMP3 0 0 0 0 0 xdim ydim
		rotatesprite 160 15 HALFSIZE 0 16623 0 0 0 0 0 xdim ydim
		}

	ifn HUGE_BOSS_HEALTH -1
		{
		set DISP_TEMP HUGE_BOSS_HEALTH
		divvar DISP_TEMP 10


		rotatesprite 160 35 16384 0 11184 0 0 0 0 0 xdim ydim
			set digx 110
			// sub digx DISP_TEMP

			set DISP_TEMP3 digx

			add DISP_TEMP3 DISP_TEMP
			set DISP_TEMP 0
			whilevarn DISP_TEMP 1
				{
				set DISP_TEMP4 21
					  ifg digx DISP_TEMP3 set DISP_TEMP 1
					  rotatespritea digx 35 QUARTERSIZE 0 3647 0 DISP_TEMP4 0 -255 0 0 xdim ydim
					  add digx 1
					  break
				}
		rotatesprite 160 35 16384 0 11185 0 0 0 0 0 xdim ydim

		}
	}

	ifn REACTOR_VAR -1
	{
	set DISP_TEMP REACTOR_VAR
	divvar DISP_TEMP 10
	ife DISP_TEMP 100 set DISP_TEMP3 10675 else
	ifg DISP_TEMP 90 set DISP_TEMP3 10676 else
	ifg DISP_TEMP 80 set DISP_TEMP3 10677 else
	ifg DISP_TEMP 70 set DISP_TEMP3 10678 else
	ifg DISP_TEMP 60 set DISP_TEMP3 10679 else
	ifg DISP_TEMP 50 set DISP_TEMP3 10680 else
	ifg DISP_TEMP 40 set DISP_TEMP3 10681 else
	ifg DISP_TEMP 30 set DISP_TEMP3 10682 else
	ifg DISP_TEMP 20 set DISP_TEMP3 10683 else
	ifg DISP_TEMP 10 set DISP_TEMP3 10684 else
	set DISP_TEMP3 10685
	rotatesprite 160 20 HALFSIZE 0 DISP_TEMP3 0 0 0 0 0 xdim ydim
	rotatesprite 160 20 HALFSIZE 0 10674 0 0 0 0 0 xdim ydim
	ifg REACTOR_BREACH 0 rotatesprite 160 20 HALFSIZE 0 10686 0 0 0 0 0 xdim ydim
	}


	ifn CURBOSS -1
	ifl SKILL_LEVEL 5
	{
	geta[CURBOSS].extra DISP_TEMP
	ifl DISP_TEMP 1 set CURBOSS -1

    // If boss active, check if it is a new boss -- if so, store old boss and replace
	ifn CURBOSS -1 
    {
        ifn BOSS_STACK[BOSS_IDX] CURBOSS ifl BOSS_IDX 15 {
            add BOSS_IDX 1
            setarray BOSS_STACK[BOSS_IDX] CURBOSS
        }
        geta[CURBOSS].picnum DISP_TEMP2
	} 
    else // boss dead --> retrieve old boss if exists
    {
        ifg BOSS_IDX 0 
        {
            set CURBOSS BOSS_STACK[BOSS_IDX]
            sub BOSS_IDX 1
        }
    }
    // set boss type inside switch in future
    switch DISP_TEMP2 
	case MISTERH 
		divvar DISP_TEMP 41
        set BOSS_TYPE 5
		ife sprite[CURBOSS].pal 41 qputs 1666
		else qputs 1666 Mr Hyde
		break
	case BOSS1 
		divvar DISP_TEMP 46
        set BOSS_TYPE 1
		qputs 1666
		break
	case BOSS2 
		divvar DISP_TEMP 46
        set BOSS_TYPE 1
		qputs 1666
		break
	case BOSS3 
		divvar DISP_TEMP 46
        set BOSS_TYPE 1
        qputs 1666
		break
	case BOSS4 
		divvar DISP_TEMP 61
        set BOSS_TYPE 1
		qputs 1666
		break
	case LAVA_BEAST 
		divvar DISP_TEMP 41
        set BOSS_TYPE 7
		qputs 1666
		break
	case ALUDRAN 
		divvar DISP_TEMP 31
        set BOSS_TYPE 7
		qputs 1666
		break
	case LIZBOSS 
		divvar DISP_TEMP 61
        set BOSS_TYPE 1
		qputs 1666
		break
	case PIGBOSS 
		divvar DISP_TEMP 46
        set BOSS_TYPE 1
		qputs 1666
		break
	case BOSS5 
		divvar DISP_TEMP 91
        set BOSS_TYPE 1
		qputs 1666 Cycloid High Emperor
		break
	case HPOWERSUIT 
		divvar DISP_TEMP 61
        set BOSS_TYPE 4
		qputs 1666
		break
	case EAST_ROBOT
		divvar DISP_TEMP 61
        set BOSS_TYPE 6
		qputs 1666
		break		
	case VILMOS_ROBOT 
		divvar DISP_TEMP 91
        set BOSS_TYPE 4
		qputs 1666
		break
	case TRENTON_SOLARI 
		divvar DISP_TEMP 101
        set BOSS_TYPE 8
		qputs 1666 Trenton Solari 
		break
	case ABYSS_DESPOT
		ife sprite[CURBOSS].pal 41 
		{
		divvar DISP_TEMP 61 
        set BOSS_TYPE 2
		qputs 1666
		}
		else 
		{ 
		divvar DISP_TEMP 121
        set BOSS_TYPE 2
		qputs 1666
		}
		break
	case SPIDERDEMON 
		divvar DISP_TEMP 121
        set BOSS_TYPE 2
		qputs 1666
		break
    case CYBERDEMON
        divvar DISP_TEMP 61
        set BOSS_TYPE 2
        qputs 1666
        break
	case 5460 // Zaxtor Boss ?
		divvar DISP_TEMP 6
        set BOSS_TYPE 0
		qputs 1666
		break
	case 10752 // E1 Boss (name intentionally left blank)
		divvar DISP_TEMP 151
        set BOSS_TYPE 2
		qputs 1666
		break
	case DARKAVATAR 
		divvar DISP_TEMP 81
        set BOSS_TYPE 5
		qputs 1666
		break
	case SERPENT_GOD 
		divvar DISP_TEMP 81
        set BOSS_TYPE 6
		qputs 1666 Serpent God
		break
	case MADRAX 
		divvar DISP_TEMP 51
        set BOSS_TYPE 0
		qputs 1666 Maddrax
		break
	case 21341 // Zaxtor Boss Eyes?
		divvar DISP_TEMP 71
		set BOSS_TYPE 0
        qputs 1666
		break
	case LESANG 
        ife sprite[CURBOSS].pal 3 divvar DISP_TEMP 121 // 12000 HP
		else divvar DISP_TEMP 81 // 8000 HP
        set BOSS_TYPE 7
		qputs 1666 Le Sang 
		break
    case SCORPIONESS
        ife sprite[CURBOSS].pal 42 divvar DISP_TEMP 26
        else divvar DISP_TEMP 11
        set BOSS_TYPE 7
		qputs 1666
        break
    case GWBOSS
        divvar DISP_TEMP 61
        set BOSS_TYPE 4
        qputs 1666 
        break
    case SHAMBLER
        divvar DISP_TEMP 31
        set BOSS_TYPE 5
        qputs 1666
        break
	default
        set BOSS_TYPE -1
		qputs 1666
		break
	endswitch

	ife BOSS_TYPE 0
		{
		rotatesprite 158 25 40958 0 3648 0 0 0 0 0 xdim ydim
			set digx 110
			// sub digx DISP_TEMP

			set DISP_TEMP3 digx

			add DISP_TEMP3 DISP_TEMP
			set DISP_TEMP 0
			whilevarn DISP_TEMP 1
				{
				ife DISP_TEMP2 VILMOS_ROBOT set DISP_TEMP4 12
				else ife DISP_TEMP2 HPOWERSUIT set DISP_TEMP4 12
				else ife DISP_TEMP2 EAST_ROBOT set DISP_TEMP4 12
				else ife DISP_TEMP2 DARKAVATAR set DISP_TEMP4 0
				else set DISP_TEMP4 21
					  ifg digx DISP_TEMP3 set DISP_TEMP 1
					  rotatespritea digx 25 QUARTERSIZE 0 3647 0 DISP_TEMP4 0 -255 0 0 xdim ydim
					  add digx 1
					  break
				}
		rotatesprite 158 25 40958 0 3646 0 0 0 0 0 xdim ydim
        	gametextz STARTALPHANUM 320 39 1666 0 24 0 0 0 xdim ydim HALFSIZE
		}

	else ife BOSS_TYPE 1 // Cycloid
		{
		rotatesprite 158 25 16384 0 11186 0 0 0 0 0 xdim ydim
			set digx 110
			// sub digx DISP_TEMP

			set DISP_TEMP3 digx

			add DISP_TEMP3 DISP_TEMP
			set DISP_TEMP 0
			whilevarn DISP_TEMP 1
				{
				set DISP_TEMP4 21
					  ifg digx DISP_TEMP3 set DISP_TEMP 1
					  rotatespritea digx 27 QUARTERSIZE 0 3647 0 DISP_TEMP4 0 -255 0 0 xdim ydim
					  add digx 1
					  break
				}
		rotatesprite 158 25 16384 0 11187 0 0 0 0 0 xdim ydim
        	gametextz STARTALPHANUM 320 40 1666 0 24 0 0 0 xdim ydim HALFSIZE
		}

	else ife BOSS_TYPE 2 // Demonic
		{
		rotatesprite 158 25 16384 0 11184 0 0 0 0 0 xdim ydim
			set digx 110
			// sub digx DISP_TEMP

			set DISP_TEMP3 digx

			add DISP_TEMP3 DISP_TEMP
			set DISP_TEMP 0
			whilevarn DISP_TEMP 1
				{
				set DISP_TEMP4 21
					  ifg digx DISP_TEMP3 set DISP_TEMP 1
					  rotatespritea digx 25 QUARTERSIZE 0 3647 0 DISP_TEMP4 0 -255 0 0 xdim ydim
					  add digx 1
					  break
				}
		rotatesprite 158 25 16384 0 11185 0 0 0 0 0 xdim ydim
        	gametextz STARTALPHANUM 320 40 1666 0 24 0 0 0 xdim ydim HALFSIZE
		}

	else ife BOSS_TYPE 3 // Medievil
		{
		rotatesprite 158 25 16384 0 11188 0 0 0 0 0 xdim ydim
			set digx 110
			// sub digx DISP_TEMP

			set DISP_TEMP3 digx

			add DISP_TEMP3 DISP_TEMP
			set DISP_TEMP 0
			whilevarn DISP_TEMP 1
				{
				set DISP_TEMP4 21
					  ifg digx DISP_TEMP3 set DISP_TEMP 1
					  rotatespritea digx 25 QUARTERSIZE 0 3647 0 DISP_TEMP4 0 -255 0 0 xdim ydim
					  add digx 1
					  break
				}
		rotatesprite 158 25 16384 0 11189 0 0 0 0 0 xdim ydim
        	gametextz STARTALPHANUM 320 40 1666 0 24 0 0 0 xdim ydim HALFSIZE
		}

	else ife BOSS_TYPE 4 // Robotic/Mech
		{
		rotatesprite 158 15 16384 0 11192 0 0 8 0 0 xdim ydim
			set digx 110
			// sub digx DISP_TEMP

			set DISP_TEMP3 digx

			add DISP_TEMP3 DISP_TEMP
			set DISP_TEMP 0
			whilevarn DISP_TEMP 1
				{
				set DISP_TEMP4 21
					  ifg digx DISP_TEMP3 set DISP_TEMP 1
					  rotatespritea digx 18 QUARTERSIZE 0 3647 0 DISP_TEMP4 0 -255 0 0 xdim ydim
					  add digx 1
					  break
				}
        	gametextz STARTALPHANUM 320 32 1666 0 24 0 0 0 xdim ydim HALFSIZE
		}

	else ife BOSS_TYPE 5 // Paranormal
		{
		rotatesprite 158 25 16384 0 11193 0 49 0 0 0 xdim ydim
			set digx 110
			// sub digx DISP_TEMP

			set DISP_TEMP3 digx

			add DISP_TEMP3 DISP_TEMP
			set DISP_TEMP 0
			whilevarn DISP_TEMP 1
				{
				set DISP_TEMP4 21
					  ifg digx DISP_TEMP3 set DISP_TEMP 1
					  rotatespritea digx 26 QUARTERSIZE 0 3647 0 DISP_TEMP4 0 -255 0 0 xdim ydim
					  add digx 1
					  break
				}
        	gametextz STARTALPHANUM 320 38 1666 0 24 0 0 0 xdim ydim HALFSIZE
		}

	else ife BOSS_TYPE 6 // Japanese/Shadow Realm
		{
		rotatesprite 158 25 18384 0 11194 0 0 0 0 0 xdim ydim
			set digx 110
			// sub digx DISP_TEMP

			set DISP_TEMP3 digx

			add DISP_TEMP3 DISP_TEMP
			set DISP_TEMP 0
			whilevarn DISP_TEMP 1
				{
				set DISP_TEMP4 21
					  ifg digx DISP_TEMP3 set DISP_TEMP 1
					  rotatespritea digx 26 QUARTERSIZE 0 3647 0 DISP_TEMP4 0 -255 0 0 xdim ydim
					  add digx 1
					  break
				}
        	gametextz STARTALPHANUM 320 40 1666 0 24 0 0 0 xdim ydim HALFSIZE
		}

	else ife BOSS_TYPE 7 // Egypt
		{
		rotatesprite 158 25 16384 0 11190 0 0 0 0 0 xdim ydim
			set digx 110
			// sub digx DISP_TEMP

			set DISP_TEMP3 digx

			add DISP_TEMP3 DISP_TEMP
			set DISP_TEMP 0
			whilevarn DISP_TEMP 1
				{
				set DISP_TEMP4 21
					  ifg digx DISP_TEMP3 set DISP_TEMP 1
					  rotatespritea digx 27 QUARTERSIZE 0 3647 0 DISP_TEMP4 0 -255 0 0 xdim ydim
					  add digx 1
					  break
				}
		rotatesprite 158 28 9192 0 11191 0 0 0 0 0 xdim ydim
        	gametextz STARTALPHANUM 320 41 1666 0 24 0 0 0 xdim ydim HALFSIZE
		}

	else ife BOSS_TYPE 8 // Vampire
		{
		rotatesprite 158 25 16384 0 11195 0 0 0 0 0 xdim ydim
			set digx 110
			// sub digx DISP_TEMP

			set DISP_TEMP3 digx

			add DISP_TEMP3 DISP_TEMP
			set DISP_TEMP 0
			whilevarn DISP_TEMP 1
				{
				set DISP_TEMP4 21
					  ifg digx DISP_TEMP3 set DISP_TEMP 1
					  rotatespritea digx 26 QUARTERSIZE 0 3647 0 DISP_TEMP4 0 -255 0 0 xdim ydim
					  add digx 1
					  break
				}
		rotatesprite 158 24 16384 0 11196 0 0 0 0 0 xdim ydim
        	gametextz STARTALPHANUM 320 40 1666 0 24 0 0 0 xdim ydim HALFSIZE
		}

	}


ifg PBEENHIT 0
	{
	sub PBEENHIT 1
	set DISP_TEMP3 0
	whilevarn DISP_TEMP3 16
		{
		ifg AR_PBEENHIT[DISP_TEMP3] 0
			{
			set DISP_TEMP4 AR_PBEENHIT[DISP_TEMP3]
			sub DISP_TEMP4 1
			setarray AR_PBEENHIT[DISP_TEMP3] DISP_TEMP4
			ifl AR_PBEENHIT[DISP_TEMP3] 6
				{
				set DISP_TEMP AR_PBEENHIT[DISP_TEMP3]
				set DISP_TEMP2 10
				sub DISP_TEMP2 DISP_TEMP
				mulvar DISP_TEMP2 2
				}
				else set DISP_TEMP2 0
			rotatespritea 160 100 QUARTERSIZE AR_PHITANGLE[DISP_TEMP3] 3612 DISP_TEMP2 0 1 -255 0 0 xdim ydim
			}
		add DISP_TEMP3 1
		}
	}

ifl PBEENHIT 0
	{
	add PBEENHIT 1
	set DISP_TEMP3 0
	whilevarn DISP_TEMP3 16
		{
		ifl AR_PBEENHIT[DISP_TEMP3] 0
			{
			set DISP_TEMP4 AR_PBEENHIT[DISP_TEMP3]
			add DISP_TEMP4 1
			setarray AR_PBEENHIT[DISP_TEMP3] DISP_TEMP4
			ifg AR_PBEENHIT[DISP_TEMP3] -6
				{
				set DISP_TEMP AR_PBEENHIT[DISP_TEMP3]
				mulvar DISP_TEMP -1
				set DISP_TEMP2 10
				sub DISP_TEMP2 DISP_TEMP
				mulvar DISP_TEMP2 2
				}
				else set DISP_TEMP2 0
			ifg P_ENERGYSHIELD 0 rotatespritea 160 100 QUARTERSIZE AR_PHITANGLE[DISP_TEMP3] 3612 DISP_TEMP2 32 1 -255 0 0 xdim ydim
			else rotatespritea 160 100 QUARTERSIZE AR_PHITANGLE[DISP_TEMP3] 3612 DISP_TEMP2 27 1 -255 0 0 xdim ydim
			}
		add DISP_TEMP3 1
		}
	}

ife camerasprite -1
ife MISSIONUP 0
{
	ifl player_swap 26
	{
	ifg player_swap 16 set DISP_TEMP 33 else
	ifg player_swap 10 set DISP_TEMP 1 else
	set DISP_TEMP 0
	getkeyname 406 6 2
	ifl player_swap 22
		{
		set DISP_TEMP2 1500
		mul DISP_TEMP2 DISP_PULSE
		add DISP_TEMP2 6000
		rotatespritea 130 160 20000 0 WEAPON0_TILE player_swap 0 DISP_TEMP -255 0 0 xdim ydim
		rotatespritea 160 160 DISP_TEMP2 512 3675 player_swap 0 DISP_TEMP -255 0 0 xdim ydim
		rotatespritea 190 160 20000 0 swap_tile player_swap 0 DISP_TEMP -255 0 0 xdim ydim
		gametextz STARTALPHANUM 320 165 406 player_swap 2 0 0 0 xdim ydim HALFSIZE
		}
	}

	ifl player_use 26
	ife door_locked 26
	{
	ifg player_use 16 set DISP_TEMP 33 else
	ifg player_use 10 set DISP_TEMP 1 else
	set DISP_TEMP 0
	getkeyname 406 6 2
	ifl player_use 22
		{
		ifl player_use 0 rotatespritea 160 160 QUARTERSIZE 0 2095 player_use 0 DISP_TEMP -255 0 0 xdim ydim
		else rotatespritea 160 160 QUARTERSIZE 0 2096 player_use 0 DISP_TEMP -255 0 0 xdim ydim
		gametextz STARTALPHANUM 320 165 406 player_use 2 0 0 0 xdim ydim HALFSIZE
		}
	}

	ifl player_unlock 26
	{
	ifg player_unlock 16 set DISP_TEMP 33 else
	ifg player_unlock 10 set DISP_TEMP 1 else
	set DISP_TEMP 0
	getkeyname 406 6 2
	ifl player_unlock 22
		{
		rotatespritea 160 160 15000 0 3638 player_unlock 2 DISP_TEMP -255 0 0 xdim ydim
		gametextz STARTALPHANUM 320 165 406 player_unlock 2 0 0 0 xdim ydim HALFSIZE
		}
	}

	ifl player_door 26
	ife door_locked 26
	{
	ifg player_door 16 set DISP_TEMP 33 else
	ifg player_door 10 set DISP_TEMP 1 else
	set DISP_TEMP 0
	getkeyname 406 6 2
	ifl player_door 22
		{
		ifl player_door 0 rotatespritea 160 160 20000 0 2101 player_door 0 DISP_TEMP -255 0 0 xdim ydim
		else rotatespritea 160 160 20000 0 2100 player_door 0 DISP_TEMP -255 0 0 xdim ydim
		gametextz STARTALPHANUM 320 165 406 player_door 2 0 0 0 xdim ydim HALFSIZE
		}
	}

	ifl player_ship 26
	{
	ifg player_ship 16 set DISP_TEMP 33 else
	ifg player_ship 10 set DISP_TEMP 1 else
	set DISP_TEMP 0
	getkeyname 406 6 2
	ifl player_ship 22
		{
		rotatespritea 160 160 15000 0 3796 player_ship 2 DISP_TEMP -255 0 0 xdim ydim
		gametextz STARTALPHANUM 320 165 406 player_ship 2 0 0 0 xdim ydim HALFSIZE
		}
	}

	ifl player_bipod 26
	{
	ifg player_bipod 16 set DISP_TEMP 33 else
	ifg player_bipod 10 set DISP_TEMP 1 else
	set DISP_TEMP 0
	ifl player_bipod 22
		{
		rotatespritea 160 160 20000 0 6097 player_bipod 0 DISP_TEMP -255 0 0 xdim ydim
		gametextz STARTALPHANUM 320 165 277 player_bipod 2 0 0 0 xdim ydim HALFSIZE
		}
	}

	ifl door_locked 26
	{
	ifg door_locked 16 set DISP_TEMP 33 else
	ifg door_locked 10 set DISP_TEMP 1 else
	set DISP_TEMP 0
	set DISP_TEMP2 1300
	mulvarvar DISP_TEMP2 door_locked
	ifl door_locked 22
		{
		rotatespritea 160 160 DISP_TEMP2 0 3794 door_locked 0 DISP_TEMP -255 0 0 xdim ydim
		ife key_icon 17916 rotatesprite 160 160 14000 0 17916 0 key_pal 1 0 0 xdim ydim
		else rotatesprite 160 160 24000 0 key_icon 0 key_pal 0 0 0 xdim ydim
		}
	}

	ifl player_ninja 26
	{
	ifg player_ninja 16 set DISP_TEMP 33 else
	ifg player_ninja 10 set DISP_TEMP 1 else
	set DISP_TEMP 0
	getkeyname 406 10 2
	ifl player_ninja 22
		{
		rotatespritea 160 160 8096 0 17401 player_ninja 0 DISP_TEMP -255 0 0 xdim ydim
		gametextz STARTALPHANUM 320 165 406 player_ninja 2 0 0 0 xdim ydim HALFSIZE
		}
	}

	ifl player_fire 26
	{
	ifg player_fire 16 set DISP_TEMP 33 else
	ifg player_fire 10 set DISP_TEMP 1 else
	set DISP_TEMP 0

	ifl player_fire 22
		{
		rotatespritea 160 160 QUARTERSIZE 0 2099 player_fire 0 DISP_TEMP -255 0 0 xdim ydim
		gametextz STARTALPHANUM 320 165 234 player_fire 2 0 0 0 xdim ydim HALFSIZE
		}
	}

	ife camerasprite -1
	{
	ifg COMM_COUNTD 130
		{
		set DISP_TEMP2 1000
		mul DISP_TEMP2 DISP_PULSE
		add DISP_TEMP2 12000
		getkeyname 406 42 2
			rotatespritea 160 160 DISP_TEMP2 0 2097 DISP_PULSE 0 0 -255 0 0 xdim ydim
			gametextz STARTALPHANUM 320 165 406 0 2 0 0 0 xdim ydim HALFSIZE
		}
	ifl COMM_COUNTD -130
		{
		set DISP_TEMP2 1000
		mul DISP_TEMP2 DISP_PULSE
		add DISP_TEMP2 12000
		getkeyname 406 42 2
			rotatespritea 160 160 DISP_TEMP2 0 2102 DISP_PULSE 0 0 -255 0 0 xdim ydim
			gametextz STARTALPHANUM 320 165 406 0 2 0 0 0 xdim ydim HALFSIZE
		}

	ifg mission_update 0
		{
		set DISP_TEMP2 1000
		mul DISP_TEMP2 DISP_PULSE
		add DISP_TEMP2 HALFSIZE
			getkeyname 406 42 2
			rotatespritea 160 160 DISP_TEMP2 0 7833 DISP_PULSE 0 0 -255 0 0 xdim ydim
			gametextz STARTALPHANUM 320 165 406 0 2 0 0 0 xdim ydim HALFSIZE
		}
	}
}

ifg hit_key 0
	{
	sub hit_key 1
	set DISP_TEMP2 200
	mul DISP_TEMP2 hit_key
	rotatespritea 160 160 DISP_TEMP2 0 3605 0 2 0 -255 0 0 xdim ydim
	}

ifg SLO_MO_SHOWOFF 2
{
	set HUDON 1
	ife FISSION_MAILED 1
		{
		rotatesprite 160 100 NNORMALSIZE 0 3542 0 0 1024 0 0 xdim ydim
		myospal 160 100 3031 0 0 0
		}
	else
		rotatesprite 160 100 NNORMALSIZE 0 3542 0 0 1024 0 0 xdim ydim
}
else
ifg SLO_MO_SHOWOFF 0 set HUDON 0


// **********************************************************************************
// ITEM BOX CONTAINER
// **********************************************************************************

ifn CHECKBOX -1
{
rotatesprite 160 100 49152 0 3308 0 0 0 0 0 xdim ydim
geta[CHECKBOX].picnum DISP_TEMP
rotatesprite 105 100 49152 0 DISP_TEMP 0 0 0 0 0 xdim ydim

ifn CHECKBOX -1
	{
	getactorvar[CHECKBOX].CBOXSLOT1 CBOXSLOT1
	getactorvar[CHECKBOX].CBOXSLOT1PAL CBOXSLOT1PAL
	getactorvar[CHECKBOX].CBOXSLOT2 CBOXSLOT2
	getactorvar[CHECKBOX].CBOXSLOT3 CBOXSLOT3
	getactorvar[CHECKBOX].CBOXSLOT4 CBOXSLOT4
	getactorvar[CHECKBOX].CBOXSLOT5 CBOXSLOT5
	getactorvar[CHECKBOX].CBOXSLOT6 CBOXSLOT6
	set DISP_TEMP CBOXSLOT1
	}

set DISP_TEMP CBOXSLOT1
state ITEM_BOX_DISP_STUFF
ifn CBOXSLOT1 -1 rotatesprite 175 62 HALFSIZE 0 DISP_TEMP 0 CBOXSLOT1PAL 0 0 0 xdim ydim

set DISP_TEMP CBOXSLOT2
state ITEM_BOX_DISP_STUFF
ifn CBOXSLOT2 -1 rotatesprite 210 62 HALFSIZE 0 DISP_TEMP 0 0 0 0 0 xdim ydim

set DISP_TEMP CBOXSLOT3
state ITEM_BOX_DISP_STUFF
ifn CBOXSLOT3 -1 rotatesprite 175 99 HALFSIZE 0 DISP_TEMP 0 0 0 0 0 xdim ydim

set DISP_TEMP CBOXSLOT4
state ITEM_BOX_DISP_STUFF
ifn CBOXSLOT4 -1 rotatesprite 210 99 HALFSIZE 0 DISP_TEMP 0 0 0 0 0 xdim ydim

set DISP_TEMP CBOXSLOT5
state ITEM_BOX_DISP_STUFF
ifn CBOXSLOT5 -1 rotatesprite 175 134 HALFSIZE 0 DISP_TEMP 0 0 0 0 0 xdim ydim

set DISP_TEMP CBOXSLOT6
state ITEM_BOX_DISP_STUFF
ifn CBOXSLOT6 -1 rotatesprite 210 134 HALFSIZE 0 DISP_TEMP 0 0 0 0 0 xdim ydim
}

ifn ALARM_DETECT 0
	{
	rotatespritea 160 20 HALFSIZE 0 3607 0 10 0 -255 0 0 xdim ydim
	ifg ALARM_ACTIVE 0 rotatesprite 160 20 HALFSIZE 1024 551 0 0 0 0 0 xdim ydim
	else rotatesprite 160 20 HALFSIZE 1024 553 0 0 0 0 0 xdim ydim

	ifg ALARM_COUNTER 0
	ife ALARM_ACTIVE 0
		{
		set digx 110

		set DISP_TEMP3 digx
		add DISP_TEMP3 ALARM_COUNTER
		set DISP_TEMP 0
		whilevarn DISP_TEMP 1
			{
				  ifg digx DISP_TEMP3 set DISP_TEMP 1
				  ifg ALARM_COUNTER 60 set DISP_TEMP4 10 else
				  ifg ALARM_COUNTER 20 set DISP_TEMP4 21 else
				  set DISP_TEMP4 11
				  rotatespritea digx 25 QUARTERSIZE 0 4732 0 DISP_TEMP4 0 -255 0 0 xdim ydim
				  add digx 1
				  break
			}
		rotatesprite 210 25 8192 0 121 0 4 1 0 0 xdim ydim
		}

	}

ifg camera_bars -18
{
rotatesprite 160 camera_bars NORMALSIZE 0 3182 0 0 1024 0 0 xdim ydim
set DISP_TEMP 200
sub DISP_TEMP camera_bars
rotatesprite 160 DISP_TEMP NORMALSIZE 0 3182 0 0 1024 0 0 xdim ydim
}

ife cuts_txt -1 // cutscene dialogue takes presidence over this
{
ifg gp_subt 0
	{
	ifn subt_id 0 gametextz STARTALPHANUM 320 145 subt_id 0 0 0 0 0 xdim ydim HALFSIZE
	else gametextz STARTALPHANUM 320 145 7500 0 0 0 0 0 xdim ydim HALFSIZE
	}
ifg ally_subt 0
	{
	gametextz STARTALPHANUM 320 150 7501 0 0 0 0 0 xdim ydim HALFSIZE
	}
}

ifn cuts_txt -1 // Is there supposed to be text on the screen?
 ife SHOW_SUBTITLES YES
	{
	ifg cs_textl 0 gametextz STARTALPHANUM 320 175 350 0 0 0 0 0 xdim ydim HALFSIZE
	ifg cs_textl 1 gametextz STARTALPHANUM 320 180 351 0 0 0 0 0 xdim ydim HALFSIZE
	ifg cs_textl 2 gametextz STARTALPHANUM 320 185 352 0 0 0 0 0 xdim ydim HALFSIZE
	ifg cs_textl 3 gametextz STARTALPHANUM 320 190 353 0 0 0 0 0 xdim ydim HALFSIZE
	ifg cs_textl 4 gametextz STARTALPHANUM 320 195 354 0 0 0 0 0 xdim ydim HALFSIZE
	ifg cs_textl 5 gametextz STARTALPHANUM 320 200 355 0 0 0 0 0 xdim ydim HALFSIZE
	}

ifg FORTUNE_TIMER 0
	{
	gametextz STARTALPHANUM 320 165 FORTUNE_QUOTE 0 12 0 0 0 xdim ydim HALFSIZE
	set DISP_TEMP4 FORTUNE_QUOTE
	add DISP_TEMP4 100
	gametextz STARTALPHANUM 320 170 DISP_TEMP4 0 6 0 0 0 xdim ydim HALFSIZE
	}

ifg cameraend 0
{
rotatesprite 160 100 NORMALSIZE 0 3584 20 4 1024 0 0 xdim ydim // BG
}

ife CHARSELECT 1
ife cameraend 0
ifn TIMEZONE 9
ife camerasprite -1
{
rotatesprite 160 100 40960 0 3758 0 0 1024 0 0 xdim ydim // BG
ifn LOCATION 0
	{
	ife LOCATION 8448 rotatesprite 55 157 18210 0 13693 0 0 256 0 0 xdim ydim
	else ife LOCATION 8449 rotatesprite 55 157 18210 0 13698 0 0 256 0 0 xdim ydim
	else ife LOCATION 8450 rotatesprite 55 157 18210 0 13695 0 0 256 0 0 xdim ydim
	else ife LOCATION 8467 rotatesprite 55 157 18210 0 13696 0 0 256 0 0 xdim ydim
	else ife LOCATION 8459 rotatesprite 55 157 18210 0 13694 0 0 256 0 0 xdim ydim
	else rotatesprite 55 157 NORMALSIZE 0 LOCATION 0 0 256 0 0 xdim ydim
	}



rotatesprite 45 100 18384 0 3732 0 0 41 0 0 xdim ydim
rotatesprite 45 100 18384 0 3731 0 0 8 0 0 xdim ydim

rotatesprite 120 100 18384 0 3755 0 0 41 0 0 xdim ydim
rotatesprite 120 100 18384 0 3733 0 0 8 0 0 xdim ydim

rotatesprite 240 150 18384 0 3757 0 0 41 0 0 xdim ydim
rotatesprite 240 150 18384 0 3756 0 0 8 0 0 xdim ydim

readgamevar AMC_BUDGET
qsprintf 1041 1042 AMC_BUDGET
gametextz 2822 128 190 1041 0 1 256 0 0 xdim ydim NORMALSIZE


readarrayfromfile EQUIPMENT_LOADOUT 4012 // display what the player has in the equipment slot
readarrayfromfile CHEST_LOADOUT 4054
readarrayfromfile BELT_LOADOUT 4055
readarrayfromfile HELMET_LOADOUT 4056
readarrayfromfile BOOTS_LOADOUT 4070
	ifl CHAR 15 // Give the player his equipped temporary weapon
	ifn CHAR 12
	ifn CHAR 11
	ifn CHAR 10
	ifn CHAR 9
	ifn CHAR 8
	ifn CHAR -1
		{
		set INFO_SEL CHAR
		ifn INFO_SEL -1
			{
			set DISP_TEMP7 104 // x
			set DISP_TEMP8 70 // y

			state DISP_equipment_loadout
			set DISP_TEMP8 100 // y
			state DISP_chest_loadout
			set DISP_TEMP8 128 // y
			state DISP_belt_loadout
			set DISP_TEMP8 157 // y
			state DISP_helmet_loadout
			set DISP_TEMP7 136 // x
			set DISP_TEMP8 70 // y
			state DISP_boot_loadout
			}
		}

readarrayfromfile TEMP_WEAPON_LOADOUT 4008 // display what the player has in the DISP_TEMP weapon slot
	ifl CHAR 15 // Give the player his equipped temporary weapon
	ifn CHAR 12
	ifn CHAR 11
	ifn CHAR 10
	ifn CHAR 9
	ifn CHAR 8
	ifn CHAR -1
		{
		set DISP_TEMP7 120 // x
		set DISP_TEMP8 40 // y
		set INFO_SEL CHAR
		state DISP_temp_weapon_loadout
		}

readarrayfromfile MELEE_WEAPON_LOADOUT 4010 // display what the player has in the melee slot
	ifl CHAR 15 // Give the player his equipped temporary weapon
	ifn CHAR 12
	ifn CHAR 11
	ifn CHAR 10
	ifn CHAR 9
	ifn CHAR 8
	ifn CHAR -1
		{
		set DISP_TEMP7 136 // x
		set DISP_TEMP8 100 // y
		set INFO_SEL CHAR
		state DISP_melee_loadout
		}

readarrayfromfile AMMO_LOADOUT 4015 // display what the player has in the special ammo slot
	ifl CHAR 15 // Give the player his equipped temporary weapon
	ifn CHAR 12
	ifn CHAR 11
	ifn CHAR 10
	ifn CHAR 9
	ifn CHAR 8
	ifn CHAR -1
		{
		set DISP_TEMP7 136 // x
		set DISP_TEMP8 128 // y
		set INFO_SEL CHAR
		state DISP_ammo_loadout
		}

readarrayfromfile ARTIFACTS_LOADOUT 4014 // display what the player has in the artifact slot
	ifl CHAR 15 // Give the player his equipped temporary weapon
	ifn CHAR 12
	ifn CHAR 11
	ifn CHAR 10
	ifn CHAR 9
	ifn CHAR 8
	ifn CHAR -1
		{
		set DISP_TEMP7 136 // x
		set DISP_TEMP8 157 // y
		set INFO_SEL CHAR
		state DISP_artifact_loadout
		}

	ifl CHAR 15 // Give the player his equipped temporary weapon
	ifn CHAR 12
	ifn CHAR 11
	ifn CHAR 10
	ifn CHAR 9
	ifn CHAR 8
	ifn CHAR -1
		{
		readarrayfromfile EQUIPMENT_LOADOUT_COST 4040
		readarrayfromfile MELEE_LOADOUT_COST 4041
		readarrayfromfile TEMP_WEAPON_LOADOUT_COST 4042
		readarrayfromfile AMMO_LOADOUT_COST 4043
		readarrayfromfile SPECIALIST_LOADOUT_COST 4044
		readarrayfromfile CHEST_LOADOUT_COST 4057
		readarrayfromfile BELT_LOADOUT_COST 4058
		readarrayfromfile HELMET_LOADOUT_COST 4059
		readarrayfromfile BOOT_LOADOUT_COST 4071

		set DISP_LOADOUT_COST 0
		add DISP_LOADOUT_COST EQUIPMENT_LOADOUT_COST[CHAR]
		add DISP_LOADOUT_COST MELEE_LOADOUT_COST[CHAR]
		add DISP_LOADOUT_COST TEMP_WEAPON_LOADOUT_COST[CHAR]
		add DISP_LOADOUT_COST AMMO_LOADOUT_COST[CHAR]
		add DISP_LOADOUT_COST CHEST_LOADOUT_COST[CHAR]
		add DISP_LOADOUT_COST BELT_LOADOUT_COST[CHAR]
		add DISP_LOADOUT_COST HELMET_LOADOUT_COST[CHAR]
		add DISP_LOADOUT_COST BOOT_LOADOUT_COST[CHAR]


        // display 2 digits after the comma
        set DISP_TEMP9 DISP_LOADOUT_COST
        divvar DISP_TEMP9 10
        modvar DISP_TEMP9 10

        set DISP_TEMP8 DISP_LOADOUT_COST
        divvar DISP_TEMP8 100
        modvar DISP_TEMP8 10

        divvar DISP_LOADOUT_COST 1000
		qsprintf 1066 1067 DISP_LOADOUT_COST DISP_TEMP8 DISP_TEMP9
		gametextz 2822 176 180 1066 0 124 0 0 0 xdim ydim HALFSIZE
		}

rotatesprite 220 15 16384 0 13569 0 0 8 0 0 xdim ydim
rotatesprite 120 25 16384 0 13570 0 0 8 0 0 xdim ydim

ife show_next_char 0
{

set DISP_TEMP6 HALFSIZE
add DISP_TEMP6 2048
set DISP_TEMP7 HALFSIZE
add DISP_TEMP7 10000

// show health ring bonus
ifn CHAR -1
    ife ARTIFACTS_LOADOUT[CHAR] 11
    {
        qputs 810 ^54+ 20
        gametextz 2822 485 128 810 0 0 0 0 0 xdim ydim DISP_TEMP7
    }

ife CHAR 0 // JAMES
	{
	gametext 2822 20 20 125 0 0 0 0 0 xdim ydim
	rotatesprite 170 40 26768 0 3589 CHARSHADE 0 8 0 0 xdim ydim // ICON
	rotatesprite 170 40 6192 0 3588 0 0 8 0 0 xdim ydim // FRAME
	rotatesprite 89 18 HALFSIZE 0 23295 0 0 8 0 0 xdim ydim // flag
	ifand CHAR_APP 1 set DISP_TEMP5 25635 else
	set DISP_TEMP5 9017
	rotatesprite 44 100 65000 0 DISP_TEMP5 CHARSHADE 0 8 0 0 xdim ydim // CHARACTER

    ifand CHAR_APP 1 qputs 815 Bionic Former EDF Agent
    else qputs 815 Former EDF Agent
    gametextz 2822 370 118 815 0 24 0 0 0 xdim ydim DISP_TEMP7
	qputs 810 HP: 100
	gametextz 2822 370 128 810 0 0 0 0 0 xdim ydim DISP_TEMP7
    qputs 811 Armor Type: Medium
	gametextz 2822 370 136 811 0 0 0 0 0 xdim ydim DISP_TEMP7
	ifg AGENT_FATIGUE[CHAR] 5000 ifg SKILL_LEVEL 2 qputs 812 Stamina:^54 90% 
    else qputs 812 Stamina: 120%
	gametextz 2822 370 144 812 0 0 0 0 0 xdim ydim DISP_TEMP7
    qputs 813 + Can use Time Portals
	gametextz 2822 370 154 813 0 125 0 0 0 xdim ydim DISP_TEMP6
	ifand CHAR_APP 1 {
        qputs 814 + Bionic Arm
	    gametextz 2822 370 162 814 0 125 0 0 0 xdim ydim DISP_TEMP6
        qputs 814 - Weak to psychic attacks
	    gametextz 2822 370 170 814 0 124 0 0 0 xdim ydim DISP_TEMP6
    } else {
        qputs 814 - Weak to psychic attacks
	    gametextz 2822 370 162 814 0 124 0 0 0 xdim ydim DISP_TEMP6
    }
	}
	else
	{
	rotatesprite 170 40 26768 0 3589 20 27 0 0 0 xdim ydim // ICON
	rotatesprite 170 40 6192 0 3594 0 0 0 0 0 xdim ydim // FRAME
	ife DEBUG_STUFF 1 digitalnumberz DIGITALNUM 100 110 AGENT_FATIGUE[0] 0 0 0 0 0 xdim ydim QUARTERSIZE
	}
	ifg AGENT_FATIGUE[0] 5000 // tired?
	 ifg SKILL_LEVEL 2
		{
		rotatesprite 177 50 HALFSIZE 0 21242 0 0 0 0 0 xdim ydim
		ifg AGENT_FATIGUE[0] 10000
			{
			ife CHAR 0 gametextz 2822 370 180 6901 0 124 0 0 0 xdim ydim DISP_TEMP7
			rotatesprite 170 40 6192 0 3588 0 68 0 0 0 xdim ydim // FRAME
			rotatesprite 177 50 HALFSIZE 0 21243 0 0 0 0 0 xdim ydim
			}
			else
			{
			ife CHAR 0 gametextz 2822 370 180 6900 0 32 0 0 0 xdim ydim DISP_TEMP7
			rotatesprite 170 40 6192 0 3588 0 57 0 0 0 xdim ydim // FRAME
			}
		}

ife CHAR 1 // ZAXTOR
	{
	gametext 2822 20 20 126 0 0 0 0 0 xdim ydim
	rotatesprite 205 40 26768 0 3590 CHARSHADE 0 0 0 0 xdim ydim // ICON
	rotatesprite 205 40 6192 0 3588 0 0 0 0 0 xdim ydim // FRAME
	rotatesprite 89 18 HALFSIZE 0 23294 0 0 0 0 0 xdim ydim // flag
	set DISP_TEMP5 5501
	rotatesprite 44 100 62000 0 DISP_TEMP5 CHARSHADE 0 0 0 0 xdim ydim // CHARACTER

    qputs 815 One Man Army
    gametextz 2822 370 118 815 0 24 0 0 0 xdim ydim DISP_TEMP7
	qputs 810 HP: 255
	gametextz 2822 370 128 810 0 0 0 0 0 xdim ydim DISP_TEMP7
    qputs 811 Armor Type: Weak
	gametextz 2822 370 136 811 0 0 0 0 0 xdim ydim DISP_TEMP7
	
    ifg AGENT_FATIGUE[CHAR] 5000 ifg SKILL_LEVEL 2 qputs 812 Stamina:^54 70%
    else qputs 812 Stamina: 100%
	gametextz 2822 370 144 812 0 0 0 0 0 xdim ydim DISP_TEMP7
	qputs 813 + Resistant to psychic attacks
	gametextz 2822 370 154 813 0 125 0 0 0 xdim ydim DISP_TEMP6
	qputs 814 - Weak to fire
	gametextz 2822 370 162 814 0 124 0 0 0 xdim ydim DISP_TEMP6

	}
	else
	{
	rotatesprite 205 40 26768 0 3590 20 27 0 0 0 xdim ydim // ICON
	rotatesprite 205 40 6192 0 3594 0 0 0 0 0 xdim ydim // FRAME
	ife DEBUG_STUFF 1 digitalnumberz DIGITALNUM 140 110 AGENT_FATIGUE[1] 0 0 0 0 0 xdim ydim QUARTERSIZE
	}
	ifg AGENT_FATIGUE[1] 5000 // tired?
	 ifg SKILL_LEVEL 2
		{
		rotatesprite 212 50 HALFSIZE 0 21242 0 0 0 0 0 xdim ydim
		ifg AGENT_FATIGUE[1] 10000
			{
			ife CHAR 1 gametextz 2822 370 180 6901 0 124 0 0 0 xdim ydim DISP_TEMP7
			rotatesprite 205 40 6192 0 3588 0 68 0 0 0 xdim ydim // FRAME
			rotatesprite 212 50 HALFSIZE 0 21243 0 0 0 0 0 xdim ydim
			}
			else
			{
			ife CHAR 1 gametextz 2822 370 180 6900 0 32 0 0 0 xdim ydim DISP_TEMP7
			rotatesprite 205 40 6192 0 3588 0 57 0 0 0 xdim ydim // FRAME
			}
		}

ife CHAR 2 // MERLIJN
	{
	gametext 2822 20 20 127 0 0 0 0 0 xdim ydim
	rotatesprite 240 40 26768 0 3591 CHARSHADE 0 0 0 0 xdim ydim // ICON
	rotatesprite 240 40 6192 0 3588 0 0 0 0 0 xdim ydim // FRAME
	rotatesprite 89 18 HALFSIZE 0 23293 0 0 0 0 0 xdim ydim // flag
	set DISP_TEMP5 6425
	rotatesprite 46 100 58000 0 DISP_TEMP5 CHARSHADE 21 0 0 0 xdim ydim // CHARACTER

    qputs 815 Medieval Knight
    gametextz 2822 370 118 815 0 24 0 0 0 xdim ydim DISP_TEMP7
    qputs 810 HP: 200
	gametextz 2822 370 128 810 0 0 0 0 0 xdim ydim DISP_TEMP7
    qputs 811 Armor Type: Medium
	gametextz 2822 370 136 811 0 0 0 0 0 xdim ydim DISP_TEMP7
    ifg AGENT_FATIGUE[CHAR] 5000 ifg SKILL_LEVEL 2 qputs 812 Stamina:^54 100%
    else
        {   // improved robes
        ife PERSONEL_RESEARCH[21] 2 qputs 812 Stamina: 150% ^8+ 20%
        else qputs 812 Stamina: 150%
        }
	gametextz 2822 370 144 812 0 0 0 0 0 xdim ydim DISP_TEMP7
	qputs 813 + Knight Shield
	gametextz 2822 370 154 813 0 125 0 0 0 xdim ydim DISP_TEMP6
	}
	else
	{
	rotatesprite 240 40 26768 0 3591 20 27 0 0 0 xdim ydim // ICON
	rotatesprite 240 40 6192 0 3594 0 0 0 0 0 xdim ydim // FRAME
	ife DEBUG_STUFF 1 digitalnumberz DIGITALNUM 180 110 AGENT_FATIGUE[2] 0 0 0 0 0 xdim ydim QUARTERSIZE
	}
	ifg AGENT_FATIGUE[2] 5000 // tired?
	  ifg SKILL_LEVEL 2
		{
		rotatesprite 247 50 HALFSIZE 0 21242 0 0 0 0 0 xdim ydim
		ifg AGENT_FATIGUE[2] 10000
			{
			ife CHAR 2 gametextz 2822 370 180 6901 0 124 0 0 0 xdim ydim DISP_TEMP7
			rotatesprite 240 40 6192 0 3588 0 68 0 0 0 xdim ydim // FRAME
			rotatesprite 247 50 HALFSIZE 0 21243 0 0 0 0 0 xdim ydim
			}
			else
			{
			ife CHAR 2 gametextz 2822 370 180 6900 0 32 0 0 0 xdim ydim DISP_TEMP7
			rotatesprite 240 40 6192 0 3588 0 57 0 0 0 xdim ydim // FRAME
			}
		}

ife CHAR 3 // HIGHWIRE
	{
	gametext 2822 20 20 128 0 0 0 0 0 xdim ydim
	rotatesprite 275 40 26768 0 3593 CHARSHADE 0 0 0 0 xdim ydim // ICON
	rotatesprite 275 40 6192 0 3588 0 0 0 0 0 xdim ydim // FRAME
	rotatesprite 89 18 HALFSIZE 0 23292 0 0 0 0 0 xdim ydim // flag
	set DISP_TEMP5 6073
	rotatesprite 46 100 60000 0 DISP_TEMP5 CHARSHADE 0 0 0 0 xdim ydim // CHARACTER

    qputs 815 Russian Commander
    gametextz 2822 370 118 815 0 24 0 0 0 xdim ydim DISP_TEMP7
	qputs 810 HP: 100
	gametextz 2822 370 128 810 0 0 0 0 0 xdim ydim DISP_TEMP7
    qputs 811 Armor Type: Strong
	gametextz 2822 370 136 811 0 0 0 0 0 xdim ydim DISP_TEMP7
    ifg AGENT_FATIGUE[CHAR] 5000 ifg SKILL_LEVEL 2 qputs 812 Stamina:^54 70%
    else qputs 812 Stamina: 100%
	gametextz 2822 370 144 812 0 0 0 0 0 xdim ydim DISP_TEMP7
    qputs 813 + Can command more allies
	gametextz 2822 370 154 813 0 125 0 0 0 xdim ydim DISP_TEMP6
    qputs 814 + Resistant to Alcohol
	gametextz 2822 370 162 814 0 125 0 0 0 xdim ydim DISP_TEMP6
	}
	else
	{
	rotatesprite 275 40 26768 0 3593 20 27 0 0 0 xdim ydim // ICON
	rotatesprite 275 40 6192 0 3594 0 0 0 0 0 xdim ydim // FRAME
	ife DEBUG_STUFF 1 digitalnumberz DIGITALNUM 220 110 AGENT_FATIGUE[3] 0 0 0 0 0 xdim ydim QUARTERSIZE
	}
	ifg AGENT_FATIGUE[3] 5000 // tired?
	 ifg SKILL_LEVEL 2
		{
		rotatesprite 282 50 HALFSIZE 0 21242 0 0 0 0 0 xdim ydim
		ifg AGENT_FATIGUE[3] 10000
			{
			ife CHAR 3 gametextz 2822 370 180 6901 0 124 0 0 0 xdim ydim DISP_TEMP7
			rotatesprite 275 40 6192 0 3588 0 68 0 0 0 xdim ydim // FRAME
			rotatesprite 282 50 HALFSIZE 0 21243 0 0 0 0 0 xdim ydim
			}
			else
			{
			ife CHAR 3 gametextz 2822 370 180 6900 0 32 0 0 0 xdim ydim DISP_TEMP7
			rotatesprite 275 40 6192 0 3588 0 57 0 0 0 xdim ydim // FRAME
			}
		}

ife CHAR 4 // SANG
	{
	gametext 2822 20 20 129 0 0 0 0 0 xdim ydim
	rotatesprite 89 18 HALFSIZE 0 23291 0 0 0 0 0 xdim ydim // flag
	ifand CHAR_APP 2
		{
		rotatesprite 170 85 26768 0 23835 CHARSHADE 0 0 0 0 xdim ydim // ICON
		rotatesprite 44 100 63000 0 24011 CHARSHADE 21 0 0 0 xdim ydim // CHARACTER
		}
	else
		{
		rotatesprite 170 85 26768 0 3598 CHARSHADE 0 0 0 0 xdim ydim // ICON
		rotatesprite 44 100 68000 0 13207 CHARSHADE 21 0 0 0 xdim ydim // CHARACTER
		}
	rotatesprite 170 85 6192 0 3588 0 0 0 0 0 xdim ydim // FRAME

  
	ifand CHAR_APP 2
		{
        qputs 815 Rehabilitated Warlock
        qputs 810 HP: 100
        ifg AGENT_FATIGUE[CHAR] 5000 ifg SKILL_LEVEL 2 qputs 811 Stamina:^54 70%
	    else ife PERSONEL_RESEARCH[21] 2 qputs 811 Stamina: 120% ^8+ 20%
        else qputs 811 Stamina: 120%
        qputs 812 Armor Type: Strong
		}
    else 
		{
        qputs 815 Perturbed Warlock
        ife PERSONEL_RESEARCH[10] 2 qputs 810 HP: 75 ^8+ 25
        else qputs 810 HP: 75
	    ifg AGENT_FATIGUE[CHAR] 5000 ifg SKILL_LEVEL 2 qputs 811 Stamina:^54 70%
	    else ife PERSONEL_RESEARCH[21] 2 qputs 811 Stamina: 100% ^8+ 20%
        else qputs 811 Stamina: 100%
        qputs 812 Armor Type: Medium
		}
    gametextz 2822 370 118 815 0 24 0 0 0 xdim ydim DISP_TEMP7
	gametextz 2822 370 128 810 0 0 0 0 0 xdim ydim DISP_TEMP7
	gametextz 2822 370 144 811 0 0 0 0 0 xdim ydim DISP_TEMP7
    gametextz 2822 370 136 812 0 0 0 0 0 xdim ydim DISP_TEMP7
    qputs 813 + Can destroy Blood Sigils
	gametextz 2822 370 154 813 0 125 0 0 0 xdim ydim DISP_TEMP6
    qputs 814 + Resistant to psychic attacks
	gametextz 2822 370 162 814 0 125 0 0 0 xdim ydim DISP_TEMP6
	}
	else
	{
	ifand CHAR_APP 2 rotatesprite 170 85 26768 0 23835 20 27 0 0 0 xdim ydim // ICON
	else rotatesprite 170 85 26768 0 3598 20 27 0 0 0 xdim ydim // ICON
	rotatesprite 170 85 6192 0 3594 0 0 0 0 0 xdim ydim // FRAME
	ife DEBUG_STUFF 1 digitalnumberz DIGITALNUM 100 150 AGENT_FATIGUE[4] 0 0 0 0 0 xdim ydim QUARTERSIZE
	}
	ifg AGENT_FATIGUE[4] 5000 // tired?
	 ifg SKILL_LEVEL 2
		{
		rotatesprite 177 95 HALFSIZE 0 21242 0 0 0 0 0 xdim ydim
		ifg AGENT_FATIGUE[4] 10000
			{
			ife CHAR 4 gametextz 2822 370 180 6901 0 124 0 0 0 xdim ydim DISP_TEMP7
			rotatesprite 170 85 6192 0 3588 0 68 0 0 0 xdim ydim // FRAME
			rotatesprite 177 95 HALFSIZE 0 21243 0 0 0 0 0 xdim ydim
			}
			else
			{
			ife CHAR 4 gametextz 2822 370 180 6900 0 32 0 0 0 xdim ydim DISP_TEMP7
			rotatesprite 170 85 6192 0 3588 0 57 0 0 0 xdim ydim // FRAME
			}
		}

ife CHAR 5 // RUSTY
	{
	gametext 2822 20 20 130 0 0 0 0 0 xdim ydim
	rotatesprite 89 18 HALFSIZE 0 23282 0 0 0 0 0 xdim ydim // flag
	rotatesprite 205 85 26768 0 3600 CHARSHADE 0 0 0 0 xdim ydim // ICON
	rotatesprite 205 85 6192 0 3588 0 0 0 0 0 xdim ydim // FRAME
	set DISP_TEMP5 6676
	rotatesprite 44 100 65000 0 DISP_TEMP5 CHARSHADE 0 0 0 0 xdim ydim // CHARACTER
        qputs 815 Western Gunslinger
        gametextz 2822 370 118 815 0 24 0 0 0 xdim ydim DISP_TEMP7
        ife PERSONEL_RESEARCH[6] 2 qputs 810 HP: 120 ^8+ 20
        else qputs 810 HP: 120
	    gametextz 2822 370 128 810 0 0 0 0 0 xdim ydim DISP_TEMP7
        qputs 811 Armor Type: Strong
        gametextz 2822 370 136 811 0 0 0 0 0 xdim ydim DISP_TEMP7
        ifg AGENT_FATIGUE[CHAR] 5000 ifg SKILL_LEVEL 2 qputs 812 Stamina:^54 70%
        else
        {  // improved shoes?
            ife PERSONEL_RESEARCH[25] 2 qputs 812 Stamina: 100% ^8+ 30%
            else qputs 812 Stamina: 100%
        }
	    gametextz 2822 370 144 812 0 0 0 0 0 xdim ydim DISP_TEMP7
		qputs 813 + Can talk to Spirits
	    gametextz 2822 370 154 813 0 125 0 0 0 xdim ydim DISP_TEMP6
	}
	else
	{
	rotatesprite 205 85 26768 0 3600 20 27 0 0 0 xdim ydim // ICON
	rotatesprite 205 85 6192 0 3594 0 0 0 0 0 xdim ydim // FRAME
	ife DEBUG_STUFF 1 digitalnumberz DIGITALNUM 140 150 AGENT_FATIGUE[5] 0 0 0 0 0 xdim ydim QUARTERSIZE
	}
	ifg AGENT_FATIGUE[5] 5000 // tired?
	 ifg SKILL_LEVEL 2
		{
		rotatesprite 212 95 HALFSIZE 0 21242 0 0 0 0 0 xdim ydim
		ifg AGENT_FATIGUE[5] 10000
			{
			ife CHAR 5 gametextz 2822 370 180 6901 0 124 0 0 0 xdim ydim DISP_TEMP7
			rotatesprite 205 85 6192 0 3588 0 68 0 0 0 xdim ydim // FRAME
			rotatesprite 212 95 HALFSIZE 0 21243 0 0 0 0 0 xdim ydim
			}
			else
			{
			ife CHAR 5 gametextz 2822 370 180 6900 0 32 0 0 0 xdim ydim DISP_TEMP7
			rotatesprite 205 85 6192 0 3588 0 57 0 0 0 xdim ydim // FRAME
			}
		}

ife CHAR 6 // GEOFFREY
	{
	gametext 2822 20 20 131 0 0 0 0 0 xdim ydim
	rotatesprite 240 85 26768 0 3603 CHARSHADE 0 0 0 0 xdim ydim // ICON
	rotatesprite 240 85 6192 0 3588 0 0 0 0 0 xdim ydim // FRAME
	rotatesprite 89 18 HALFSIZE 0 23293 0 0 0 0 0 xdim ydim // flag
	rotatesprite 48 100 56000 0 6456 CHARSHADE 0 0 0 0 xdim ydim // CHARACTER

        qputs 815 Martian Outlaw
        gametextz 2822 370 118 815 0 24 0 0 0 xdim ydim DISP_TEMP7
        ife PERSONEL_RESEARCH[6] 2 qputs 810 HP: 120 ^8+ 20
        else qputs 810 HP: 120
	    gametextz 2822 370 128 810 0 0 0 0 0 xdim ydim DISP_TEMP7
        qputs 811 Armor Type: Strong
	    gametextz 2822 370 136 811 0 0 0 0 0 xdim ydim DISP_TEMP7
        ifg AGENT_FATIGUE[CHAR] 5000 ifg SKILL_LEVEL 2 qputs 812 Stamina:^54 70%
        else qputs 812 Stamina: 100%
	    gametextz 2822 370 144 812 0 0 0 0 0 xdim ydim DISP_TEMP7
        qputs 813 + Can hack VR Terminals
	    gametextz 2822 370 154 813 0 125 0 0 0 xdim ydim DISP_TEMP6
	}
	else
	{
	rotatesprite 240 85 26768 0 3603 20 27 0 0 0 xdim ydim // ICON
	rotatesprite 240 85 6192 0 3594 0 0 0 0 0 xdim ydim // FRAME
	ife DEBUG_STUFF 1 digitalnumberz DIGITALNUM 180 150 AGENT_FATIGUE[6] 0 0 0 0 0 xdim ydim QUARTERSIZE
	}
	ifg AGENT_FATIGUE[6] 5000 // tired?
	 ifg SKILL_LEVEL 2
		{
		rotatesprite 247 95 HALFSIZE 0 21242 0 0 0 0 0 xdim ydim
		ifg AGENT_FATIGUE[6] 10000
			{
			ife CHAR 6 gametextz 2822 370 180 6901 0 124 0 0 0 xdim ydim DISP_TEMP7
			rotatesprite 240 85 6192 0 3588 0 68 0 0 0 xdim ydim // FRAME
			rotatesprite 247 95 HALFSIZE 0 21243 0 0 0 0 0 xdim ydim
			}
			else
			{
			ife CHAR 6 gametextz 2822 370 180 6900 0 32 0 0 0 xdim ydim DISP_TEMP7
			rotatesprite 240 85 6192 0 3588 0 57 0 0 0 xdim ydim // FRAME
			}
		}

ife CHAR 7 // MIKKO
	{
	gametext 2822 20 20 132 0 0 0 0 0 xdim ydim
	rotatesprite 275 85 26768 0 3606 CHARSHADE 0 0 0 0 xdim ydim // ICON
	rotatesprite 275 85 6192 0 3588 0 0 0 0 0 xdim ydim // FRAME
	rotatesprite 89 18 HALFSIZE 0 23290 0 0 0 0 0 xdim ydim // flag
	set DISP_TEMP5 20074
	rotatesprite 46 100 66000 0 DISP_TEMP5 CHARSHADE 11 0 0 0 xdim ydim // CHARACTER

    qputs 815 Corporate Cyborg
    gametextz 2822 370 118 815 0 24 0 0 0 xdim ydim DISP_TEMP7
    // Get Actual Health:
    ife PERSONEL_RESEARCH[6] 2
        {
        ife PERSONEL_RESEARCH[9] 2 qputs 810 HP: 150 ^8+ 50
        else qputs 810 HP:  150 ^8+ 20
        }
    else ife PERSONEL_RESEARCH[9] 2 qputs 810 HP: 150 ^8+ 30
    else qputs 810 HP: 150
    gametextz 2822 370 128 810 0 0 0 0 0 xdim ydim DISP_TEMP7
    qputs 811 Armor Type: Medium
    gametextz 2822 370 136 811 0 0 0 0 0 xdim ydim DISP_TEMP7
    ifg AGENT_FATIGUE[CHAR] 5000 ifg SKILL_LEVEL 2 qputs 812 Stamina:^54 100%
    else qputs 812 Stamina: 140%
    gametextz 2822 370 144 812 0 0 0 0 0 xdim ydim DISP_TEMP7
    qputs 813 + Can hack VR Terminals
	gametextz 2822 370 154 813 0 125 0 0 0 xdim ydim DISP_TEMP6
	qputs 814 + Resistant to psychic attacks
	gametextz 2822 370 162 814 0 125 0 0 0 xdim ydim DISP_TEMP6


	}
	else
	{
	rotatesprite 275 85 26768 0 3606 20 27 0 0 0 xdim ydim
	rotatesprite 275 85 6192 0 3594 0 0 0 0 0 xdim ydim // FRAME
	ife DEBUG_STUFF 1 digitalnumberz DIGITALNUM 220 150 AGENT_FATIGUE[7] 0 0 0 0 0 xdim ydim QUARTERSIZE
	}
	ifg AGENT_FATIGUE[7] 5000 // tired?
	 ifg SKILL_LEVEL 2
		{
		rotatesprite 282 95 HALFSIZE 0 21242 0 0 0 0 0 xdim ydim
		ifg AGENT_FATIGUE[7] 10000
			{
			ife CHAR 7 gametextz 2822 370 180 6901 0 124 0 0 0 xdim ydim DISP_TEMP7
			rotatesprite 275 85 6192 0 3588 0 68 0 0 0 xdim ydim // FRAME
			rotatesprite 282 95 HALFSIZE 0 21243 0 0 0 0 0 xdim ydim
			}
	    else
			{
			ife CHAR 7 gametextz 2822 370 180 6900 0 32 0 0 0 xdim ydim DISP_TEMP7
			rotatesprite 275 85 6192 0 3588 0 57 0 0 0 xdim ydim // FRAME
			}
		}

	ife EP2_NEW_CHARACTERS 1
	{
	ife CHAR 13 // MICKY
		{
		gametext 2822 20 20 166 0 0 0 0 0 xdim ydim
		rotatesprite 310 40 26768 0 16600 CHARSHADE 0 0 0 0 xdim ydim // ICON
		rotatesprite 310 40 6192 0 3588 0 0 0 0 0 xdim ydim // FRAME
		rotatesprite 89 18 HALFSIZE 0 23289 0 0 0 0 0 xdim ydim // flag
		set DISP_TEMP5 16585
		rotatesprite 47 100 62000 0 DISP_TEMP5 CHARSHADE 0 0 0 0 xdim ydim // CHARACTER

        qputs 815 Combat Engineer
        gametextz 2822 370 118 815 0 24 0 0 0 xdim ydim DISP_TEMP7
        qputs 810 HP: 100
	    gametextz 2822 370 128 810 0 0 0 0 0 xdim ydim DISP_TEMP7
        qputs 811 Armor Type: Energy
        gametextz 2822 370 136 811 0 0 0 0 0 xdim ydim DISP_TEMP7
        ifg AGENT_FATIGUE[CHAR] 5000 ifg SKILL_LEVEL 2 qputs 812 Stamina:^54 90%
        else qputs 812 Stamina: 120%
	    gametextz 2822 370 144 812 0 0 0 0 0 xdim ydim DISP_TEMP7
	    qputs 813 + Infinite Toolbox Uses
	    gametextz 2822 370 154 813 0 125 0 0 0 xdim ydim DISP_TEMP6

		}
		else
		{
		rotatesprite 310 40 26768 0 16600 20 27 0 0 0 xdim ydim // ICON
		rotatesprite 310 40 6192 0 3594 0 0 0 0 0 xdim ydim // FRAME
		ife DEBUG_STUFF 1 digitalnumberz DIGITALNUM 260 150 AGENT_FATIGUE[13] 0 0 0 0 0 xdim ydim QUARTERSIZE
		}
		ifg AGENT_FATIGUE[13] 5000 // tired?
		 ifg SKILL_LEVEL 2
			{
			rotatesprite 317 50 HALFSIZE 0 21242 0 0 0 0 0 xdim ydim
			ifg AGENT_FATIGUE[13] 10000
				{
				ife CHAR 13 gametextz 2822 370 180 6901 0 124 0 0 0 xdim ydim DISP_TEMP7
				rotatesprite 310 40 6192 0 3588 0 68 0 0 0 xdim ydim // FRAME
				rotatesprite 317 50 HALFSIZE 0 21243 0 0 0 0 0 xdim ydim
				}
				else
				{
				ife CHAR 13 gametextz 2822 370 180 6900 0 32 0 0 0 xdim ydim DISP_TEMP7
				rotatesprite 310 40 6192 0 3588 0 57 0 0 0 xdim ydim // FRAME
				}
			}
	}


	ife EP3_NEW_CHARACTERS 1
	{
	ife CHAR 14 // SNOWFALL
		{
		gametext 2822 20 20 296 0 0 0 0 0 xdim ydim
		rotatesprite 310 85 26768 0 20984 CHARSHADE 0 0 0 0 xdim ydim // ICON
		rotatesprite 310 85 6192 0 3588 0 0 0 0 0 xdim ydim // FRAME
		rotatesprite 89 18 HALFSIZE 0 23288 0 0 0 0 0 xdim ydim // flag
		set DISP_TEMP5 20888
		rotatesprite 47 100 58000 0 DISP_TEMP5 CHARSHADE 0 0 0 0 xdim ydim // CHARACTER

        qputs 815 Space Adventurer
        gametextz 2822 370 118 815 0 24 0 0 0 xdim ydim DISP_TEMP7
        ife PERSONEL_RESEARCH[10] 2 qputs 810 HP: 50 ^8+ 25
		else qputs 810 HP: 50
	    gametextz 2822 370 128 810 0 0 0 0 0 xdim ydim DISP_TEMP7
        qputs 811 Armor Type: Energy
        gametextz 2822 370 136 811 0 0 0 0 0 xdim ydim DISP_TEMP7
        ifg AGENT_FATIGUE[CHAR] 5000 ifg SKILL_LEVEL 2 qputs 812 Stamina: ^54110%
        else qputs 812 Stamina: 160%
	    gametextz 2822 370 144 812 0 0 0 0 0 xdim ydim DISP_TEMP7
        qputs 813 + Auto-recharging Power Armor
	    gametextz 2822 370 154 813 0 125 0 0 0 xdim ydim DISP_TEMP6
        qputs 814 + -50% falling damage
	    gametextz 2822 370 162 814 0 125 0 0 0 xdim ydim DISP_TEMP6
		}
		else
		{
		rotatesprite 310 85 26768 0 20984 20 27 0 0 0 xdim ydim // ICON
		rotatesprite 310 85 6192 0 3594 0 0 0 0 0 xdim ydim // FRAME
		ife DEBUG_STUFF 1 digitalnumberz DIGITALNUM 260 110 AGENT_FATIGUE[14] 0 0 0 0 0 xdim ydim QUARTERSIZE
		}
		ifg AGENT_FATIGUE[14] 5000 // tired?
		 ifg SKILL_LEVEL 2
			{
			rotatesprite 317 95 HALFSIZE 0 21242 0 0 0 0 0 xdim ydim
			ifg AGENT_FATIGUE[14] 10000
				{
				ife CHAR 14 gametextz 2822 370 180 6901 0 124 0 0 0 xdim ydim DISP_TEMP7
				rotatesprite 310 85 6192 0 3588 0 68 0 0 0 xdim ydim // FRAME
				rotatesprite 317 95 HALFSIZE 0 21243 0 0 0 0 0 xdim ydim
				}
				else
				{
				ife CHAR 14 gametextz 2822 370 180 6900 0 32 0 0 0 xdim ydim DISP_TEMP7
				rotatesprite 310 85 6192 0 3588 0 57 0 0 0 xdim ydim // FRAME
				}

			}
	}
}

	ife show_next_char 0
	{
		ifg MOUSEX 319
		 ifg MOUSEY 48
		  ifl MOUSEX 400
		   ifl MOUSEY 80
				rotatesprite 330 65 6096 0 13576 DISP_PULSE 0 8 0 0 xdim ydim
				else
				rotatesprite 330 65 6096 0 13575 0 0 8 0 0 xdim ydim
	}
	else
	ife show_next_char 1
	{
		ifg MOUSEX 319
		 ifg MOUSEY 48
		  ifl MOUSEX 400
		   ifl MOUSEY 80
				rotatesprite 330 65 6096 1024 13576 DISP_PULSE 0 12 0 0 xdim ydim
				else
				rotatesprite 330 65 6096 1024 13575 0 0 12 0 0 xdim ydim
	}

ife show_next_char 1
	{
	ifn allow_temp_characters 0
		{
		ifand allow_temp_characters 1
			{
			ife CHAR 9 // CULTIST
				{
				gametext 2822 20 20 235 0 0 0 0 0 xdim ydim
				rotatesprite 170 40 26768 0 7809 CHARSHADE 0 0 0 0 xdim ydim // ICON
				rotatesprite 170 40 6192 0 3588 0 0 0 0 0 xdim ydim // FRAME
				rotatesprite 89 18 HALFSIZE 0 23287 0 0 0 0 0 xdim ydim // flag
				rotatesprite 44 100 80000 0 7680 CHARSHADE 0 0 0 0 xdim ydim // CHARACTER

                qputs 815 Deadbeat Hero
                gametextz 2822 370 118 815 0 24 0 0 0 xdim ydim DISP_TEMP7
                qputs 810 HP: 100
	            gametextz 2822 370 128 810 0 0 0 0 0 xdim ydim DISP_TEMP7
                qputs 811 Armor Type: Strong
                gametextz 2822 370 136 811 0 0 0 0 0 xdim ydim DISP_TEMP7
	            qputs 812 Stamina: 100%
	            gametextz 2822 370 144 812 0 0 0 0 0 xdim ydim DISP_TEMP7

				}
				else
				{
				rotatesprite 170 40 26768 0 7809 20 27 0 0 0 xdim ydim // ICON
				rotatesprite 170 40 6192 0 3594 0 0 0 0 0 xdim ydim // FRAME
				}
			}

		ifand allow_temp_characters 2
			{
			ife CHAR 10 // Bombshell
				{
				gametext 2822 20 20 236 0 0 0 0 0 xdim ydim
				rotatesprite 205 40 26768 0 5368 CHARSHADE 0 0 0 0 xdim ydim // ICON
				rotatesprite 205 40 6192 0 3588 0 0 0 0 0 xdim ydim // FRAME
				rotatesprite 89 18 HALFSIZE 0 23287 0 0 0 0 0 xdim ydim // flag
				rotatesprite 44 100 80000 0 10365 CHARSHADE 0 0 0 0 xdim ydim // CHARACTER

				qputs 815 Hail to the Queen
                gametextz 2822 370 118 815 0 24 0 0 0 xdim ydim DISP_TEMP7
				qputs 810 HP: 100
	            gametextz 2822 370 128 810 0 0 0 0 0 xdim ydim DISP_TEMP7
                qputs 811 Armor Type: Strong
                gametextz 2822 370 136 811 0 0 0 0 0 xdim ydim DISP_TEMP7
	            qputs 812 Stamina: 100%
	            gametextz 2822 370 144 812 0 0 0 0 0 xdim ydim DISP_TEMP7

				}
				else
				{
				rotatesprite 205 40 26768 0 5368 20 27 0 0 0 xdim ydim // ICON
				rotatesprite 205 40 6192 0 3594 0 0 0 0 0 xdim ydim // FRAME
				}
			}

		ifand allow_temp_characters 4
			{
			ife CHAR 11 // MAARTEN
				{
				gametext 2822 20 20 258 0 0 0 0 0 xdim ydim
				rotatesprite 240 40 26768 0 5488 CHARSHADE 0 0 0 0 xdim ydim // ICON
				rotatesprite 240 40 6192 0 3588 0 0 0 0 0 xdim ydim // FRAME
				rotatesprite 89 18 HALFSIZE 0 23293 0 0 0 0 0 xdim ydim // flag
				rotatesprite 42 100 55000 0 26280 CHARSHADE 0 0 0 0 xdim ydim // CHARACTER

                qputs 815 Medieval Warrior
                gametextz 2822 370 118 815 0 24 0 0 0 xdim ydim DISP_TEMP7
				qputs 810 HP: 150
	            gametextz 2822 370 128 810 0 0 0 0 0 xdim ydim DISP_TEMP7
                qputs 811 Armor Type: Medium
                gametextz 2822 370 136 811 0 0 0 0 0 xdim ydim DISP_TEMP7
	            qputs 812 Stamina: 120%
	            gametextz 2822 370 144 812 0 0 0 0 0 xdim ydim DISP_TEMP7

				}
				else
				{
				rotatesprite 240 40 26768 0 5488 20 27 0 0 0 xdim ydim // ICON
				rotatesprite 240 40 6192 0 3594 0 0 0 0 0 xdim ydim // FRAME
				}
			}
		ifand allow_temp_characters 8
			{
			ife CHAR 12 // JANE
				{
				gametext 2822 20 20 259 0 0 0 0 0 xdim ydim
				rotatesprite 275 40 26768 0 5366 CHARSHADE 0 0 0 0 xdim ydim // ICON
				rotatesprite 275 40 6192 0 3588 0 0 0 0 0 xdim ydim // FRAME
				rotatesprite 89 18 HALFSIZE 0 23295 0 0 0 0 0 xdim ydim // flag
				rotatesprite 44 100 70000 0 12801 CHARSHADE 0 0 0 0 xdim ydim // CHARACTER

                qputs 815 EDF Agent #1
                gametextz 2822 370 118 815 0 24 0 0 0 xdim ydim DISP_TEMP7
                qputs 810 HP: 100
	            gametextz 2822 370 128 810 0 0 0 0 0 xdim ydim DISP_TEMP7
                qputs 811 Armor Type: Energy
                gametextz 2822 370 136 811 0 0 0 0 0 xdim ydim DISP_TEMP7
	            qputs 812 Stamina: 120%
	            gametextz 2822 370 144 812 0 0 0 0 0 xdim ydim DISP_TEMP7

				}
				else
				{
				rotatesprite 275 40 26768 0 5366 20 27 0 0 0 xdim ydim // ICON
				rotatesprite 275 40 6192 0 3594 0 0 0 0 0 xdim ydim // FRAME
				}
			}
		}
	}
}

ifg MOUSEUP 0
{
ife PCINTER 1 state PC_INTERFACE
ife PCINTER 3 state EVIDENCE_INTERFACE
ife PCINTER 4 state PERSONAL_INTERFACE
ife PCINTER 6 state UPGRADES_INTERFACE
ife PCINTER 7 state RESEARCH_INTERFACE
ife PCINTER 8 state LOADOUT_INTERFACE
ife PCINTER 10 state TRAINING_INTERFACE
ife PCINTER 11 state CONVERSATION_INTERFACE
ife PCINTER 12 state WEAPON_SHOP_INTERFACE
ife PCINTER 13 state COMMAND_INTERFACE_DISPLAY
ife PCINTER 14 state ELYSION_PAPER_MAP
ife VIS_CURSOR YES set DISP_TEMP4 6 else set DISP_TEMP4 pal
ifl MOUSE_HINT_TIMER 8
 ifn MOUSE_HINT -1
	{
	ife PCINTER 14
		{
		ife BIG_CURSOR YES rotatesprite16 Q16_MOUSEX Q16_MOUSEY NORMALSIZE 0 22714 0 DISP_TEMP4 16 0 0 xdim ydim
		else rotatesprite16 Q16_MOUSEX Q16_MOUSEY HALFSIZE 0 22714 0 DISP_TEMP4 2064 0 0 xdim ydim
		}
	else
		{
		ife BIG_CURSOR YES rotatesprite16 Q16_MOUSEX Q16_MOUSEY NORMALSIZE 0 3634 0 DISP_TEMP4 16 0 0 xdim ydim
		else rotatesprite16 Q16_MOUSEX Q16_MOUSEY HALFSIZE 0 3634 0 DISP_TEMP4 2064 0 0 xdim ydim
		}
		set DISP_TEMP MOUSEX
		ifg MOUSEX 160 sub DISP_TEMP 100
		else add DISP_TEMP 15
		rotatesprite DISP_TEMP MOUSEY HALFSIZE 0 13347 MOUSE_HINT_TIMER 0 1 0 0 xdim ydim // start of button

		set DISP_TEMP6 0
		qstrlen DISP_TEMP2 MOUSE_HINT

		ifn DISP_TEMP2 -1
		whilevarvarn DISP_TEMP6 DISP_TEMP2
			{
			add DISP_TEMP 4
			rotatesprite DISP_TEMP MOUSEY HALFSIZE 0 13348 MOUSE_HINT_TIMER 0 1 0 0 xdim ydim // button mid-section
			add DISP_TEMP6 1
			}

		add DISP_TEMP 4
		rotatesprite DISP_TEMP MOUSEY HALFSIZE 0 13349 MOUSE_HINT_TIMER 0 1 0 0 xdim ydim // End of button

		set DISP_TEMP MOUSEX
		ifg MOUSEX 160 sub DISP_TEMP 100
		else add DISP_TEMP 15
		add DISP_TEMP4 5
		minitext DISP_TEMP MOUSEY MOUSE_HINT 0 4
		sub DISP_TEMP 1
		minitext DISP_TEMP MOUSEY MOUSE_HINT 0 2
	}
	else
	{
	ife PCINTER 14
		{
		ife BIG_CURSOR YES rotatesprite16 Q16_MOUSEX Q16_MOUSEY NORMALSIZE 0 22714 0 DISP_TEMP4 16 0 0 xdim ydim
		else rotatesprite16 Q16_MOUSEX Q16_MOUSEY HALFSIZE 0 22714 0 DISP_TEMP4 2064 0 0 xdim ydim
		}
	else
		{
		ife BIG_CURSOR YES rotatesprite16 Q16_MOUSEX Q16_MOUSEY NORMALSIZE 0 3634 0 DISP_TEMP4 16 0 0 xdim ydim
		else rotatesprite16 Q16_MOUSEX Q16_MOUSEY HALFSIZE 0 3634 0 DISP_TEMP4 2064 0 0 xdim ydim
		}
	}
ife MOUSEUP 3
	{
	qsprintf 1011 1200 MOUSEX
	minitext 11 11 1011 0 4
	minitext 10 10 1011 0 10
	qsprintf 1011 1201 MOUSEY
	minitext 11 18 1011 0 4
	minitext 10 17 1011 0 10
	}
}

ifn player[].invdisptime 0
ife camerasprite -1
{
// slot 1
set WH_SLOT_X 160 set WH_SLOT_Y 50
set THIS_SLOT 1
state INVENTORY_SLOTS_DEV
// slot 2
set WH_SLOT_X 198 set WH_SLOT_Y 62
set THIS_SLOT 2
state INVENTORY_SLOTS_DEV
// slot 3
set WH_SLOT_X 210 set WH_SLOT_Y 100
set THIS_SLOT 3
state INVENTORY_SLOTS_DEV
// slot 4
set WH_SLOT_X 198 set WH_SLOT_Y 138
set THIS_SLOT 4
state INVENTORY_SLOTS_DEV
// slot 5
set WH_SLOT_X 160 set WH_SLOT_Y 150
set THIS_SLOT 5
state INVENTORY_SLOTS_DEV
// slot 6
set WH_SLOT_X 122 set WH_SLOT_Y 138
set THIS_SLOT 6
state INVENTORY_SLOTS_DEV
// slot 7
set WH_SLOT_X 110 set WH_SLOT_Y 100
set THIS_SLOT 7
state INVENTORY_SLOTS_DEV
// slot 8
set WH_SLOT_X 122 set WH_SLOT_Y 62
set THIS_SLOT 8
state INVENTORY_SLOTS_DEV
}

ifn countdown -1
{
qsprintf 570 571 countdown_minutes
screentext 14486 140 45 QUARTERSIZE 0 0 570 0 0 0 -255 5 16 0 0 524290 0 0 xdim ydim
rotatespritea 145 45 QUARTERSIZE 0 14496 0 0 0 -255 0 0 xdim ydim
ifl countdown_seconds 10 rotatespritea 152 45 QUARTERSIZE 0 14486 0 0 0 -255 0 0 xdim ydim
qsprintf 570 571 countdown_seconds
screentext 14486 165 45 QUARTERSIZE 0 0 570 0 0 0 -255 5 16 0 0 524290 0 0 xdim ydim
}

// WEAPON SHOWING THING

ifg WEAP_SHOW 0
ife MOUSEUP 0
ife camerasprite -1
ife cameraend 0
{
sub WEAP_SHOW 1
getp[].palookup pal

ifn temp_weapon 0
	{
	ifg PICKED_UP_GUN[0] 0
		{
		setarray BAR_SIZE[0] QUARTERSIZE
		set DISP_TEMP4 PICKED_UP_GUN[0]
		sub DISP_TEMP4 1
		setarray PICKED_UP_GUN[0] DISP_TEMP4
		set DISP_TEMP3 400
		mulvarvar DISP_TEMP3 PICKED_UP_GUN[0]
		rotatesprite 70 10 DISP_TEMP3 0 3585 0 0 33 0 0 xdim ydim
		}
	getp[].ammo_amount 0 DISP_TEMP2
	ife DISP_TEMP2 0 set DISP_TEMP4 2 else set DISP_TEMP4 pal

	ife CURWEAP 0
		{
		set DISP_TEMP5 BAR_SIZE[0]
		ifl DISP_TEMP5 HALFSIZE add DISP_TEMP5 256
		setarray BAR_SIZE[0] DISP_TEMP5
		rotatespritea 70 10 BAR_SIZE[0] 0 3607 0 DISP_TEMP4 33 -255 0 0 xdim ydim
		}
	else
		{
		set DISP_TEMP5 BAR_SIZE[0]
		ifg DISP_TEMP5 QUARTERSIZE sub DISP_TEMP5 128
		setarray BAR_SIZE[0] DISP_TEMP5
		rotatespritea 70 10 BAR_SIZE[0] 0 3607 10 DISP_TEMP4 33 -255 0 0 xdim ydim
		}

	rotatesprite 70 10 8192 0 WEAPON0_TILE 0 0 0 0 0 xdim ydim
	digitalnumberz DIGITALNUM 70 15 DISP_TEMP2 0 4 0 0 0 xdim ydim QUARTERSIZE
	}

getp[].gotweapon 1 DISP_TEMP
ife DISP_TEMP 1
	{
	ifg PICKED_UP_GUN[1] 0
		{
		setarray BAR_SIZE[1] QUARTERSIZE
		setarray BAR_SIZE[19] QUARTERSIZE
		set DISP_TEMP4 PICKED_UP_GUN[1]
		sub DISP_TEMP4 1
		setarray PICKED_UP_GUN[1] DISP_TEMP4
		set DISP_TEMP3 400
		mulvarvar DISP_TEMP3 PICKED_UP_GUN[1]
		rotatesprite 90 10 DISP_TEMP3 0 3585 0 0 33 0 0 xdim ydim
		}
	getp[].ammo_amount 1 DISP_TEMP2
	ife DISP_TEMP2 0 set DISP_TEMP4 2 else set DISP_TEMP4 pal

		ifand WEAPON_SPECIAL[1] 1 // has 2?
		{
		ife CURWEAP 1
			{
			ifand GUNFIREMODE 64
				{
				set DISP_TEMP5 BAR_SIZE[1]
				ifg DISP_TEMP5 QUARTERSIZE sub DISP_TEMP5 128
				setarray BAR_SIZE[1] DISP_TEMP5
				rotatespritea 90 10 BAR_SIZE[1] 0 3607 10 DISP_TEMP4 33 -255 0 0 xdim ydim

				set DISP_TEMP6 BAR_SIZE[19]
				ifl DISP_TEMP6 HALFSIZE add DISP_TEMP6 256
				setarray BAR_SIZE[19] DISP_TEMP6
				rotatespritea 90 25 BAR_SIZE[19] 0 3607 0 DISP_TEMP4 33 -255 0 0 xdim ydim
				}
			else
				{
				set DISP_TEMP5 BAR_SIZE[1]
				ifl DISP_TEMP5 HALFSIZE add DISP_TEMP5 256
				setarray BAR_SIZE[1] DISP_TEMP5
				rotatespritea 90 10 BAR_SIZE[1] 0 3607 0 DISP_TEMP4 33 -255 0 0 xdim ydim
				set DISP_TEMP6 BAR_SIZE[19]
				ifg DISP_TEMP6 QUARTERSIZE sub DISP_TEMP6 128
				setarray BAR_SIZE[19] DISP_TEMP6
				rotatespritea 90 25 BAR_SIZE[19] 0 3607 10 DISP_TEMP4 33 -255 0 0 xdim ydim
				}

			}
		else
			{
			set DISP_TEMP5 BAR_SIZE[1]
			ifg DISP_TEMP5 QUARTERSIZE sub DISP_TEMP5 128
			setarray BAR_SIZE[1] DISP_TEMP5
			set DISP_TEMP6 BAR_SIZE[19]
			ifg DISP_TEMP6 QUARTERSIZE sub DISP_TEMP6 128
			setarray BAR_SIZE[19] DISP_TEMP6
			rotatespritea 90 10 BAR_SIZE[1] 0 3607 10 DISP_TEMP4 33 -255 0 0 xdim ydim
			rotatespritea 90 25 BAR_SIZE[19] 0 3607 10 DISP_TEMP4 33 -255 0 0 xdim ydim
			}
		rotatesprite 90 10 8192 0 WEAPON1_TILE 0 0 0 0 0 xdim ydim
		rotatesprite 90 25 8192 0 WEAPON1_TILE 0 0 0 0 0 xdim ydim
		rotatesprite 92 27 8192 0 WEAPON1_TILE 0 0 0 0 0 xdim ydim
		digitalnumberz DIGITALNUM 90 15 DISP_TEMP2 0 4 0 0 0 xdim ydim QUARTERSIZE
		digitalnumberz DIGITALNUM 90 30 DISP_TEMP2 0 4 0 0 0 xdim ydim QUARTERSIZE
		}
	else
		{
		ife CURWEAP 1
			{
			set DISP_TEMP5 BAR_SIZE[1]
			ifl DISP_TEMP5 HALFSIZE add DISP_TEMP5 256
			setarray BAR_SIZE[1] DISP_TEMP5
			rotatespritea 90 10 BAR_SIZE[1] 0 3607 0 DISP_TEMP4 33 -255 0 0 xdim ydim
			}
		else
			{
			set DISP_TEMP5 BAR_SIZE[1]
			ifg DISP_TEMP5 QUARTERSIZE sub DISP_TEMP5 128
			setarray BAR_SIZE[1] DISP_TEMP5
			rotatespritea 90 10 BAR_SIZE[1] 0 3607 10 DISP_TEMP4 33 -255 0 0 xdim ydim
			}
		rotatesprite 90 10 8192 0 WEAPON1_TILE 0 0 0 0 0 xdim ydim
		digitalnumberz DIGITALNUM 90 15 DISP_TEMP2 0 4 0 0 0 xdim ydim QUARTERSIZE
		}
	}

getp[].gotweapon 2 DISP_TEMP
ife DISP_TEMP 1
	{
	ifg PICKED_UP_GUN[2] 0
		{
		setarray BAR_SIZE[2] QUARTERSIZE
		setarray BAR_SIZE[20] QUARTERSIZE
		set DISP_TEMP4 PICKED_UP_GUN[2]
		sub DISP_TEMP4 1
		setarray PICKED_UP_GUN[2] DISP_TEMP4
		set DISP_TEMP3 400
		mulvarvar DISP_TEMP3 PICKED_UP_GUN[2]
		rotatesprite 110 10 DISP_TEMP3 0 3585 0 0 33 0 0 xdim ydim
		}
	getp[].ammo_amount 2 DISP_TEMP2
	ife DISP_TEMP2 0
	{
	ifand WEAPON_SPECIAL[2] 4 ifg SHOTGUNBOXMAG 0 set DISP_TEMP4 pal
	else ifg SHOTGUNMAG 0 set DISP_TEMP4 pal
	else set DISP_TEMP4 2
	}
	else set DISP_TEMP4 pal
		ifand WEAPON_SPECIAL[2] 1 // has 2?
		{
		ife CURWEAP 2
			{
			ifand GUNFIREMODE_2 64
				{
				set DISP_TEMP5 BAR_SIZE[2]
				ifg DISP_TEMP5 QUARTERSIZE sub DISP_TEMP5 128
				setarray BAR_SIZE[2] DISP_TEMP5
				rotatespritea 110 10 BAR_SIZE[2] 0 3607 10 DISP_TEMP4 33 -255 0 0 xdim ydim

				set DISP_TEMP6 BAR_SIZE[20]
				ifl DISP_TEMP6 HALFSIZE add DISP_TEMP6 256
				setarray BAR_SIZE[20] DISP_TEMP6
				rotatespritea 110 25 BAR_SIZE[20] 0 3607 0 DISP_TEMP4 33 -255 0 0 xdim ydim
				}
			else
				{
				set DISP_TEMP5 BAR_SIZE[2]
				ifl DISP_TEMP5 HALFSIZE add DISP_TEMP5 256
				setarray BAR_SIZE[2] DISP_TEMP5
				rotatespritea 110 10 BAR_SIZE[2] 0 3607 0 DISP_TEMP4 33 -255 0 0 xdim ydim

				set DISP_TEMP6 BAR_SIZE[20]
				ifg DISP_TEMP6 QUARTERSIZE sub DISP_TEMP6 128
				setarray BAR_SIZE[20] DISP_TEMP6
				rotatespritea 110 25 BAR_SIZE[20] 0 3607 10 DISP_TEMP4 33 -255 0 0 xdim ydim
				}

			}
		else
			{
			set DISP_TEMP5 BAR_SIZE[2]
			ifg DISP_TEMP5 QUARTERSIZE sub DISP_TEMP5 128
			setarray BAR_SIZE[2] DISP_TEMP5
			set DISP_TEMP6 BAR_SIZE[20]
			ifg DISP_TEMP6 QUARTERSIZE sub DISP_TEMP6 128
			setarray BAR_SIZE[20] DISP_TEMP6
			rotatespritea 110 10 BAR_SIZE[2] 0 3607 10 DISP_TEMP4 33 -255 0 0 xdim ydim
			rotatespritea 110 25 BAR_SIZE[20] 0 3607 10 DISP_TEMP4 33 -255 0 0 xdim ydim
			}
		rotatesprite 110 10 8192 0 WEAPON2_TILE 0 0 0 0 0 xdim ydim
		rotatesprite 110 25 8192 0 WEAPON2_TILE 0 0 0 0 0 xdim ydim
		rotatesprite 112 27 8192 0 WEAPON2_TILE 0 0 0 0 0 xdim ydim
		digitalnumberz DIGITALNUM 110 15 DISP_TEMP2 0 4 0 0 0 xdim ydim QUARTERSIZE
		digitalnumberz DIGITALNUM 110 30 DISP_TEMP2 0 4 0 0 0 xdim ydim QUARTERSIZE
		}
	else // normal stuff
		{
		ife CURWEAP 2
			{
			set DISP_TEMP5 BAR_SIZE[2]
			ifl DISP_TEMP5 HALFSIZE add DISP_TEMP5 256
			setarray BAR_SIZE[2] DISP_TEMP5
			rotatespritea 110 10 BAR_SIZE[2] 0 3607 0 DISP_TEMP4 33 -255 0 0 xdim ydim
			}
		else
			{
			set DISP_TEMP5 BAR_SIZE[2]
			ifg DISP_TEMP5 QUARTERSIZE sub DISP_TEMP5 128
			setarray BAR_SIZE[2] DISP_TEMP5
			rotatespritea 110 10 BAR_SIZE[2] 0 3607 10 DISP_TEMP4 33 -255 0 0 xdim ydim
			}
		rotatesprite 110 10 8192 0 WEAPON2_TILE 0 0 0 0 0 xdim ydim
		digitalnumberz DIGITALNUM 110 15 DISP_TEMP2 0 4 0 0 0 xdim ydim QUARTERSIZE
		}
	}

getp[].gotweapon 3 DISP_TEMP
ife DISP_TEMP 1
	{
	ifg PICKED_UP_GUN[3] 0
		{
		setarray BAR_SIZE[3] QUARTERSIZE
		setarray BAR_SIZE[18] QUARTERSIZE
		set DISP_TEMP4 PICKED_UP_GUN[3]
		sub DISP_TEMP4 1
		setarray PICKED_UP_GUN[3] DISP_TEMP4
		set DISP_TEMP3 400
		mulvarvar DISP_TEMP3 PICKED_UP_GUN[3]
		rotatesprite 130 10 DISP_TEMP3 0 3585 0 0 33 0 0 xdim ydim
		}
	getp[].ammo_amount 3 DISP_TEMP2
	ife DISP_TEMP2 0 set DISP_TEMP4 2 else set DISP_TEMP4 pal

		ifand WEAPON_SPECIAL[3] 1 // has 2?
		{
		ife CURWEAP 3
			{
			ifand GUNFIREMODE 1024
				{
				set DISP_TEMP5 BAR_SIZE[3]
				ifg DISP_TEMP5 QUARTERSIZE sub DISP_TEMP5 128
				setarray BAR_SIZE[3] DISP_TEMP5
				rotatespritea 130 10 BAR_SIZE[3] 0 3607 10 DISP_TEMP4 33 -255 0 0 xdim ydim

				set DISP_TEMP6 BAR_SIZE[18]
				ifl DISP_TEMP6 HALFSIZE add DISP_TEMP6 256
				setarray BAR_SIZE[18] DISP_TEMP6
				rotatespritea 130 25 BAR_SIZE[18] 0 3607 0 DISP_TEMP4 33 -255 0 0 xdim ydim
				}
			else
				{
				set DISP_TEMP5 BAR_SIZE[3]
				ifl DISP_TEMP5 HALFSIZE add DISP_TEMP5 256
				setarray BAR_SIZE[3] DISP_TEMP5
				rotatespritea 130 10 BAR_SIZE[3] 0 3607 0 DISP_TEMP4 33 -255 0 0 xdim ydim

				set DISP_TEMP6 BAR_SIZE[18]
				ifg DISP_TEMP6 QUARTERSIZE sub DISP_TEMP6 128
				setarray BAR_SIZE[18] DISP_TEMP6
				rotatespritea 130 25 BAR_SIZE[18] 0 3607 10 DISP_TEMP4 33 -255 0 0 xdim ydim
				}

			}
		else
			{
			set DISP_TEMP5 BAR_SIZE[3]
			ifg DISP_TEMP5 QUARTERSIZE sub DISP_TEMP5 128
			setarray BAR_SIZE[3] DISP_TEMP5
			set DISP_TEMP6 BAR_SIZE[18]
			ifg DISP_TEMP6 QUARTERSIZE sub DISP_TEMP6 128
			setarray BAR_SIZE[18] DISP_TEMP6
			rotatespritea 130 10 BAR_SIZE[3] 0 3607 10 DISP_TEMP4 33 -255 0 0 xdim ydim
			rotatespritea 130 25 BAR_SIZE[18] 0 3607 10 DISP_TEMP4 33 -255 0 0 xdim ydim
			}
		rotatesprite 130 10 8192 0 WEAPON3_TILE 0 0 0 0 0 xdim ydim
		rotatesprite 130 25 8192 0 WEAPON3_TILE 0 0 0 0 0 xdim ydim
		rotatesprite 132 27 8192 0 WEAPON3_TILE 0 0 0 0 0 xdim ydim
		digitalnumberz DIGITALNUM 130 15 DISP_TEMP2 0 4 0 0 0 xdim ydim QUARTERSIZE
		digitalnumberz DIGITALNUM 130 30 DISP_TEMP2 0 4 0 0 0 xdim ydim QUARTERSIZE
		}
	else ifand WEAPON_SPECIAL[3] 2 // cased Grenade launcher
		{
		ifand AMMO_TYPES[3] 32
			{
			set DISP_TEMP7 fortymm_shells
			set DISP_TEMP8 FORTYMM_SHELLS
			}
		else ifand AMMO_TYPES[3] 128
			{
			set DISP_TEMP7 fortymm_MIA_shells
			set DISP_TEMP8 5463
			}
		else ifand AMMO_TYPES[3] 256
			{
			set DISP_TEMP7 fortymm_plasma
			set DISP_TEMP8 5476
			}
		else
			{
			set DISP_TEMP7 fortymm_grenades
			set DISP_TEMP8 5411
			}
		ife DISP_TEMP7 0 set DISP_TEMP3 2 else set DISP_TEMP3 pal
		ife CURWEAP 3
			{
			ifand GUNFIREMODE 32768
				{
				set DISP_TEMP5 BAR_SIZE[3]
				ifg DISP_TEMP5 QUARTERSIZE sub DISP_TEMP5 128
				setarray BAR_SIZE[3] DISP_TEMP5
				rotatespritea 130 10 BAR_SIZE[3] 0 3607 10 DISP_TEMP4 33 -255 0 0 xdim ydim

				set DISP_TEMP6 BAR_SIZE[18]
				ifl DISP_TEMP6 HALFSIZE add DISP_TEMP6 256
				setarray BAR_SIZE[18] DISP_TEMP6
				rotatespritea 130 25 BAR_SIZE[18] 0 3607 0 DISP_TEMP3 33 -255 0 0 xdim ydim
				}
			else
				{
				set DISP_TEMP5 BAR_SIZE[3]
				ifl DISP_TEMP5 HALFSIZE add DISP_TEMP5 256
				setarray BAR_SIZE[3] DISP_TEMP5
				rotatespritea 130 10 BAR_SIZE[3] 0 3607 0 DISP_TEMP4 33 -255 0 0 xdim ydim

				set DISP_TEMP6 BAR_SIZE[18]
				ifg DISP_TEMP6 QUARTERSIZE sub DISP_TEMP6 128
				setarray BAR_SIZE[18] DISP_TEMP6
				rotatespritea 130 25 BAR_SIZE[18] 0 3607 10 DISP_TEMP3 33 -255 0 0 xdim ydim
				}

			}
		else
			{
			set DISP_TEMP5 BAR_SIZE[3]
			ifg DISP_TEMP5 QUARTERSIZE sub DISP_TEMP5 128
			setarray BAR_SIZE[3] DISP_TEMP5
			set DISP_TEMP6 BAR_SIZE[18]
			ifg DISP_TEMP6 QUARTERSIZE sub DISP_TEMP6 128
			setarray BAR_SIZE[18] DISP_TEMP6
			rotatespritea 130 10 BAR_SIZE[3] 0 3607 10 DISP_TEMP4 33 -255 0 0 xdim ydim
			rotatespritea 130 25 BAR_SIZE[18] 0 3607 10 DISP_TEMP3 33 -255 0 0 xdim ydim
			}
		rotatesprite 130 10 8192 0 WEAPON3_TILE 0 0 0 0 0 xdim ydim
		rotatesprite 130 25 8192 0 WEAPON3_TILE 10 0 0 0 0 xdim ydim
		rotatesprite 132 27 14192 0 DISP_TEMP8 0 0 0 0 0 xdim ydim
		digitalnumberz DIGITALNUM 130 15 DISP_TEMP2 0 4 0 0 0 xdim ydim QUARTERSIZE
		digitalnumberz DIGITALNUM 130 30 DISP_TEMP7 0 2 0 0 0 xdim ydim QUARTERSIZE
		}
	else ifand WEAPON_SPECIAL[3] 8 // caseless Grenade launcher
		{
		ifand AMMO_TYPES[3] 512
			{
			set DISP_TEMP7 fortymm_slug
			set DISP_TEMP8 FORTYMM_SLUGS
			}
		else ifand AMMO_TYPES[3] 2048
			{
			set DISP_TEMP7 fortymm_electro
			set DISP_TEMP8 FORTYMM_ELECTRO
			}
		else ifand AMMO_TYPES[3] 4096
			{
			set DISP_TEMP7 fortymm_cryo
			set DISP_TEMP8 FORTYMM_CRYO
			}
		else
			{
			set DISP_TEMP7 fortymm_caseless
			set DISP_TEMP8 FORTYMM_CASELESS
			}
		ife DISP_TEMP7 0 set DISP_TEMP5 2 else set DISP_TEMP5 pal
		ife CURWEAP 3
			{
			ifand GUNFIREMODE 32768
				{
				set DISP_TEMP5 BAR_SIZE[3]
				ifg DISP_TEMP5 QUARTERSIZE sub DISP_TEMP5 128
				setarray BAR_SIZE[3] DISP_TEMP5
				rotatespritea 130 10 BAR_SIZE[3] 0 3607 10 DISP_TEMP4 33 -255 0 0 xdim ydim

				set DISP_TEMP6 BAR_SIZE[18]
				ifl DISP_TEMP6 HALFSIZE add DISP_TEMP6 256
				setarray BAR_SIZE[18] DISP_TEMP6
				rotatespritea 130 25 BAR_SIZE[18] 0 3607 0 DISP_TEMP4 33 -255 0 0 xdim ydim
				}
			else
				{
				set DISP_TEMP5 BAR_SIZE[3]
				ifl DISP_TEMP5 HALFSIZE add DISP_TEMP5 256
				setarray BAR_SIZE[3] DISP_TEMP5
				rotatespritea 130 10 BAR_SIZE[3] 0 3607 0 DISP_TEMP4 33 -255 0 0 xdim ydim

				set DISP_TEMP6 BAR_SIZE[18]
				ifg DISP_TEMP6 QUARTERSIZE sub DISP_TEMP6 128
				setarray BAR_SIZE[18] DISP_TEMP6
				rotatespritea 130 25 BAR_SIZE[18] 0 3607 10 DISP_TEMP4 33 -255 0 0 xdim ydim
				}

			}
		else
			{
			set DISP_TEMP5 BAR_SIZE[3]
			ifg DISP_TEMP5 QUARTERSIZE sub DISP_TEMP5 128
			setarray BAR_SIZE[3] DISP_TEMP5
			set DISP_TEMP6 BAR_SIZE[18]
			ifg DISP_TEMP6 QUARTERSIZE sub DISP_TEMP6 128
			setarray BAR_SIZE[18] DISP_TEMP6
			rotatespritea 130 10 BAR_SIZE[3] 0 3607 10 DISP_TEMP4 33 -255 0 0 xdim ydim
			rotatespritea 130 25 BAR_SIZE[18] 0 3607 10 DISP_TEMP4 33 -255 0 0 xdim ydim
			}
		rotatesprite 130 10 8192 0 WEAPON3_TILE 0 0 0 0 0 xdim ydim
		rotatesprite 130 25 8192 0 WEAPON3_TILE 10 0 0 0 0 xdim ydim
		rotatesprite 132 27 14192 0 DISP_TEMP8 0 0 0 0 0 xdim ydim
		digitalnumberz DIGITALNUM 130 15 DISP_TEMP2 0 4 0 0 0 xdim ydim QUARTERSIZE
		digitalnumberz DIGITALNUM 130 30 DISP_TEMP7 0 2 0 0 0 xdim ydim QUARTERSIZE
		}
	else // normal stuff
		{
		ife CURWEAP 3
			{
			set DISP_TEMP5 BAR_SIZE[3]
			ifl DISP_TEMP5 HALFSIZE add DISP_TEMP5 256
			setarray BAR_SIZE[3] DISP_TEMP5
			rotatespritea 130 10 BAR_SIZE[3] 0 3607 0 DISP_TEMP4 33 -255 0 0 xdim ydim
			}
		else
			{
			set DISP_TEMP5 BAR_SIZE[3]
			ifg DISP_TEMP5 QUARTERSIZE sub DISP_TEMP5 128
			setarray BAR_SIZE[3] DISP_TEMP5
			rotatespritea 130 10 BAR_SIZE[3] 0 3607 10 DISP_TEMP4 33 -255 0 0 xdim ydim
			}
		rotatesprite 130 10 8192 0 WEAPON3_TILE 0 0 0 0 0 xdim ydim
		digitalnumberz DIGITALNUM 130 15 DISP_TEMP2 0 4 0 0 0 xdim ydim QUARTERSIZE
		}
	}

getp[].gotweapon 4 DISP_TEMP // rocket launcher slot
ife DISP_TEMP 1
	{
	ifg PICKED_UP_GUN[4] 0
		{
		setarray BAR_SIZE[4] QUARTERSIZE
		set DISP_TEMP4 PICKED_UP_GUN[4]
		sub DISP_TEMP4 1
		setarray PICKED_UP_GUN[4] DISP_TEMP4
		set DISP_TEMP3 400
		mulvarvar DISP_TEMP3 PICKED_UP_GUN[4]
		rotatesprite 150 10 DISP_TEMP3 0 3585 0 0 33 0 0 xdim ydim
		}
	getp[].ammo_amount 4 DISP_TEMP2
	ife DISP_TEMP2 0 set DISP_TEMP4 2 else set DISP_TEMP4 pal
	ife CURWEAP 4
		{
		set DISP_TEMP5 BAR_SIZE[4]
		ifl DISP_TEMP5 HALFSIZE add DISP_TEMP5 256
		setarray BAR_SIZE[4] DISP_TEMP5
		rotatespritea 150 10 BAR_SIZE[4] 0 3607 0 DISP_TEMP4 33 -255 0 0 xdim ydim
		}
	else
		{
		set DISP_TEMP5 BAR_SIZE[4]
		ifg DISP_TEMP5 QUARTERSIZE sub DISP_TEMP5 128
		setarray BAR_SIZE[4] DISP_TEMP5
		rotatespritea 150 10 BAR_SIZE[4] 0 3607 10 DISP_TEMP4 33 -255 0 0 xdim ydim
		}
	rotatesprite 150 10 8192 0 WEAPON4_TILE 0 0 0 0 0 xdim ydim
	digitalnumberz DIGITALNUM 150 15 DISP_TEMP2 0 4 0 0 0 xdim ydim QUARTERSIZE
	}

getp[].gotweapon 5 DISP_TEMP // pipebomb slot
ife DISP_TEMP 1
	{
	ifg PICKED_UP_GUN[5] 0
		{
		setarray BAR_SIZE[5] QUARTERSIZE
		set DISP_TEMP4 PICKED_UP_GUN[5]
		sub DISP_TEMP4 1
		setarray PICKED_UP_GUN[5] DISP_TEMP4
		set DISP_TEMP3 400
		mulvarvar DISP_TEMP3 PICKED_UP_GUN[5]
		rotatesprite 170 10 DISP_TEMP3 0 3585 0 0 33 0 0 xdim ydim
		}
	getp[].ammo_amount 5 DISP_TEMP2
	ife DISP_TEMP2 0 set DISP_TEMP4 2 else set DISP_TEMP4 pal
	ife CURWEAP 5
		{
		set DISP_TEMP5 BAR_SIZE[5]
		ifl DISP_TEMP5 HALFSIZE add DISP_TEMP5 256
		setarray BAR_SIZE[5] DISP_TEMP5
		rotatespritea 170 10 BAR_SIZE[5] 0 3607 0 DISP_TEMP4 33 -255 0 0 xdim ydim
		}
	else
		{
		set DISP_TEMP5 BAR_SIZE[5]
		ifg DISP_TEMP5 QUARTERSIZE sub DISP_TEMP5 128
		setarray BAR_SIZE[5] DISP_TEMP5
		rotatespritea 170 10 BAR_SIZE[5] 0 3607 10 DISP_TEMP4 33 -255 0 0 xdim ydim
		}
	rotatesprite 170 10 8192 0 WEAPON5_TILE 0 0 0 0 0 xdim ydim
	digitalnumberz DIGITALNUM 170 15 DISP_TEMP2 0 4 0 0 0 xdim ydim QUARTERSIZE
	}

getp[].gotweapon 6 DISP_TEMP // Shrinker slot
ife DISP_TEMP 1
	{
	ifg PICKED_UP_GUN[6] 0
		{
		setarray BAR_SIZE[6] QUARTERSIZE
		set DISP_TEMP4 PICKED_UP_GUN[6]
		sub DISP_TEMP4 1
		setarray PICKED_UP_GUN[6] DISP_TEMP4
		set DISP_TEMP3 400
		mulvarvar DISP_TEMP3 PICKED_UP_GUN[6]
		rotatesprite 190 10 DISP_TEMP3 0 3585 0 0 33 0 0 xdim ydim
		}
	getp[].ammo_amount 6 DISP_TEMP2
	ife DISP_TEMP2 0 set DISP_TEMP4 2 else set DISP_TEMP4 pal
	ife CURWEAP 11
		{
		set DISP_TEMP5 BAR_SIZE[6]
		ifl DISP_TEMP5 HALFSIZE add DISP_TEMP5 256
		setarray BAR_SIZE[6] DISP_TEMP5
		rotatespritea 190 10 BAR_SIZE[6] 0 3607 0 DISP_TEMP4 33 -255 0 0 xdim ydim
		}
	else ife CURWEAP 6
		{
		set DISP_TEMP5 BAR_SIZE[6]
		ifl DISP_TEMP5 HALFSIZE add DISP_TEMP5 256
		setarray BAR_SIZE[6] DISP_TEMP5
		rotatespritea 190 10 BAR_SIZE[6] 0 3607 0 DISP_TEMP4 33 -255 0 0 xdim ydim
		}
	else
		{
		set DISP_TEMP5 BAR_SIZE[6]
		ifg DISP_TEMP5 QUARTERSIZE sub DISP_TEMP5 128
		setarray BAR_SIZE[6] DISP_TEMP5
		rotatespritea 190 10 BAR_SIZE[6] 0 3607 10 DISP_TEMP4 33 -255 0 0 xdim ydim
		}
	rotatesprite 190 10 8192 0 WEAPON6_TILE 0 0 0 0 0 xdim ydim
	digitalnumberz DIGITALNUM 190 15 DISP_TEMP2 0 4 0 0 0 xdim ydim QUARTERSIZE
	ifand WEAPON_SPECIAL[6] 512 nullop else
		{
		getp[].ammo_amount 11 DISP_TEMP2
		ifg DISP_TEMP2 0 digitalnumberz DIGITALNUM 190 20 DISP_TEMP2 0 0 0 0 0 xdim ydim QUARTERSIZE
		}
	}

getp[].gotweapon 7 DISP_TEMP // Devistator slot
ife DISP_TEMP 1
	{
	ifg PICKED_UP_GUN[7] 0
		{
		setarray BAR_SIZE[7] QUARTERSIZE
		setarray BAR_SIZE[17] QUARTERSIZE
		set DISP_TEMP4 PICKED_UP_GUN[7]
		sub DISP_TEMP4 1
		setarray PICKED_UP_GUN[7] DISP_TEMP4
		set DISP_TEMP3 400
		mulvarvar DISP_TEMP3 PICKED_UP_GUN[7]
		rotatesprite 210 10 DISP_TEMP3 0 3585 0 0 33 0 0 xdim ydim
		}
	getp[].ammo_amount 7 DISP_TEMP2
	ife DISP_TEMP2 0 set DISP_TEMP4 2 else set DISP_TEMP4 pal

	ifand WEAPON_SPECIAL[7] 2 // 40mm cased Grenade launcher
		{
		ifand AMMO_TYPES[7] 32
			{
			set DISP_TEMP7 fortymm_shells
			set DISP_TEMP8 FORTYMM_SHELLS
			}
		else ifand AMMO_TYPES[7] 128
			{
			set DISP_TEMP7 fortymm_MIA_shells
			set DISP_TEMP8 5463
			}
		else ifand AMMO_TYPES[7] 256
			{
			set DISP_TEMP7 fortymm_plasma
			set DISP_TEMP8 5476
			}
		else
			{
			set DISP_TEMP7 fortymm_grenades
			set DISP_TEMP8 5411
			}
		ife DISP_TEMP6 0 set DISP_TEMP5 2 else set DISP_TEMP5 pal
		ife CURWEAP 7
			{
			ifand GUNFIREMODE 32768
				{
				set DISP_TEMP5 BAR_SIZE[7]
				ifg DISP_TEMP5 QUARTERSIZE sub DISP_TEMP5 128
				setarray BAR_SIZE[7] DISP_TEMP5
				rotatespritea 210 10 BAR_SIZE[7] 0 3607 10 DISP_TEMP4 33 -255 0 0 xdim ydim

				set DISP_TEMP6 BAR_SIZE[17]
				ifl DISP_TEMP6 HALFSIZE add DISP_TEMP6 256
				setarray BAR_SIZE[17] DISP_TEMP6
				rotatespritea 210 25 BAR_SIZE[17] 0 3607 0 DISP_TEMP5 33 -255 0 0 xdim ydim
				}
			else
				{
				set DISP_TEMP5 BAR_SIZE[7]
				ifl DISP_TEMP5 HALFSIZE add DISP_TEMP5 256
				setarray BAR_SIZE[7] DISP_TEMP5
				rotatespritea 210 10 BAR_SIZE[7] 0 3607 0 DISP_TEMP4 33 -255 0 0 xdim ydim

				set DISP_TEMP6 BAR_SIZE[17]
				ifg DISP_TEMP6 QUARTERSIZE sub DISP_TEMP6 128
				setarray BAR_SIZE[17] DISP_TEMP6
				rotatespritea 210 25 BAR_SIZE[17] 0 3607 10 DISP_TEMP5 33 -255 0 0 xdim ydim
				}

			}
		else
			{
			set DISP_TEMP5 BAR_SIZE[7]
			ifg DISP_TEMP5 QUARTERSIZE sub DISP_TEMP5 128
			setarray BAR_SIZE[7] DISP_TEMP5
			set DISP_TEMP6 BAR_SIZE[17]
			ifg DISP_TEMP6 QUARTERSIZE sub DISP_TEMP6 128
			setarray BAR_SIZE[17] DISP_TEMP6
			rotatespritea 210 10 BAR_SIZE[7] 0 3607 10 DISP_TEMP4 33 -255 0 0 xdim ydim
			rotatespritea 210 25 BAR_SIZE[17] 0 3607 10 DISP_TEMP5 33 -255 0 0 xdim ydim
			}
		rotatesprite 210 10 8192 0 WEAPON7_TILE 0 0 0 0 0 xdim ydim
		rotatesprite 210 25 8192 0 WEAPON7_TILE 10 0 0 0 0 xdim ydim
		rotatesprite 212 27 14192 0 DISP_TEMP8 0 0 0 0 0 xdim ydim
		digitalnumberz DIGITALNUM 210 15 DISP_TEMP2 0 4 0 0 0 xdim ydim QUARTERSIZE
		digitalnumberz DIGITALNUM 210 30 DISP_TEMP7 0 2 0 0 0 xdim ydim QUARTERSIZE
		}
		else // Standard weapon
			{
			ife CURWEAP 7
				{
				set DISP_TEMP5 BAR_SIZE[7]
				ifl DISP_TEMP5 HALFSIZE add DISP_TEMP5 256
				setarray BAR_SIZE[7] DISP_TEMP5
				rotatespritea 210 10 BAR_SIZE[7] 0 3607 0 DISP_TEMP4 33 -255 0 0 xdim ydim
				}
			else
				{
				set DISP_TEMP5 BAR_SIZE[7]
				ifg DISP_TEMP5 QUARTERSIZE sub DISP_TEMP5 128
				setarray BAR_SIZE[7] DISP_TEMP5
				rotatespritea 210 10 BAR_SIZE[7] 0 3607 10 DISP_TEMP4 33 -255 0 0 xdim ydim
				}
			rotatesprite 210 10 8192 0 WEAPON7_TILE 0 0 0 0 0 xdim ydim
			digitalnumberz DIGITALNUM 210 15 DISP_TEMP2 0 4 0 0 0 xdim ydim QUARTERSIZE
			}
	}

getp[].gotweapon 8 DISP_TEMP
ife DISP_TEMP 1
	{
	ifg PICKED_UP_GUN[8] 0
		{
		setarray BAR_SIZE[8] QUARTERSIZE
		set DISP_TEMP4 PICKED_UP_GUN[8]
		sub DISP_TEMP4 1
		setarray PICKED_UP_GUN[8] DISP_TEMP4
		set DISP_TEMP3 400
		mulvarvar DISP_TEMP3 PICKED_UP_GUN[8]
		rotatesprite 230 10 DISP_TEMP3 0 3585 0 0 33 0 0 xdim ydim
		}
	getp[].ammo_amount 8 DISP_TEMP2
	ife DISP_TEMP2 0 set DISP_TEMP4 2 else set DISP_TEMP4 pal
	ife CURWEAP 8
		{
		set DISP_TEMP5 BAR_SIZE[8]
		ifl DISP_TEMP5 HALFSIZE add DISP_TEMP5 256
		setarray BAR_SIZE[8] DISP_TEMP5
		rotatespritea 230 10 BAR_SIZE[8] 0 3607 0 DISP_TEMP4 33 -255 0 0 xdim ydim
		}
	else
		{
		set DISP_TEMP5 BAR_SIZE[8]
		ifg DISP_TEMP5 QUARTERSIZE sub DISP_TEMP5 128
		setarray BAR_SIZE[8] DISP_TEMP5
		rotatespritea 230 10 BAR_SIZE[8] 0 3607 10 DISP_TEMP4 33 -255 0 0 xdim ydim
		}
	rotatesprite 230 10 8192 0 WEAPON8_TILE 0 0 0 0 0 xdim ydim
	digitalnumberz DIGITALNUM 230 15 DISP_TEMP2 0 4 0 0 0 xdim ydim QUARTERSIZE
	}

getp[].gotweapon 9 DISP_TEMP // freezer slot
ife DISP_TEMP 1
	{
	ifg PICKED_UP_GUN[9] 0
		{
		setarray BAR_SIZE[9] QUARTERSIZE
		setarray BAR_SIZE[16] QUARTERSIZE
		set DISP_TEMP4 PICKED_UP_GUN[9]
		sub DISP_TEMP4 1
		setarray PICKED_UP_GUN[9] DISP_TEMP4
		set DISP_TEMP3 400
		mulvarvar DISP_TEMP3 PICKED_UP_GUN[9]
		rotatesprite 250 10 DISP_TEMP3 0 3585 0 0 33 0 0 xdim ydim
		}
	getp[].ammo_amount 9 DISP_TEMP2
	ife DISP_TEMP2 0 set DISP_TEMP4 2 else set DISP_TEMP4 pal

ifand WEAPON_SPECIAL[9] 2 // Grenade launcher
		{
		ifand AMMO_TYPES[9] 32
			{
			set DISP_TEMP7 fortymm_shells
			set DISP_TEMP8 FORTYMM_SHELLS
			}
		else ifand AMMO_TYPES[9] 128
			{
			set DISP_TEMP7 fortymm_MIA_shells
			set DISP_TEMP8 5463
			}
		else ifand AMMO_TYPES[9] 256
			{
			set DISP_TEMP7 fortymm_plasma
			set DISP_TEMP8 5476
			}
		else
			{
			set DISP_TEMP7 fortymm_grenades
			set DISP_TEMP8 5411
			}
		ife DISP_TEMP6 0 set DISP_TEMP5 2 else set DISP_TEMP5 pal
		ife CURWEAP 9
			{
			ifand GUNFIREMODE 32768
				{
				set DISP_TEMP5 BAR_SIZE[9]
				ifg DISP_TEMP5 QUARTERSIZE sub DISP_TEMP5 128
				setarray BAR_SIZE[9] DISP_TEMP5
				rotatespritea 250 10 BAR_SIZE[9] 0 3607 10 DISP_TEMP4 33 -255 0 0 xdim ydim

				set DISP_TEMP6 BAR_SIZE[16]
				ifl DISP_TEMP6 HALFSIZE add DISP_TEMP6 256
				setarray BAR_SIZE[16] DISP_TEMP6
				rotatespritea 250 25 BAR_SIZE[16] 0 3607 0 DISP_TEMP5 33 -255 0 0 xdim ydim
				}
			else
				{
				set DISP_TEMP5 BAR_SIZE[9]
				ifl DISP_TEMP5 HALFSIZE add DISP_TEMP5 256
				setarray BAR_SIZE[9] DISP_TEMP5
				rotatespritea 250 10 BAR_SIZE[9] 0 3607 0 DISP_TEMP4 33 -255 0 0 xdim ydim

				set DISP_TEMP6 BAR_SIZE[16]
				ifg DISP_TEMP6 QUARTERSIZE sub DISP_TEMP6 128
				setarray BAR_SIZE[16] DISP_TEMP6
				rotatespritea 250 25 BAR_SIZE[16] 0 3607 10 DISP_TEMP5 33 -255 0 0 xdim ydim
				}

			}
		else
			{
			set DISP_TEMP5 BAR_SIZE[9]
			ifg DISP_TEMP5 QUARTERSIZE sub DISP_TEMP5 128
			setarray BAR_SIZE[9] DISP_TEMP5
			set DISP_TEMP6 BAR_SIZE[16]
			ifg DISP_TEMP6 QUARTERSIZE sub DISP_TEMP6 128
			setarray BAR_SIZE[16] DISP_TEMP6
			rotatespritea 250 10 BAR_SIZE[9] 0 3607 10 DISP_TEMP4 33 -255 0 0 xdim ydim
			rotatespritea 250 25 BAR_SIZE[16] 0 3607 10 DISP_TEMP5 33 -255 0 0 xdim ydim
			}
		rotatesprite 250 10 8192 0 WEAPON9_TILE 0 0 0 0 0 xdim ydim
		rotatesprite 250 25 8192 0 WEAPON9_TILE 10 0 0 0 0 xdim ydim
		rotatesprite 252 27 14192 0 DISP_TEMP8 0 0 0 0 0 xdim ydim
		digitalnumberz DIGITALNUM 250 15 DISP_TEMP2 0 4 0 0 0 xdim ydim QUARTERSIZE
		digitalnumberz DIGITALNUM 250 30 DISP_TEMP7 0 2 0 0 0 xdim ydim QUARTERSIZE
		}
	else
ifand WEAPON_SPECIAL[9] 8 // caseless Grenade launcher
		{
		ifand AMMO_TYPES[9] 512
			{
			set DISP_TEMP7 fortymm_slug
			set DISP_TEMP8 FORTYMM_SLUGS
			}
		else ifand AMMO_TYPES[9] 2048
			{
			set DISP_TEMP7 fortymm_electro
			set DISP_TEMP8 FORTYMM_ELECTRO
			}
		else ifand AMMO_TYPES[9] 4096
			{
			set DISP_TEMP7 fortymm_cryo
			set DISP_TEMP8 FORTYMM_CRYO
			}
		else
			{
			set DISP_TEMP7 fortymm_caseless
			set DISP_TEMP8 FORTYMM_CASELESS
			}
		ife DISP_TEMP7 0 set DISP_TEMP5 2 else set DISP_TEMP5 pal
		ife CURWEAP 9
			{
			ifand GUNFIREMODE 32768
				{
				set DISP_TEMP5 BAR_SIZE[9]
				ifg DISP_TEMP5 QUARTERSIZE sub DISP_TEMP5 128
				setarray BAR_SIZE[9] DISP_TEMP5
				rotatespritea 250 10 BAR_SIZE[9] 0 3607 10 DISP_TEMP4 33 -255 0 0 xdim ydim

				set DISP_TEMP6 BAR_SIZE[16]
				ifl DISP_TEMP6 HALFSIZE add DISP_TEMP6 256
				setarray BAR_SIZE[16] DISP_TEMP6
				rotatespritea 250 25 BAR_SIZE[16] 0 3607 0 DISP_TEMP5 33 -255 0 0 xdim ydim
				}
			else
				{
				set DISP_TEMP5 BAR_SIZE[9]
				ifl DISP_TEMP5 HALFSIZE add DISP_TEMP5 256
				setarray BAR_SIZE[9] DISP_TEMP5
				rotatespritea 250 10 BAR_SIZE[9] 0 3607 0 DISP_TEMP4 33 -255 0 0 xdim ydim

				set DISP_TEMP6 BAR_SIZE[16]
				ifg DISP_TEMP6 QUARTERSIZE sub DISP_TEMP6 128
				setarray BAR_SIZE[16] DISP_TEMP6
				rotatespritea 250 25 BAR_SIZE[16] 0 3607 10 DISP_TEMP5 33 -255 0 0 xdim ydim
				}

			}
		else
			{
			set DISP_TEMP5 BAR_SIZE[9]
			ifg DISP_TEMP5 QUARTERSIZE sub DISP_TEMP5 128
			setarray BAR_SIZE[9] DISP_TEMP5
			set DISP_TEMP6 BAR_SIZE[16]
			ifg DISP_TEMP6 QUARTERSIZE sub DISP_TEMP6 128
			setarray BAR_SIZE[16] DISP_TEMP6
			rotatespritea 250 10 BAR_SIZE[9] 0 3607 10 DISP_TEMP4 33 -255 0 0 xdim ydim
			rotatespritea 250 25 BAR_SIZE[16] 0 3607 10 DISP_TEMP5 33 -255 0 0 xdim ydim
			}
		rotatesprite 250 10 8192 0 WEAPON9_TILE 0 0 0 0 0 xdim ydim
		rotatesprite 250 25 8192 0 WEAPON9_TILE 10 0 0 0 0 xdim ydim
		rotatesprite 252 27 14192 0 DISP_TEMP8 0 0 0 0 0 xdim ydim
		digitalnumberz DIGITALNUM 250 15 DISP_TEMP2 0 4 0 0 0 xdim ydim QUARTERSIZE
		digitalnumberz DIGITALNUM 250 30 DISP_TEMP7 0 2 0 0 0 xdim ydim QUARTERSIZE
		}
	else
		{
		ife CURWEAP 9
			{
			set DISP_TEMP5 BAR_SIZE[9]
			ifl DISP_TEMP5 HALFSIZE add DISP_TEMP5 256
			setarray BAR_SIZE[9] DISP_TEMP5
			rotatespritea 250 10 BAR_SIZE[9] 0 3607 0 DISP_TEMP4 33 -255 0 0 xdim ydim
			}
		else
			{
			set DISP_TEMP5 BAR_SIZE[9]
			ifg DISP_TEMP5 QUARTERSIZE sub DISP_TEMP5 128
			setarray BAR_SIZE[9] DISP_TEMP5
			rotatespritea 250 10 BAR_SIZE[9] 0 3607 10 DISP_TEMP4 33 -255 0 0 xdim ydim
			}
		rotatesprite 250 10 8192 0 WEAPON9_TILE 0 0 0 0 0 xdim ydim
		digitalnumberz DIGITALNUM 250 15 DISP_TEMP2 0 4 0 0 0 xdim ydim QUARTERSIZE
		}
	}

}

ife camerasprite -1
	{
	ifg PICKED_UP 0
		{
		sub PICKED_UP 1
		rotatespritea 300 20 HALFSIZE 0 3607 0 pal 33 -255 0 0 xdim ydim
		rotatesprite 300 20 QUARTERSIZE 0 PICKED_UP_TILE 0 PU1_PAL 0 0 0 xdim ydim
		ifg ITEM_AMOUNT -1 digitalnumberz DIGITALNUM 300 30 ITEM_AMOUNT 0 8 0 0 0 xdim ydim NORMALSIZE
		ife PICKED_UP 1
			{
			set PICKED_UP_2 125
			set PICKED_UP_TILE_2 PICKED_UP_TILE
			set ITEM_AMOUNT_2 ITEM_AMOUNT
			set PU2_PAL PU1_PAL
			}
		}

	ifg PICKED_UP_2 0
		{
		sub PICKED_UP_2 1
		rotatespritea 280 20 HALFSIZE 0 3607 10 pal 33 -255 0 0 xdim ydim
		rotatesprite 280 20 QUARTERSIZE 0 PICKED_UP_TILE_2 0 PU2_PAL 0 0 0 xdim ydim
		ifg ITEM_AMOUNT_2 -1 digitalnumberz DIGITALNUM 280 30 ITEM_AMOUNT_2 0 8 0 0 0 xdim ydim HALFSIZE
		ife PICKED_UP_2 1
			{
			set PICKED_UP_3 125
			set PICKED_UP_TILE_3 PICKED_UP_TILE_2
			set ITEM_AMOUNT_3 ITEM_AMOUNT_2
			set PU3_PAL PU2_PAL
			}
		}

	ifg PICKED_UP_3 0
		{
		sub PICKED_UP_3 1
		rotatespritea 260 20 HALFSIZE 0 3607 20 pal 33 -255 0 0 xdim ydim
		rotatesprite 260 20 QUARTERSIZE 0 PICKED_UP_TILE_3 0 PU3_PAL 0 0 0 xdim ydim
		ifg ITEM_AMOUNT_3 -1 digitalnumberz DIGITALNUM 260 30 ITEM_AMOUNT_3 0 8 0 0 0 xdim ydim HALFSIZE
		}
	}

ifl DISP_KEY 40
	{
	add DISP_KEY 1
	rotatespritea 160 145 14000 0 3605 DISP_KEY DISP_KEY_PAL 0 -255 0 0 xdim ydim
	add WHEEL_ROTATE 2
	ifg WHEEL_ROTATE 2048 set WHEEL_ROTATE 0
	rotatespritea 160 140 8000 WHEEL_ROTATE 3228 DISP_KEY DISP_KEY_PAL 0 -255 0 0 xdim ydim
	set DISP_TEMP DISP_KEY
	add DISP_TEMP 120
	rotatespritea 160 140 20000 0 DISP_KEY_PIC 0 DISP_KEY_PAL 0 DISP_TEMP 0 0 xdim ydim
	}

ifl DISP_RES 40
	{
	set DISP_TEMP DISP_RES
	ifl DISP_TEMP -120 set DISP_TEMP -120
	add DISP_RES 1
	rotatespritea 160 145 14000 0 3605 DISP_TEMP DISP_RES_PAL 0 -255 0 0 xdim ydim
	add WHEEL_ROTATE 2
	ifg WHEEL_ROTATE 2048 set WHEEL_ROTATE 0
	rotatespritea 160 140 8000 WHEEL_ROTATE 3228 DISP_TEMP DISP_RES_PAL 0 -255 0 0 xdim ydim
	set DISP_TEMP DISP_RES
	add DISP_TEMP 120
	rotatespritea 160 140 20000 0 DISP_RES_PIC 0 0 0 DISP_TEMP 0 0 xdim ydim
	}

ifvare CUSENDLEVEL 1
	{
	qgetsysstr 3511 STR_MAPNAME
	gametext 2822 320 20 3511 0 0 0 0 0 xdim ydim
	gametext STARTALPHANUM 25 60 3504 0 10 0 0 0 xdim ydim
	getplayer[THISACTOR].actors_killed DISP_TEMP
	getplayer[THISACTOR].max_actors_killed DISP_TEMP2
	ife DISP_TEMP DISP_TEMP2
		{
		rotatesprite 170 50 HALFSIZE 0 3190 0 125 0 0 0 xdim ydim
		gametext STARTALPHANUM 25 50 3503 0 125 0 0 0 xdim ydim
		digitalnumber 2837 150 50 DISP_TEMP 0 125 0 0 0 xdim ydim
		}
	else
		{
		gametext STARTALPHANUM 25 50 3503 0 124 0 0 0 xdim ydim
		digitalnumber 2837 150 50 DISP_TEMP 0 124 0 0 0 xdim ydim
		}
	subvarvar DISP_TEMP2 DISP_TEMP
	ifl DISP_TEMP2 0 setvar DISP_TEMP2 0
	digitalnumber 2837 145 60 DISP_TEMP2 0 124 0 0 0 xdim ydim

	getplayer[THISACTOR].secret_rooms DISP_TEMP
	getplayer[THISACTOR].max_secret_rooms DISP_TEMP2
	ifg DISP_TEMP2 0
		{
		gametext STARTALPHANUM 25 90 3506 0 10 0 0 0 xdim ydim
		ife DISP_TEMP DISP_TEMP2
			{
			rotatesprite 170 80 HALFSIZE 0 3190 0 125 0 0 0 xdim ydim
			gametext STARTALPHANUM 25 80 3505 0 125 0 0 0 xdim ydim
			digitalnumber 2837 145 80 DISP_TEMP 0 125 0 0 0 xdim ydim
			}
		else
			{
			gametext STARTALPHANUM 25 80 3505 0 124 0 0 0 xdim ydim
			digitalnumber 2837 145 80 DISP_TEMP 0 124 0 0 0 xdim ydim
			}
		setvarvar TEMP3 DISP_TEMP2
		subvarvar TEMP3 DISP_TEMP
		digitalnumber 2837 145 90 TEMP3 0 124 0 0 0 xdim ydim
		}
	gametext STARTALPHANUM 320 160 3509 DISP_PULSE 0 0 0 0 xdim ydim
	}


ifg loading 0
{
sub loading 1
set DISP_TEMP6 30
sub DISP_TEMP6 loading
rotatespritea 40 160 QUARTERSIZE 0 3604 DISP_TEMP6 0 0 -255 0 0 xdim ydim
  getticks curtick
  ife prevtick -1 set DISP_TEMP 0 else
  {
    set DISP_TEMP curtick
    sub DISP_TEMP prevtick
  }
  add DISP_TEMP5 2
  ifg DISP_TEMP5 2048 set DISP_TEMP5 0
  add DISP_TEMP6 10
  rotatespritea 10 135 INVENSIZE DISP_TEMP5 3228 DISP_TEMP6 12 256 -255 0 0 xdim ydim
  sub DISP_TEMP6 10
  sub DISP_TEMP4 4
  ifl DISP_TEMP4 -2048 set DISP_TEMP4 0
  rotatespritea 10 135 QUARTERSIZE DISP_TEMP4 3228 DISP_TEMP6 12 256 -255 0 0 xdim ydim
  set prevtick curtick
}

ifg saving 0
{
set DISP_TEMP6 30
sub DISP_TEMP6 saving
rotatespritea 40 160 QUARTERSIZE 0 3628 DISP_TEMP6 0 0 -255 0 0 xdim ydim
  getticks curtick
  ife prevtick -1 set DISP_TEMP 0 else
  {
    set DISP_TEMP curtick
    sub DISP_TEMP prevtick
  }
  add DISP_TEMP5 2
  ifg DISP_TEMP5 2048 set DISP_TEMP5 0
  add DISP_TEMP6 10
  rotatespritea 10 135 INVENSIZE DISP_TEMP5 3228 DISP_TEMP6 12 256 -255 0 0 xdim ydim
  sub DISP_TEMP6 10
  sub DISP_TEMP4 4
  ifl DISP_TEMP4 -2048 set DISP_TEMP4 0
  rotatespritea 10 135 QUARTERSIZE DISP_TEMP4 3228 DISP_TEMP6 12 256 -255 0 0 xdim ydim
  set prevtick curtick
}

ifl player[].player_par 90
{
  getticks curtick
  ife prevtick -1 set DISP_TEMP 0 else
  {
    set DISP_TEMP curtick
    sub DISP_TEMP prevtick
  }
  add DISP_TEMP5 2
  ifg DISP_TEMP5 2048 set DISP_TEMP5 0
  set DISP_TEMP6 player[].player_par
  add DISP_TEMP6 10
  rotatespritea 10 135 INVENSIZE DISP_TEMP5 3228 DISP_TEMP6 12 256 -255 0 0 xdim ydim
  sub DISP_TEMP4 4
  ifl DISP_TEMP4 -2048 set DISP_TEMP4 0
  rotatespritea 10 135 QUARTERSIZE DISP_TEMP4 3228 player[].player_par 12 256 -255 0 0 xdim ydim
  set prevtick curtick
}

ifg END_LEVEL 0
{
sub END_LEVEL 1

set DISP_TEMP7 END_LEVEL
mulvar DISP_TEMP7 -1
add DISP_TEMP7 60
rotatespritea 160 100 DOUBLESIZE 0 22775 DISP_TEMP7 0 0 -254 0 0 xdim ydim

set DISP_TEMP2 END_LEVEL
sub DISP_TEMP2 30

ife CHAR 0 set DISP_TEMP 3746 else
ife CHAR 1 set DISP_TEMP 3747 else
ife CHAR 2 set DISP_TEMP 3748 else
ife CHAR 3 set DISP_TEMP 3749 else
ife CHAR 4
	{
	ifand CHAR_APP 2 set DISP_TEMP 23834 else
	set DISP_TEMP 3750
	}
else
ife CHAR 5 set DISP_TEMP 3751 else
ife CHAR 6 set DISP_TEMP 3752 else
ife CHAR 7 set DISP_TEMP 3753 else
ife CHAR 13 set DISP_TEMP 16601 else
ife CHAR 14 set DISP_TEMP 20964 else
set DISP_TEMP 22775
ifn DISP_TEMP 22775
{
rotatespritea 160 100 NORMALSIZE 0 DISP_TEMP DISP_TEMP2 0 0 -255 0 0 xdim ydim
}

rotatespritea 40 160 QUARTERSIZE 0 3604 DISP_TEMP2 0 0 -255 0 0 xdim ydim

  getticks curtick
  ife prevtick -1 set DISP_TEMP 0 else
  {
    set DISP_TEMP curtick
    sub DISP_TEMP prevtick
  }
  add WHEEL1 2
  ifg WHEEL1 2048 set WHEEL1 0
  set DISP_TEMP6 END_LEVEL
  sub DISP_TEMP6 30
  ifl DISP_TEMP6 20 set DISP_TEMP6 20
  rotatespritea 10 135 INVENSIZE WHEEL1 3228 DISP_TEMP6 12 256 -255 0 0 xdim ydim
  sub DISP_TEMP6 10
  sub WHEEL2 4
  ifl WHEEL2 -2048 set WHEEL2 0
  // ifl DISP_TEMP6 10 set DISP_TEMP6 10
  rotatespritea 10 135 QUARTERSIZE WHEEL2 3228 DISP_TEMP6 12 256 -255 0 0 xdim ydim
  ife END_LEVEL 1
	{
	savegamevar WHEEL1
	savegamevar WHEEL2
	}
  set prevtick curtick
}

ifg SP_FADEA 0
{
set DISP_TEMP7 254
subvar SP_FADEA 2
sub DISP_TEMP7 SP_FADEA
screenpal SP_R SP_G SP_B DISP_TEMP7
}

ifg SP_FADE 0
{
ifl SP_FADE 0 set SP_FADE 0
subvar SP_FADE 2
screenpal SP_R SP_G SP_B SP_FADE
}

ifg SP_FADEF 0
{
ifl SP_FADEF 0 set SP_FADEF 0
screenpal SP_R SP_G SP_B SP_FADEF
}

endevent

onevent EVENT_DISPLAYCAMERAOSD
set RETURN 1

rotatespritea 25 25 NORMALSIZE 0 2482 0 0 256 -255 0 0 xdim ydim
rotatespritea 25 175 NORMALSIZE 1024 2483 0 0 256 -255 0 0 xdim ydim
rotatespritea 295 175 NORMALSIZE 0 2483 0 0 516 -255 0 0 xdim ydim
rotatespritea 295 25 NORMALSIZE 0 2483 0 0 512 -255 0 0 xdim ydim
rotatesprite 48 24 NORMALSIZE 0 2485 0 0 256 0 0 xdim ydim

ifn PCAMERA 0 // Is the player in control of a security camera?
ifn CAMID -1
	{
	getactorvar[CAMID].EXTRASAVED DISP_TEMP
	ife DISP_TEMP 1
			{

			rotatespritea 20 100 HALFSIZE 1024 2488 0 0 260 -255 0 0 xdim ydim  // Left Arrow
			rotatespritea 300 100 HALFSIZE 0 2488 0 0 512 -255 0 0 xdim ydim  // Right arrow
			rotatespritea 160 20 HALFSIZE 1536 2488 0 0 0 -255 0 0 xdim ydim // Up arrow
			rotatespritea 160 180 HALFSIZE 512 2488 0 0 0 -255 0 0 xdim ydim // Down Arrow

		/* Disabling this for the release; want to see if maybe this is causing the crashes
		ifl input[].avel 0 rotatespritea 20 100 HALFSIZE 1024 2488 0 2 260 -255 0 0 xdim ydim // Make left arrow light up

		ifg input[].avel 0 rotatespritea 300 100 HALFSIZE 0 2488 0 2 512 -255 0 0 xdim ydim // Make right arrow light up


			ifand EXTBITS_PRESS 16 rotatespritea 20 100 HALFSIZE 1024 2488 0 2 260 -255 0 0 xdim ydim // Make left arrow light up
			ifand EXTBITS_PRESS 32 rotatespritea 300 100 HALFSIZE 0 2488 0 2 512 -255 0 0 xdim ydim // Make right arrow light up
			ifand BITS_PRESS 8192 rotatespritea 160 20 HALFSIZE 1536 2488 0 2 0 -255 0 0 xdim ydim // Make up arrow light up
			ifand BITS_PRESS 16384 rotatespritea 160 180 HALFSIZE 512 2488 0 2 0 -255 0 0 xdim ydim // Make down arrow light up
			ifand BITS_PRESS 8 rotatespritea 160 20 HALFSIZE 1536 2488 0 2 0 -255 0 0 xdim ydim // Make up arrow light up
			ifand BITS_PRESS 16 rotatespritea 160 180 HALFSIZE 512 2488 0 2 0 -255 0 0 xdim ydim // Make down arrow light up
		*/

			}
	}

endevent

defstate DISP_crosshair
				getuserdef[].crosshairscale DISP_TEMP3
				mulvarvar DISP_TEMP3 300

				set DISP_ACC GUN_ACCURACY
				ifn ANGLE 0 set DISP_ACC 24
				add DISP_ACC GUN_SPREAD
				divvar DISP_ACC 6

				ifg DISP_VIS DISP_ACC sub DISP_VIS 1
				else ifl DISP_VIS DISP_ACC add DISP_VIS 1

				ife WEAPON_TYPE 0
					{
					set CROSSHAIR_Y 100
					sub CROSSHAIR_Y DISP_VIS
					ifl CROSSHAIR_Y 0 set CROSSHAIR_Y 0
					rotatespritea 160 CROSSHAIR_Y DISP_TEMP3 0 13535 0 player[].palookup 0 -255 0 0 xdim ydim // top part of xhair

					set CROSSHAIR_X 160
					add CROSSHAIR_X DISP_VIS
					ifg CROSSHAIR_X 320 set CROSSHAIR_X 320
					rotatespritea CROSSHAIR_X 100 DISP_TEMP3 0 13536 0 player[].palookup 0 -255 0 0 xdim ydim // right part of xhair

					set CROSSHAIR_Y 100
					add CROSSHAIR_Y DISP_VIS
					ifg CROSSHAIR_Y 200 set CROSSHAIR_Y 200
					rotatespritea 160 CROSSHAIR_Y DISP_TEMP3 0 13537 0 player[].palookup 0 -255 0 0 xdim ydim // bottom part of xhair

					set CROSSHAIR_X 160
					sub CROSSHAIR_X DISP_VIS
					ifl CROSSHAIR_X 0 set CROSSHAIR_X 0
					rotatespritea CROSSHAIR_X 100 DISP_TEMP3 0 13538 0 player[].palookup 0 -255 0 0 xdim ydim	// left part of xhair

					rotatespritea 160 100 DISP_TEMP3 0 5131 0 player[].palookup 0 -255 0 0 xdim ydim // center bit of xhair
					}
				ife WEAPON_TYPE 1
					{
					set CROSSHAIR_Y 100
					sub CROSSHAIR_Y DISP_VIS
					ifl CROSSHAIR_Y 0 set CROSSHAIR_Y 0
					rotatespritea 160 CROSSHAIR_Y DISP_TEMP3 0 13551 0 player[].palookup 0 -255 0 0 xdim ydim // top part of xhair

					set CROSSHAIR_X 160
					add CROSSHAIR_X DISP_VIS
					ifg CROSSHAIR_X 320 set CROSSHAIR_X 320
					rotatespritea CROSSHAIR_X 100 DISP_TEMP3 0 13552 0 player[].palookup 0 -255 0 0 xdim ydim // right part of xhair

					set CROSSHAIR_Y 100
					add CROSSHAIR_Y DISP_VIS
					ifg CROSSHAIR_Y 200 set CROSSHAIR_Y 200
					rotatespritea 160 CROSSHAIR_Y DISP_TEMP3 0 13553 0 player[].palookup 0 -255 0 0 xdim ydim // bottom part of xhair

					set CROSSHAIR_X 160
					sub CROSSHAIR_X DISP_VIS
					ifl CROSSHAIR_X 0 set CROSSHAIR_X 0
					rotatespritea CROSSHAIR_X 100 DISP_TEMP3 0 13554 0 player[].palookup 0 -255 0 0 xdim ydim	// left part of xhair

					rotatespritea 160 100 DISP_TEMP3 0 5131 0 player[].palookup 0 -255 0 0 xdim ydim // center bit of xhair
					}
				ife WEAPON_TYPE 2
					{
					set CROSSHAIR_Y 100
					sub CROSSHAIR_Y DISP_VIS
					ifl CROSSHAIR_Y 0 set CROSSHAIR_Y 0
					rotatespritea 160 CROSSHAIR_Y DISP_TEMP3 0 13525 0 player[].palookup 0 -255 0 0 xdim ydim // top part of xhair

					set CROSSHAIR_X 160
					add CROSSHAIR_X DISP_VIS
					ifg CROSSHAIR_X 320 set CROSSHAIR_X 320
					rotatespritea CROSSHAIR_X 100 DISP_TEMP3 0 13526 0 player[].palookup 0 -255 0 0 xdim ydim // right part of xhair

					set CROSSHAIR_Y 100
					add CROSSHAIR_Y DISP_VIS
					ifg CROSSHAIR_Y 200 set CROSSHAIR_Y 200
					rotatespritea 160 CROSSHAIR_Y DISP_TEMP3 0 13527 0 player[].palookup 0 -255 0 0 xdim ydim // bottom part of xhair

					set CROSSHAIR_X 160
					sub CROSSHAIR_X DISP_VIS
					ifl CROSSHAIR_X 0 set CROSSHAIR_X 0
					rotatespritea CROSSHAIR_X 100 DISP_TEMP3 0 13528 0 player[].palookup 0 -255 0 0 xdim ydim	// left part of xhair

					rotatespritea 160 100 DISP_TEMP3 0 13529 0 0 0 -255 0 0 xdim ydim // center bit of xhair
					}
				ife WEAPON_TYPE 3
					{
					set CROSSHAIR_Y 100
					sub CROSSHAIR_Y DISP_VIS
					ifl CROSSHAIR_Y 0 set CROSSHAIR_Y 0
					rotatespritea 160 CROSSHAIR_Y DISP_TEMP3 0 13551 0 player[].palookup 0 -255 0 0 xdim ydim // top part of xhair

					set CROSSHAIR_X 160
					add CROSSHAIR_X DISP_VIS
					ifg CROSSHAIR_X 320 set CROSSHAIR_X 320
					rotatespritea CROSSHAIR_X 100 DISP_TEMP3 0 13552 0 player[].palookup 0 -255 0 0 xdim ydim // right part of xhair

					set CROSSHAIR_Y 100
					add CROSSHAIR_Y DISP_VIS
					ifg CROSSHAIR_Y 200 set CROSSHAIR_Y 200
					rotatespritea 160 CROSSHAIR_Y DISP_TEMP3 0 13553 0 player[].palookup 0 -255 0 0 xdim ydim // bottom part of xhair

					set CROSSHAIR_X 160
					sub CROSSHAIR_X DISP_VIS
					ifl CROSSHAIR_X 0 set CROSSHAIR_X 0
					rotatespritea CROSSHAIR_X 100 DISP_TEMP3 0 13554 0 player[].palookup 0 -255 0 0 xdim ydim	// left part of xhair

					rotatespritea 160 100 DISP_TEMP3 0 13555 0 7 0 -255 0 0 xdim ydim // center bit of xhair
					}
				ife WEAPON_TYPE 4 rotatespritea 160 100 DISP_TEMP3 0 13524 0 0 0 -255 0 0 xdim ydim
				ife WEAPON_TYPE 5 // bow
					{
					set CROSSHAIR_Y 100
					sub CROSSHAIR_Y DISP_VIS
					ifl CROSSHAIR_Y 0 set CROSSHAIR_Y 0
					rotatespritea 160 CROSSHAIR_Y DISP_TEMP3 0 13520 0 player[].palookup 0 -255 0 0 xdim ydim // top part of xhair

					set CROSSHAIR_X 160
					set CROSSHAIR_Y 100
					add CROSSHAIR_X DISP_VIS
					add CROSSHAIR_Y DISP_VIS
					ifg CROSSHAIR_X 320 set CROSSHAIR_X 320
					rotatespritea CROSSHAIR_X CROSSHAIR_Y DISP_TEMP3 0 13521 0 player[].palookup 0 -255 0 0 xdim ydim // right part of xhair

					set CROSSHAIR_X 160
					set CROSSHAIR_Y 100
					sub CROSSHAIR_X DISP_VIS
					add CROSSHAIR_Y DISP_VIS
					ifl CROSSHAIR_X 0 set CROSSHAIR_X 0
					rotatespritea CROSSHAIR_X CROSSHAIR_Y DISP_TEMP3 0 13522 0 player[].palookup 0 -255 0 0 xdim ydim	// left part of xhair

					rotatespritea 160 100 DISP_TEMP3 0 13523 0 0 0 -255 0 0 xdim ydim // center bit of xhair
					}
				ife WEAPON_TYPE 6 rotatespritea 160 100 DISP_TEMP3 0 13557 0 0 0 -255 0 0 xdim ydim
				ife WEAPON_TYPE 7 // Silver ammo
					{
					set CROSSHAIR_Y 100
					sub CROSSHAIR_Y DISP_VIS
					ifl CROSSHAIR_Y 0 set CROSSHAIR_Y 0
					rotatespritea 160 CROSSHAIR_Y DISP_TEMP3 0 15099 0 player[].palookup 0 -255 0 0 xdim ydim // top part of xhair

					set CROSSHAIR_X 160
					add CROSSHAIR_X DISP_VIS
					ifg CROSSHAIR_X 320 set CROSSHAIR_X 320
					rotatespritea CROSSHAIR_X 100 DISP_TEMP3 0 15100 0 player[].palookup 0 -255 0 0 xdim ydim // right part of xhair

					set CROSSHAIR_Y 100
					add CROSSHAIR_Y DISP_VIS
					ifg CROSSHAIR_Y 200 set CROSSHAIR_Y 200
					rotatespritea 160 CROSSHAIR_Y DISP_TEMP3 0 15101 0 player[].palookup 0 -255 0 0 xdim ydim // bottom part of xhair

					set CROSSHAIR_X 160
					sub CROSSHAIR_X DISP_VIS
					ifl CROSSHAIR_X 0 set CROSSHAIR_X 0
					rotatespritea CROSSHAIR_X 100 DISP_TEMP3 0 15102 0 player[].palookup 0 -255 0 0 xdim ydim	// left part of xhair

					rotatespritea 160 100 DISP_TEMP3 0 15103 0 0 0 -255 0 0 xdim ydim // center bit of xhair
					}
				ife WEAPON_TYPE 8 // Projectile
					{
					set CROSSHAIR_Y 100
					set CROSSHAIR_X 160
					sub CROSSHAIR_Y DISP_VIS
					add CROSSHAIR_X DISP_VIS
					ifl CROSSHAIR_Y 0 set CROSSHAIR_Y 0
					rotatespritea CROSSHAIR_X CROSSHAIR_Y DISP_TEMP3 0 15095 0 player[].palookup 0 -255 0 0 xdim ydim // top part of xhair

					set CROSSHAIR_X 160
					set CROSSHAIR_Y 100
					add CROSSHAIR_X DISP_VIS
					add CROSSHAIR_Y DISP_VIS
					ifg CROSSHAIR_X 320 set CROSSHAIR_X 320
					rotatespritea CROSSHAIR_X CROSSHAIR_Y DISP_TEMP3 0 15096 0 player[].palookup 0 -255 0 0 xdim ydim // right part of xhair

					set CROSSHAIR_X 160
					set CROSSHAIR_Y 100
					sub CROSSHAIR_X DISP_VIS
					add CROSSHAIR_Y DISP_VIS
					ifl CROSSHAIR_X 0 set CROSSHAIR_X 0
					rotatespritea CROSSHAIR_X CROSSHAIR_Y DISP_TEMP3 0 15097 0 player[].palookup 0 -255 0 0 xdim ydim	// left part of xhair

					set CROSSHAIR_Y 100
					set CROSSHAIR_X 160
					sub CROSSHAIR_Y DISP_VIS
					sub CROSSHAIR_X DISP_VIS
					ifl CROSSHAIR_Y 0 set CROSSHAIR_Y 0
					rotatespritea CROSSHAIR_X CROSSHAIR_Y DISP_TEMP3 0 15098 0 player[].palookup 0 -255 0 0 xdim ydim // top part of xhair

					}
				ife WEAPON_TYPE 9 // AP projectile
					{
					set CROSSHAIR_Y 100
					set CROSSHAIR_X 160
					sub CROSSHAIR_Y DISP_VIS
					add CROSSHAIR_X DISP_VIS
					ifl CROSSHAIR_Y 0 set CROSSHAIR_Y 0
					rotatespritea CROSSHAIR_X CROSSHAIR_Y DISP_TEMP3 0 15091 0 player[].palookup 0 -255 0 0 xdim ydim // top part of xhair

					set CROSSHAIR_X 160
					set CROSSHAIR_Y 100
					add CROSSHAIR_X DISP_VIS
					add CROSSHAIR_Y DISP_VIS
					ifg CROSSHAIR_X 320 set CROSSHAIR_X 320
					rotatespritea CROSSHAIR_X CROSSHAIR_Y DISP_TEMP3 0 15092 0 player[].palookup 0 -255 0 0 xdim ydim // right part of xhair

					set CROSSHAIR_X 160
					set CROSSHAIR_Y 100
					sub CROSSHAIR_X DISP_VIS
					add CROSSHAIR_Y DISP_VIS
					ifl CROSSHAIR_X 0 set CROSSHAIR_X 0
					rotatespritea CROSSHAIR_X CROSSHAIR_Y DISP_TEMP3 0 15093 0 player[].palookup 0 -255 0 0 xdim ydim	// left part of xhair

					set CROSSHAIR_Y 100
					set CROSSHAIR_X 160
					sub CROSSHAIR_Y DISP_VIS
					sub CROSSHAIR_X DISP_VIS
					ifl CROSSHAIR_Y 0 set CROSSHAIR_Y 0
					rotatespritea CROSSHAIR_X CROSSHAIR_Y DISP_TEMP3 0 15094 0 player[].palookup 0 -255 0 0 xdim ydim // top part of xhair
					}
				ife WEAPON_TYPE 10 // bow
					{
					set CROSSHAIR_Y 100
					sub CROSSHAIR_Y DISP_VIS
					ifl CROSSHAIR_Y 0 set CROSSHAIR_Y 0
					rotatespritea 160 CROSSHAIR_Y DISP_TEMP3 0 15087 0 player[].palookup 0 -255 0 0 xdim ydim // top part of xhair

					set CROSSHAIR_X 160
					set CROSSHAIR_Y 100
					add CROSSHAIR_X DISP_VIS
					add CROSSHAIR_Y DISP_VIS
					ifg CROSSHAIR_X 320 set CROSSHAIR_X 320
					rotatespritea CROSSHAIR_X CROSSHAIR_Y DISP_TEMP3 0 15088 0 player[].palookup 0 -255 0 0 xdim ydim // right part of xhair

					set CROSSHAIR_X 160
					set CROSSHAIR_Y 100
					sub CROSSHAIR_X DISP_VIS
					add CROSSHAIR_Y DISP_VIS
					ifl CROSSHAIR_X 0 set CROSSHAIR_X 0
					rotatespritea CROSSHAIR_X CROSSHAIR_Y DISP_TEMP3 0 15089 0 player[].palookup 0 -255 0 0 xdim ydim	// left part of xhair

					rotatespritea 160 100 DISP_TEMP3 0 15090 0 0 0 -255 0 0 xdim ydim // center bit of xhair
					}
ends

onevent EVENT_DISPLAYCROSSHAIR
set RETURN -1
ifn camerasprite -1 nullop
else ifg cameraend 0 nullop
else ife HUDON 1 nullop
else ifg MOUSEUP 0 nullop
else ife CHARSELECT 1 nullop
else ife CHAR -1 nullop
else ife MISSIONUP 1 nullop
else ifg END_LEVEL 0 nullop
else ifn DOCUMENT -1 nullop
else ifn INJURED 0 nullop
else ifn CONTROL_VR -1 nullop
else ife HIDE_CROSSHAIR 1 nullop
else ifg mech_startup_sequence 0 nullop
else ife CURWEAP 0 ife temp_weapon 0 nullop
else ifn SCOPE 0 nullop
else
		{
		getuserdef[].crosshair DISP_TEMP
		ifn DISP_TEMP 0 // Crosshairs not disabled?
			{
			ifand GUNFIREMODE 32768
				{
				rotatespritea 160 100 HALFSIZE 0 12287 0 0 0 -255 0 0 xdim ydim
				set DISP_TEMP5 6553600
				set DISP_TEMP4 DISTANCE
				mulvar DISP_TEMP4 32
				add DISP_TEMP5 DISP_TEMP4
				ifg DISP_TEMP5 20971520 set DISP_TEMP5 20971520
				ifl DISP_TEMP5 0 set DISP_TEMP5 0
				rotatesprite16 10485760 DISP_TEMP5 NORMALSIZE 0 12285 0 0 0 0 0 xdim ydim
				}
				else
				ifg SKILL_LEVEL 3
					{
					ifand GUNFIREMODE 16384 state DISP_crosshair
					}
				else
				state DISP_crosshair
			}

		 /*
		ifn hitsprite -1
			{
			geta[hitsprite].picnum DISP_TEMP6
			ife DISP_TEMP6 1405
				{
				ife COOP 1
					{
					geta[hitsprite].yvel DISP_TEMP9
					ife player_ranks[DISP_TEMP9] 0 set DISP_TEMP8 2919 // Rookie
					else ife player_ranks[DISP_TEMP9] 1 set DISP_TEMP8 2923 // Squaddie
					else ife player_ranks[DISP_TEMP9] 2 set DISP_TEMP8 2924 // Sergent
					else ife player_ranks[DISP_TEMP9] 3 set DISP_TEMP8 2925 // Captain
					else ife player_ranks[DISP_TEMP9] 4 set DISP_TEMP8 2926 // Colonel
					else ife player_ranks[DISP_TEMP9] 5 set DISP_TEMP8 2927 // Commander
					rotatesprite 160 130 QUARTERSIZE 0 DISP_TEMP8 0 0 0 0 0 xdim ydim
					}
				}
			}
		*/

		}
endevent

onevent EVENT_DISPLAYWEAPON
ifn sprite[].sectnum -1 ifn sprite[].sectnum 4096 gets[].floorpal TEMP else set TEMP 0
switch TEMP
	case 3
	case 5
	case 9
	case 10
	case 11
	case 12
	case 13
	case 14
	case 15
	case 16
	case 17
	case 18
	case 19
	case 20
	case 21
	case 22
	case 23
	case 24
	case 25
	case 36
	case 37
	case 38
	case 39
	case 40
	case 41
	case 42
	case 43
	case 44
	case 45
	case 46
	case 47
	case 48
	case 49
	set wep_pal 0
	break
	default
	set wep_pal TEMP
	break
endswitch

  ifn ANGLE 0
  {
    set RETURN 1
    break
  }

	ife on_tripwire 1
	{
	set DISP_TEMP 190
	getp[].horiz DISP_TEMP2
	divvar DISP_TEMP2 5 add DISP_TEMP DISP_TEMP2
	rotatesprite 240 DISP_TEMP NORMALSIZE 0 CKNEE shade pal 0 0 0 xdim ydim
	rotatesprite 80 DISP_TEMP NORMALSIZE 1024 CKNEE shade pal 4 0 0 xdim ydim
	}


 ifn using_minigun -1 // Draw minigun
	{
		ife player[].over_shoulder_on 0
		{

		ifg firing_count 96 myospal 160 80 3668 shade 1 pal else
		ifg firing_count 48 myospal 160 80 3668 shade 33 pal

		ifand BITS_PRESS 4 ifg current_sg_ammo 0
		{
		displayrandvar M60FLASH 2048
		rotatespritea 160 130 14000 M60FLASH 16115 0 0 0 -255 0 0 xdim ydim
		rotatesprite 160 180 NORMALSIZE 0 8404 shade pal 0 0 0 xdim ydim
		}
		else
		rotatesprite 160 180 NORMALSIZE 0 8402 shade pal 0 0 0 xdim ydim


		digitalnumber 2472 160 170 current_sg_ammo 0 0 0 0 0 xdim ydim
		}
	}

ifn using_50cal -1 // Draw 50 cal
	{
	ife player[].over_shoulder_on 0
		{
		ifand BITS_PRESS 4 ifg firing_count 3
			{
			state random_AR_flash
			rotatespritea 169 130 27000 0 M60FLASH 0 0 0 -255 0 0 xdim ydim
			rotatesprite 169 163 NORMALSIZE 0 22444 0 pal 0 0 0 xdim ydim
			rotatesprite 169 163 NORMALSIZE 0 22445 0 pal 0 0 0 xdim ydim
			qsprintf 570 571 current_sg_ammo
			screentext 2472 100 100 NORMALSIZE 0 0 570 0 1 0 -255 5 16 0 0 524290 0 0 xdim ydim
			}
		else
			{
			rotatesprite 169 160 NORMALSIZE 0 22443 shade pal 0 0 0 xdim ydim
			rotatesprite 169 160 NORMALSIZE 0 22445 0 pal 0 0 0 xdim ydim
			qsprintf 570 571 current_sg_ammo
			screentext 2472 100 97 NORMALSIZE 0 0 570 0 1 0 -255 5 16 0 0 524290 0 0 xdim ydim
			}
		// digitalnumber 2472 100 97 current_sg_ammo 0 1 0 0 0 xdim ydim
		}
	}

ife CHAR -1 set RETURN 1

  	ifn player_using_horse -1
		{
		  geta[player_using_horse].ang DISP_TEMP2
		  getp[].ang DISP_TEMP3
		  getincangle DISP_TEMP4 DISP_TEMP2 DISP_TEMP3
		  ifg DISP_TEMP4 -375
		   ifl DISP_TEMP4 375
			{
			 geta[player_using_horse].ang e1
			  getp[].ang e2
			  sub e1 e2
			  sin e3 e1
			  cos e4 e1
			  mulvar e3 160
			  ifn e4 0 divvarvar e3 e4
			  add e3 160
			  // set e1 0
			  set BIKEHUD_X e3
			  getp[].horiz BIKEHUD_Y
			  add BIKEHUD_Y 124

				getactorvar[player_using_horse].forward_accelerate DISP_TEMP
				set DISP_TEMP2 player[].player_par
				set DISP_TEMP4 THISACTOR
				ifand DISP_TEMP4 1 add DISP_TEMP4 4096
				add DISP_TEMP2 DISP_TEMP4
				shiftvarl DISP_TEMP2 6
				sin DISP_TEMP DISP_TEMP2
				getactorvar[player_using_horse].forward_accelerate DISP_TEMP5
				ifl DISP_TEMP5 200 set DISP_TEMP 0
				else ifl DISP_TEMP5 400 shiftvarr DISP_TEMP 16
				else ifl DISP_TEMP5 800 shiftvarr DISP_TEMP 14
				else ifl DISP_TEMP5 1000 shiftvarr DISP_TEMP 12
				else shiftvarr DISP_TEMP 10
				sub BIKEHUD_Y DISP_TEMP

			  set BIKEZ 16777216
			  getactorvar[player_using_horse].forward_accelerate e1
			  ifl e1 200 set e1 200
			  divvar e1 100
			  ifn e1 0 divvarvar BIKEZ e1
			  ifg BIKEZ 55000 set BIKEZ 55000
			  rotatesprite BIKEHUD_X BIKEHUD_Y BIKEZ 0 21766 shade pal 0 0 0 xdim ydim
			  }
		}

 ifg PLAYERONTHEBIKE 0 state theebikehudstate

  ife player_in_vehicle 1 set RETURN 1

  ifn CONTROL_VR -1 set RETURN 1

   // ife player[].weapon_pos 10 { set RETURN 1 break }

 ifn MISSIONUP 0 { set RETURN 1 break }



ifn sprite[].sectnum -1
ifn sprite[].sectnum 4096
	{
	gets[].floorpal TEMP
	ife TEMP 3
	ife TEMP 5
	ife TEMP 9
	ife TEMP 10
	ife TEMP 11
	ife TEMP 12
	ife TEMP 13
	ife TEMP 14
	ife TEMP 15
	ife TEMP 16
	ife TEMP 17
	ife TEMP 18
	ife TEMP 19
	ife TEMP 20
	ife TEMP 21
	ife TEMP 22
	ife TEMP 23
	ife TEMP 24
	ife TEMP 25
	set pal 0
	else
	set pal TEMP

	}

ife CHAR 3 ife pal 0 set pal 11
ife CHAR 12 ife pal 0 set pal 3

switch ROUNDHOUSE_KICK
case 27
 break
case 0
  rotatesprite 120 200 NORMALSIZE 0 CKNEE shade pal 0 0 0 xdim ydim
 break
case 1
  rotatesprite 130 190 NORMALSIZE 0 CKNEE shade pal 0 0 0 xdim ydim
 break
case 2
  rotatesprite 140 180 NORMALSIZE 0 CKNEE shade pal 0 0 0 xdim ydim
 break
case 3
  rotatesprite 150 170 NORMALSIZE 0 CKNEE shade pal 0 0 0 xdim ydim
 break
case 4
  set DISP_TEMP3 CKNEE
  add DISP_TEMP3 1
  rotatesprite 140 180 NORMALSIZE 0 DISP_TEMP3 shade pal 0 0 0 xdim ydim
break
case 5
  set DISP_TEMP3 CKNEE
  add DISP_TEMP3 1
  rotatesprite 150 175 NORMALSIZE 0 DISP_TEMP3 shade pal 0 0 0 xdim ydim
 break
case 6
  set DISP_TEMP3 CKNEE
  add DISP_TEMP3 1
  rotatesprite 160 170 NORMALSIZE 0 DISP_TEMP3 shade pal 0 0 0 xdim ydim
break
case 7
  set DISP_TEMP3 CKNEE
  add DISP_TEMP3 1
  rotatesprite 170 165 NORMALSIZE 0 DISP_TEMP3 shade pal 0 0 0 xdim ydim
break
case 8
  set DISP_TEMP3 CKNEE
  add DISP_TEMP3 1
  rotatesprite 180 160 NORMALSIZE 0 DISP_TEMP3 shade pal 0 0 0 xdim ydim
break
case 9
  set DISP_TEMP3 CKNEE
  add DISP_TEMP3 1
  rotatesprite 190 155 NORMALSIZE 0 DISP_TEMP3 shade pal 0 0 0 xdim ydim
break
case 10
  set DISP_TEMP3 CKNEE
  add DISP_TEMP3 1
  rotatesprite 200 155 NORMALSIZE 0 DISP_TEMP3 shade pal 0 0 0 xdim ydim
break
case 11
  set DISP_TEMP3 CKNEE
  add DISP_TEMP3 1
  rotatesprite 210 150 NORMALSIZE 0 DISP_TEMP3 shade pal 0 0 0 xdim ydim
break
case 12
  set DISP_TEMP3 CKNEE
  add DISP_TEMP3 1
  rotatesprite 220 160 NORMALSIZE 0 DISP_TEMP3 shade pal 0 0 0 xdim ydim
break
case 13
  set DISP_TEMP3 CKNEE
  add DISP_TEMP3 1
  rotatesprite 230 170 NORMALSIZE 0 DISP_TEMP3 shade pal 0 0 0 xdim ydim
break
case 14
  set DISP_TEMP3 CKNEE
  rotatesprite 250 175 NORMALSIZE 0 DISP_TEMP3 shade pal 0 0 0 xdim ydim
break
case 15
  set DISP_TEMP3 CKNEE
  rotatesprite 260 180 NORMALSIZE 0 DISP_TEMP3 shade pal 0 0 0 xdim ydim
break
case 16
  set DISP_TEMP3 CKNEE
  rotatesprite 270 190 NORMALSIZE 0 DISP_TEMP3 shade pal 0 0 0 xdim ydim
break
endswitch

ifg SLIDE_KICK 0
{
set TEMP2 knockbackang
geta[].ang TEMP4
sub TEMP4 TEMP2
divvar TEMP4 2
set TEMP5 200
sub TEMP5 TEMP4

getp[].horiz TEMP2
ifl TEMP2 50 set TEMP2 50
add TEMP2 100

clamp TEMP2 180 350
clamp TEMP5 0 420
}

switch SLIDE_KICK
case 27
 break
case 0
case 22
  rotatesprite TEMP5 TEMP2 NORMALSIZE 0 CKNEE shade pal 0 0 0 xdim ydim
 break
case 1
case 21
  rotatesprite TEMP5 TEMP2 NORMALSIZE 0 CKNEE shade pal 0 0 0 xdim ydim
 break
case 2
case 20
  rotatesprite TEMP5 TEMP2 NORMALSIZE 0 CKNEE shade pal 0 0 0 xdim ydim
 break
case 3
case 19
  rotatesprite TEMP5 TEMP2 NORMALSIZE 0 CKNEE shade pal 0 0 0 xdim ydim
 break
case 4
case 18
  rotatesprite TEMP5 TEMP2 NORMALSIZE 0 CKNEE shade pal 0 0 0 xdim ydim
 break
case 5
case 6
case 7
case 8
case 9
case 10
case 11
case 12
case 13
case 14
case 15
case 16
case 17
  set DISP_TEMP3 CKNEE
  add DISP_TEMP3 1
  add TEMP2 5
  rotatesprite TEMP5 TEMP2 NORMALSIZE -128 DISP_TEMP3 shade pal 0 0 0 xdim ydim
 break
endswitch

switch TWIRL_KICK
case 0
case 1
  rotatesprite 260 195 NORMALSIZE 1024 CKNEE shade pal 4 0 0 xdim ydim
 break
case 2
case 3
case 4
case 5
case 6
case 7
case 8
  set DISP_TEMP3 CKNEE
  add DISP_TEMP3 1
  rotatesprite 260 205 NORMALSIZE 1024 DISP_TEMP3 shade pal 4 0 0 xdim ydim
 break
case 9
  set DISP_TEMP3 CKNEE
  add DISP_TEMP3 1
  rotatesprite 250 200 NORMALSIZE 1024 DISP_TEMP3 shade pal 4 0 0 xdim ydim
 break
case 10
  set DISP_TEMP3 CKNEE
  add DISP_TEMP3 1
  rotatesprite 240 195 NORMALSIZE 1024 DISP_TEMP3 shade pal 4 0 0 xdim ydim
 break
case 11
  set DISP_TEMP3 CKNEE
  add DISP_TEMP3 1
  rotatesprite 230 190 NORMALSIZE 1024 DISP_TEMP3 shade pal 4 0 0 xdim ydim
 break
case 12
  set DISP_TEMP3 CKNEE
  add DISP_TEMP3 1
  rotatesprite 220 185 NORMALSIZE 1024 DISP_TEMP3 shade pal 4 0 0 xdim ydim
 break
case 13
  rotatesprite 200 180 NORMALSIZE 1024 CKNEE shade pal 4 0 0 xdim ydim
 break
case 14
  rotatesprite 180 180 NORMALSIZE 1024 CKNEE shade pal 4 0 0 xdim ydim
 break
case 15
case 16
case 17
case 18
case 19
case 20
 break
endswitch

switch SPIN_KICK
case 19
case 20
 break
case 0
case 1
case 2
case 3
case 4
case 5
case 6
case 7
case 8
  rotatesprite 260 195 NORMALSIZE 1024 CKNEE shade pal 4 0 0 xdim ydim
 break
case 9
  rotatesprite 250 190 NORMALSIZE 1024 CKNEE shade pal 4 0 0 xdim ydim
 break
case 10
  rotatesprite 240 185 NORMALSIZE 1024 CKNEE shade pal 4 0 0 xdim ydim
 break
case 11
  rotatesprite 230 180 NORMALSIZE 1024 CKNEE shade pal 4 0 0 xdim ydim
 break
case 12
  rotatesprite 220 175 NORMALSIZE 1024 CKNEE shade pal 4 0 0 xdim ydim
 break
case 13
  rotatesprite 200 170 NORMALSIZE 1024 CKNEE shade pal 4 0 0 xdim ydim
 break
case 14
  rotatesprite 180 170 NORMALSIZE 1024 CKNEE shade pal 4 0 0 xdim ydim
 break
case 15
case 16
  set DISP_TEMP3 CKNEE
  add DISP_TEMP3 1
  rotatesprite 160 160 NORMALSIZE 1024 DISP_TEMP3 shade pal 4 0 0 xdim ydim
 break
case 17
  rotatesprite 160 170 NORMALSIZE 1024 CKNEE shade pal 4 0 0 xdim ydim
 break
case 18
  rotatesprite 160 180 NORMALSIZE 1024 CKNEE shade pal 4 0 0 xdim ydim
 break
endswitch

switch DROP_KICK
case 0
case 1
case 2
case 3
case 4
case 15
case 16
case 17
    set x 200
  set y 183
  rotatesprite x y NORMALSIZE 0 CKNEE shade pal 0 0 0 xdim ydim
  sub x 100
  sub y 10
  rotatesprite x y NORMALSIZE 1024 CKNEE shade pal 4 0 0 xdim ydim
break
case 5
case 6
case 7
case 8
case 9
case 10
case 11
case 12
case 13
case 14
  set DISP_TEMP3 CKNEE
  add DISP_TEMP3 1
    set x 160
  set y 183
  rotatesprite x y NORMALSIZE 128 DISP_TEMP3 shade pal 0 0 0 xdim ydim
  sub x 20
  sub y 10
  rotatesprite x y NORMALSIZE 1152 DISP_TEMP3 shade pal 4 0 0 xdim ydim
 break
endswitch

switch FLYING_KICK
case 0
case 1
case 2
case 3
case 4
case 15
case 16
case 17
  set x 140
  set y 183
  rotatesprite x y NORMALSIZE 0 CKNEE shade pal 0 0 0 xdim ydim
break
case 5
case 6
case 7
case 8
case 9
case 10
case 11
case 12
case 13
case 14
  set x 150
  set y 185
  set DISP_TEMP3 CKNEE
  add DISP_TEMP3 1
  rotatesprite x y NORMALSIZE 128 DISP_TEMP3 shade pal 0 0 0 xdim ydim
 break
endswitch

  ife CHAR 0
	{
	ife TIMEZONE 2 set DISP_TEMP3 11039 else
	ifand CHAR_APP 1 set DISP_TEMP3 11131
	else set DISP_TEMP3 11039
	}
	else
  ife CHAR 2 set DISP_TEMP3 11043 else
  ife CHAR 3 set DISP_TEMP3 11044 else
  ife CHAR 4
	{
	ifand CHAR_APP 2 set DISP_TEMP3 23868
	else set DISP_TEMP3 11038
	}
	else
  ife CHAR 5 set DISP_TEMP3 11038 else
  ife CHAR 6 set DISP_TEMP3 11040 else
  ife CHAR 7 set DISP_TEMP3 11041 else
  ife CHAR 9 set DISP_TEMP3 11038 else
  ife CHAR 10 set DISP_TEMP3 11042 else
  ife CHAR 11 set DISP_TEMP3 11043 else
  ife CHAR 12 set DISP_TEMP3 11041 else
  ife CHAR 13 set DISP_TEMP3 16437 else
  ife CHAR 14 set DISP_TEMP3 20804 else
  set DISP_TEMP3 11038

switch UPPER_CUT
case 20
break
default
  set x 170
  set y 440
  set DISP_TEMP4 UPPER_CUT
  mulvar DISP_TEMP4 18
  sub y DISP_TEMP4
  ifg UPPER_CUT 14 set DISP_TEMP8 96 else set DISP_TEMP8 0
  rotatesprite x y NORMALSIZE DISP_TEMP8 DISP_TEMP3 shade pal 0 0 0 xdim ydim
break
endswitch

switch QUICKK
case 14
 break
case 0
case 1
case 2
case 3
case 4
  set x 110
  add x weapon_xoffset
  sub x looking_angSR1

  set y 283
  add y looking_arc
  sub y gun_pos
  set DISP_TEMP4 QUICKK
   mulvar DISP_TEMP4 4
  sub y DISP_TEMP4
  rotatesprite x y NORMALSIZE 1024 CKNEE shade pal 4 0 0 xdim ydim
break
case 5
case 8
  set x 150
  add x weapon_xoffset
  sub x looking_angSR1

  set y 215
  add y looking_arc
  sub y gun_pos
  set DISP_TEMP3 CKNEE
  add DISP_TEMP3 1
  rotatesprite x y NORMALSIZE 1024 DISP_TEMP3 shade pal 4 0 0 xdim ydim
 break
case 6
case 7
  set x 150
  add x weapon_xoffset
  sub x looking_angSR1

  set y 215
  add y looking_arc
  sub y gun_pos
  set DISP_TEMP3 CKNEE
  add DISP_TEMP3 1
  rotatesprite x y 63556 1024 DISP_TEMP3 shade pal 4 0 0 xdim ydim
 break
case 9
case 10
case 11
case 12
case 13
  set x 110
  add x weapon_xoffset
  sub x looking_angSR1

  set y 233
  add y looking_arc
  sub y gun_pos
  set DISP_TEMP4 QUICKK
  mulvar DISP_TEMP4 4
  add y DISP_TEMP4
  rotatesprite x y NORMALSIZE 1024 CKNEE shade pal 4 0 0 xdim ydim
break
endswitch

ife player_in_vehicle 0
	{
	ife player[].hard_landing 5
		{
		set QUICKK 14
		set DISP_TEMP 210
		getp[].horiz DISP_TEMP2
		divvar DISP_TEMP2 5 add DISP_TEMP DISP_TEMP2
		rotatesprite 230 DISP_TEMP NORMALSIZE 0 CKNEE shade pal 0 0 0 xdim ydim
		rotatesprite 90 DISP_TEMP NORMALSIZE 1024 CKNEE shade pal 4 0 0 xdim ydim
		}

	ifg player[].falling_counter 10
		{
		set QUICKK 14
		set DISP_TEMP 210
		getp[].horiz DISP_TEMP2
		divvar DISP_TEMP2 5 add DISP_TEMP DISP_TEMP2
		rotatesprite 230 DISP_TEMP NORMALSIZE 0 CKNEE shade pal 0 0 0 xdim ydim
		rotatesprite 90 DISP_TEMP NORMALSIZE 1024 CKNEE shade pal 4 0 0 xdim ydim
		}
	}


  ife CHAR 0 set DISP_TEMP3 12211 else
  ife CHAR 1 set DISP_TEMP3 12217 else
  ife CHAR 2 set DISP_TEMP3 12215 else
  ife CHAR 3 set DISP_TEMP3 12212 else
  ife CHAR 4
	{
	ifand CHAR_APP 2 set DISP_TEMP3 12220 else
	set DISP_TEMP3 12218
	}
	else
  ife CHAR 5 set DISP_TEMP3 12210 else
  ife CHAR 6 set DISP_TEMP3 12216 else
  ife CHAR 7 set DISP_TEMP3 12214 else
  ife CHAR 9 set DISP_TEMP3 12210 else
  ife CHAR 10 set DISP_TEMP3 12213 else
  ife CHAR 11 set DISP_TEMP3 12215 else
  ife CHAR 12 set DISP_TEMP3 12219 else
  ife CHAR 13 set DISP_TEMP3 16444 else
  ife CHAR 14 set DISP_TEMP3 20875 else
  set DISP_TEMP3 12210

  ife GOT_KNIFE 1 set MELEE_GRAPHIC 12208 else // standard knife
  ife GOT_KNIFE 2 set MELEE_GRAPHIC 12207 // silver knife

ifn sprite[].sectnum -1 ifn sprite[].sectnum 4096
gets[].floorpal pal

ife GOT_KNIFE 3 // combat shovel
switch KNIFE_ATTACK
case 27
 break
case 0
  rotatesprite 20 200 50000 0 12209 shade pal 0 0 0 xdim ydim
 break
case 1
  rotatesprite 20 200 50000 0 12209 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 40 190 50000 0 12209 shade pal 0 0 0 xdim ydim
 break
case 2
  rotatesprite 20 200 50000 0 12209 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 40 190 50000 0 12209 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 60 180 50000 0 12209 shade pal 0 0 0 xdim ydim
 break
case 3
  rotatesprite 40 190 50000 0 12209 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 60 180 50000 0 12209 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 80 170 50000 0 12209 shade pal 0 0 0 xdim ydim
 break
case 4
  rotatesprite 60 180 50000 0 12209 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 80 170 50000 0 12209 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 100 170 50000 0 12209 shade pal 0 0 0 xdim ydim
break
case 5
  rotatesprite 80 170 50000 0 12209 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 100 170 50000 0 12209 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 120 170 50000 0 12209 shade pal 0 0 0 xdim ydim
 break
case 6
  rotatesprite 100 170 50000 0 12209 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 120 170 50000 0 12209 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 140 170 50000 0 12209 shade pal 0 0 0 xdim ydim
break
case 7
  rotatesprite 120 170 50000 0 12209 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 140 170 50000 0 12209 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 160 170 50000 0 12209 shade pal 0 0 0 xdim ydim
break
case 8
  rotatesprite 140 170 50000 0 12209 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 160 170 50000 0 12209 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 180 160 50000 0 12209 shade pal 0 0 0 xdim ydim
break
case 9
  rotatesprite 160 170 50000 0 12209 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 180 160 50000 0 12209 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 200 160 50000 0 12209 shade pal 0 0 0 xdim ydim
break
case 10
  rotatesprite 180 160 50000 0 12209 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 200 160 50000 0 12209 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 220 160 50000 0 12209 shade pal 0 0 0 xdim ydim
break
case 11
  rotatesprite 200 160 50000 0 12209 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 220 160 50000 0 12209 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 240 160 50000 0 12209 shade pal 0 0 0 xdim ydim
break
case 12
  rotatesprite 220 160 50000 0 12209 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 240 160 50000 0 12209 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 260 160 50000 0 12209 shade pal 0 0 0 xdim ydim
break
case 13
  rotatesprite 240 160 50000 0 12209 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 260 160 50000 0 12209 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 280 170 50000 0 12209 shade pal 0 0 0 xdim ydim
break
case 14
  rotatesprite 260 160 50000 0 12209 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 280 170 50000 0 12209 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 300 170 50000 0 12209 shade pal 0 0 0 xdim ydim
break
case 15
  rotatesprite 280 170 50000 0 12209 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 300 170 50000 0 12209 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 320 180 50000 0 12209 shade pal 0 0 0 xdim ydim
break
case 16
  rotatesprite 300 170 50000 0 12209 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 320 180 50000 0 12209 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 340 190 50000 0 12209 shade pal 0 0 0 xdim ydim
break
endswitch
else
switch KNIFE_ATTACK
case 27
 break
case 0
  rotatesprite 20 200 NORMALSIZE 0 DISP_TEMP3 shade pal 0 0 0 xdim ydim
  rotatesprite 20 200 NORMALSIZE 0 MELEE_GRAPHIC shade pal 0 0 0 xdim ydim
 break
case 1
  rotatesprite 20 200 NORMALSIZE 0 DISP_TEMP3 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 40 190 NORMALSIZE 0 DISP_TEMP3 shade pal 0 0 0 xdim ydim

  rotatesprite 20 200 NORMALSIZE 0 MELEE_GRAPHIC shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 40 190 NORMALSIZE 0 MELEE_GRAPHIC shade pal 0 0 0 xdim ydim
 break
case 2
  rotatesprite 20 200 NORMALSIZE 0 DISP_TEMP3 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 40 190 NORMALSIZE 0 DISP_TEMP3 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 60 180 NORMALSIZE 0 DISP_TEMP3 shade pal 0 0 0 xdim ydim

  rotatesprite 20 200 NORMALSIZE 0 MELEE_GRAPHIC shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 40 190 NORMALSIZE 0 MELEE_GRAPHIC shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 60 180 NORMALSIZE 0 MELEE_GRAPHIC shade pal 0 0 0 xdim ydim
 break
case 3
  rotatesprite 40 190 NORMALSIZE 0 DISP_TEMP3 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 60 180 NORMALSIZE 0 DISP_TEMP3 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 80 170 NORMALSIZE 0 DISP_TEMP3 shade pal 0 0 0 xdim ydim

  rotatesprite 40 190 NORMALSIZE 0 MELEE_GRAPHIC shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 60 180 NORMALSIZE 0 MELEE_GRAPHIC shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 80 170 NORMALSIZE 0 MELEE_GRAPHIC shade pal 0 0 0 xdim ydim
 break
case 4
  rotatesprite 60 180 NORMALSIZE 0 DISP_TEMP3 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 80 170 NORMALSIZE 0 DISP_TEMP3 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 100 170 NORMALSIZE 0 DISP_TEMP3 shade pal 0 0 0 xdim ydim

  rotatesprite 60 180 NORMALSIZE 0 MELEE_GRAPHIC shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 80 170 NORMALSIZE 0 MELEE_GRAPHIC shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 100 170 NORMALSIZE 0 MELEE_GRAPHIC shade pal 0 0 0 xdim ydim
break
case 5
  rotatesprite 80 170 NORMALSIZE 0 DISP_TEMP3 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 100 170 NORMALSIZE 0 DISP_TEMP3 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 120 170 NORMALSIZE 0 DISP_TEMP3 shade pal 0 0 0 xdim ydim

  rotatesprite 80 170 NORMALSIZE 0 MELEE_GRAPHIC shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 100 170 NORMALSIZE 0 MELEE_GRAPHIC shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 120 170 NORMALSIZE 0 MELEE_GRAPHIC shade pal 0 0 0 xdim ydim
 break
case 6
  rotatesprite 100 170 NORMALSIZE 0 DISP_TEMP3 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 120 170 NORMALSIZE 0 DISP_TEMP3 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 140 170 NORMALSIZE 0 DISP_TEMP3 shade pal 0 0 0 xdim ydim

  rotatesprite 100 170 NORMALSIZE 0 MELEE_GRAPHIC shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 120 170 NORMALSIZE 0 MELEE_GRAPHIC shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 140 170 NORMALSIZE 0 MELEE_GRAPHIC shade pal 0 0 0 xdim ydim
break
case 7
  rotatesprite 120 170 NORMALSIZE 0 DISP_TEMP3 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 140 170 NORMALSIZE 0 DISP_TEMP3 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 160 170 NORMALSIZE 0 DISP_TEMP3 shade pal 0 0 0 xdim ydim

  rotatesprite 120 170 NORMALSIZE 0 MELEE_GRAPHIC shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 140 170 NORMALSIZE 0 MELEE_GRAPHIC shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 160 170 NORMALSIZE 0 MELEE_GRAPHIC shade pal 0 0 0 xdim ydim
break
case 8
  rotatesprite 140 170 NORMALSIZE 0 DISP_TEMP3 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 160 170 NORMALSIZE 0 DISP_TEMP3 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 180 160 NORMALSIZE 0 DISP_TEMP3 shade pal 0 0 0 xdim ydim

  rotatesprite 140 170 NORMALSIZE 0 MELEE_GRAPHIC shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 160 170 NORMALSIZE 0 MELEE_GRAPHIC shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 180 160 NORMALSIZE 0 MELEE_GRAPHIC shade pal 0 0 0 xdim ydim
break
case 9
  rotatesprite 160 170 NORMALSIZE 0 DISP_TEMP3 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 180 160 NORMALSIZE 0 DISP_TEMP3 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 200 160 NORMALSIZE 0 DISP_TEMP3 shade pal 0 0 0 xdim ydim

  rotatesprite 160 170 NORMALSIZE 0 MELEE_GRAPHIC shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 180 160 NORMALSIZE 0 MELEE_GRAPHIC shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 200 160 NORMALSIZE 0 MELEE_GRAPHIC shade pal 0 0 0 xdim ydim
break
case 10
  rotatesprite 180 160 NORMALSIZE 0 DISP_TEMP3 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 200 160 NORMALSIZE 0 DISP_TEMP3 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 220 160 NORMALSIZE 0 DISP_TEMP3 shade pal 0 0 0 xdim ydim

  rotatesprite 180 160 NORMALSIZE 0 MELEE_GRAPHIC shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 200 160 NORMALSIZE 0 MELEE_GRAPHIC shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 220 160 NORMALSIZE 0 MELEE_GRAPHIC shade pal 0 0 0 xdim ydim
break
case 11
  rotatesprite 200 160 NORMALSIZE 0 DISP_TEMP3 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 220 160 NORMALSIZE 0 DISP_TEMP3 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 240 160 NORMALSIZE 0 DISP_TEMP3 shade pal 0 0 0 xdim ydim

  rotatesprite 200 160 NORMALSIZE 0 MELEE_GRAPHIC shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 220 160 NORMALSIZE 0 MELEE_GRAPHIC shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 240 160 NORMALSIZE 0 MELEE_GRAPHIC shade pal 0 0 0 xdim ydim
break
case 12
  rotatesprite 220 160 NORMALSIZE 0 DISP_TEMP3 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 240 160 NORMALSIZE 0 DISP_TEMP3 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 260 160 NORMALSIZE 0 DISP_TEMP3 shade pal 0 0 0 xdim ydim

  rotatesprite 220 160 NORMALSIZE 0 MELEE_GRAPHIC shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 240 160 NORMALSIZE 0 MELEE_GRAPHIC shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 260 160 NORMALSIZE 0 MELEE_GRAPHIC shade pal 0 0 0 xdim ydim
break
case 13
  rotatesprite 240 160 NORMALSIZE 0 DISP_TEMP3 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 260 160 NORMALSIZE 0 DISP_TEMP3 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 280 170 NORMALSIZE 0 DISP_TEMP3 shade pal 0 0 0 xdim ydim

  rotatesprite 240 160 NORMALSIZE 0 MELEE_GRAPHIC shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 260 160 NORMALSIZE 0 MELEE_GRAPHIC shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 280 170 NORMALSIZE 0 MELEE_GRAPHIC shade pal 0 0 0 xdim ydim
break
case 14
  rotatesprite 260 160 NORMALSIZE 0 DISP_TEMP3 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 280 170 NORMALSIZE 0 DISP_TEMP3 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 300 170 NORMALSIZE 0 DISP_TEMP3 shade pal 0 0 0 xdim ydim

  rotatesprite 260 160 NORMALSIZE 0 MELEE_GRAPHIC shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 280 170 NORMALSIZE 0 MELEE_GRAPHIC shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 300 170 NORMALSIZE 0 MELEE_GRAPHIC shade pal 0 0 0 xdim ydim
break
case 15
  rotatesprite 280 170 NORMALSIZE 0 DISP_TEMP3 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 300 170 NORMALSIZE 0 DISP_TEMP3 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 320 180 NORMALSIZE 0 DISP_TEMP3 shade pal 0 0 0 xdim ydim

  rotatesprite 280 170 NORMALSIZE 0 MELEE_GRAPHIC shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 300 170 NORMALSIZE 0 MELEE_GRAPHIC shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 320 180 NORMALSIZE 0 MELEE_GRAPHIC shade pal 0 0 0 xdim ydim
break
case 16
  rotatesprite 300 170 NORMALSIZE 0 DISP_TEMP3 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 320 180 NORMALSIZE 0 DISP_TEMP3 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 340 190 NORMALSIZE 0 DISP_TEMP3 shade pal 0 0 0 xdim ydim

  rotatesprite 300 170 NORMALSIZE 0 MELEE_GRAPHIC shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 320 180 NORMALSIZE 0 MELEE_GRAPHIC shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 340 190 NORMALSIZE 0 MELEE_GRAPHIC shade pal 0 0 0 xdim ydim
break
endswitch

geta[PLAYER_IDENTITY].shade shade
ifn sprite[].sectnum -1 ifn sprite[].sectnum 4096
gets[].floorpal pal else set pal 0

ife CHAR 4 // Displays pitchfork if you're playing Sang and using his flying pitchfork
ife player_using_fighter -1
ife player_using_hovertank -1
ife player_using_VR_tank -1
{
			ifand EXTBITS_PRESS 4 set TEMP3 6369 else
			ifand EXTBITS_PRESS 8 set TEMP3 6367 else
			ifand EXTBITS_PRESS 32 set TEMP3 6369 else
			ifand EXTBITS_PRESS 16 set TEMP3 6367 else set TEMP3 6368
			set x 160
			sub x WEAPSWAYX
		ifn player[].jetpack_on 0 rotatesprite x 190 NORMALSIZE 0 TEMP3 shade pal 0 0 0 xdim ydim
}

ife currentweapon 0
{
getuserdef[].drawweapon DISP_TEMP
ife DISP_TEMP 2
ifn temp_weapon 0 // temp weapon icons
	set DISP_TEMP2 WEAPON0_TILE
	else
ife temp_weapon 0
ife UPPER_CUT 20
	{
	set DISP_TEMP2 3833
	ife CHAR 0
		{
		ifp pboosted state JSORAORAPUNCH else state JSPUNCH
		}
	else ife CHAR 2 state MPUNCH
	else ife CHAR 3 state JSPUNCH
	else ife CHAR 4 state JSPUNCH
	else ife CHAR 5 state JSPUNCH
	else ife CHAR 6 state JSPUNCH
	else ife CHAR 7 state JSPUNCH
	else ife CHAR 9 state JSPUNCH
	else ife CHAR 10 state JSPUNCH
	else ife CHAR 11 state JSPUNCH
	else ife CHAR 12 state JSPUNCH
	else ife CHAR 13 state JSPUNCH
	else ife CHAR 14 state JSPUNCH
	else ife CHAR 15 state JSPUNCH
	else
		{
		ifn pal 1
		 ifn pal 2
		  ifn pal 4
		   ifn pal 7
		    ifn pal 8
		     ifn pal 17
		      ifn pal 19
			{
			getp[].palookup pal
			ife CHAR 3 ife pal 0 set pal 11
			}
		switch weaponcount
			case 14
			case 0
			 break
			case 1
			case 2
			case 3
			case 4
			  set x 200
			  add x weapon_xoffset
			  sub x looking_angSR1

			  set y 283
			  add y looking_arc
			  sub y gun_pos
			  set DISP_TEMP4 weaponcount
			   mulvar DISP_TEMP4 4
			  sub y DISP_TEMP4
			  rotatesprite x y NORMALSIZE 0 CKNEE shade pal 0 0 0 xdim ydim
			break
			case 5
			case 8
			  set x 150
			  add x weapon_xoffset
			  sub x looking_angSR1

			  set y 215
			  add y looking_arc
			  sub y gun_pos
			  set DISP_TEMP3 CKNEE
			  add DISP_TEMP3 1
			  rotatesprite x y NORMALSIZE 0 DISP_TEMP3 shade pal 0 0 0 xdim ydim
			 break
			case 6
			case 7
			  soundonce KICK_SWING
			  set x 150
			  add x weapon_xoffset
			  sub x looking_angSR1

			  set y 215
			  add y looking_arc
			  sub y gun_pos
			  set DISP_TEMP3 CKNEE
			  add DISP_TEMP3 1
			  rotatesprite x y 63556 0 DISP_TEMP3 shade pal 0 0 0 xdim ydim
			 break
			case 9
			case 10
			case 11
			case 12
			case 13
			  set x 200
			  add x weapon_xoffset
			  sub x looking_angSR1

			  set y 233
			  add y looking_arc
			  sub y gun_pos
			  set DISP_TEMP4 weaponcount
			  mulvar DISP_TEMP4 4
			  add y DISP_TEMP4
			  rotatesprite x y NORMALSIZE 0 CKNEE shade pal 0 0 0 xdim ydim
		break
		endswitch
			}
		}
	}

getuserdef[].drawweapon DISP_TEMP
ifmultiplayer set DISP_TEMP 1
ife DISP_TEMP 1
{
	ife CHAR 12 // If it's JANE, get her player colour
		{
		ifn pal 1
		 ifn pal 2
		  ifn pal 4
		   ifn pal 7
		    ifn pal 8
		     ifn pal 17
		      ifn pal 19
			{
			getp[].palookup pal
			ife CHAR 12 ife pal 0 set pal 3
			}
		}

	ifg INVINC 0
		{
		set wep_pal 121
		set pal 121
		}

	ifg SHIELDUP 0
		{
		ife SHIELD_TYPE 1 state draw_wood_shield
		else ife SHIELD_TYPE 2 state draw_big_wood_shield
		else state drawriotshield
		}
	ife CHAR 2 ifg MSHIELDUP 0 state drawshield

	ife currentweapon 0
	{
	ife temp_weapon 1 state displaytemp_shrinker
	ife temp_weapon 2 state displaytemp_barrett
	ife temp_weapon 3 state displaytemp_MAC10
	ife temp_weapon 4 state displaytemp_bloodstaff
	ife temp_weapon 5 state displaytemp_lizmangun
	ife temp_weapon 6 state displaytemp_pigcopgun
	ife temp_weapon 7 state displaytemp_skullduster
	ife temp_weapon 8 state displaytemp_fleshsquirter
	ife temp_weapon 9 state displaytemp_stygianwarcannon
	ife temp_weapon 10 state displaytemp_sawnoff
	ife temp_weapon 11 state displaytemp_tommygun
	ife temp_weapon 12 state displaytemp_riotgun
	ife temp_weapon 13 state displaytemp_crossbow
	ife temp_weapon 14 state displaytemp_miagun
	ife temp_weapon 15 state displaytemp_lasergun
	ife temp_weapon 16 state displaytemp_missilel
	ife temp_weapon 17 state displaytemp_chainsaw
	ife temp_weapon 18 state displaytemp_flamethrower
	ife temp_weapon 19 state displaytemp_sword
	ife temp_weapon 20 state displaytemp_mop
	ife temp_weapon 21 state displaytemp_FNFAL
	ife temp_weapon 22 state displaytemp_MP40
	ife temp_weapon 23 state displaytemp_jplasma
	ife temp_weapon 24 state displaytemp_lizmanfirelasergun
	ife temp_weapon 25 state displaytemp_m16
	ife temp_weapon 26 state displaytemp_AK114
	ife temp_weapon 27 state displaytemp_riotgun_minigun
	ife temp_weapon 28 state displaytemp_nailgun
	ife temp_weapon 29 state displaytemp_riotgun_grenadel
	ife temp_weapon 30 state displaytemp_dartgun
	ife temp_weapon 31 state displaytemp_m60
	ife temp_weapon 32 state displaytemp_zmissilel
	ife temp_weapon 33 state displaytemp_gorohead
	ife temp_weapon 34 state displaytemp_riotgun_minigun_mark2
	ife temp_weapon 35 state displaytemp_m960
	ife temp_weapon 36 state displaytemp_sword2
	ife temp_weapon 37 state displaytemp_beamsabre
	ife temp_weapon 38 state displaytemp_ripperheart
	ife temp_weapon 39 state displaytemp_zchaingun
	ife temp_weapon 40 state displaytemp_railgun
	ife temp_weapon 41 state displaytemp_ar65
	ife temp_weapon 42 state displaytemp_hell_nailer
	ife temp_weapon 43 state displaytemp_shrinker2
	ife temp_weapon 44 state displaytemp_jug_minigun
	}
	else ife currentweapon 1
	{
	ife CHAR 0
		{
		set RETURN 1
		ife SPECIALIST_EQUIPMENT[2] 2 state draw_fn57
		else ife SPECIALIST_EQUIPMENT[28] 2 state draw_OTs-33
		else ife SPECIALIST_EQUIPMENT[36] 2 state draw_gold_jericho
		else ife SPECIALIST_EQUIPMENT[44] 2 state draw_ppk
		else ife JAMES_1911 1 state draw1911
		else state drawglock
		}
	ife CHAR 1
		{
		set RETURN 1
		ife SPECIALIST_EQUIPMENT[82] 2 state draw_mp5k
		else ife SPECIALIST_EQUIPMENT[37] 2 state draw_gold_zrifle
		else state displayzaxrifle
		}
	ife CHAR 2
		{
		set RETURN 1
		ife SPECIALIST_EQUIPMENT[38] 2 state drawm_gold_knife
		else state drawmknife
		}
	ife CHAR 3
		{
		set RETURN 1
		ife SPECIALIST_EQUIPMENT[10] 2 state draw_pp2000
		else ife SPECIALIST_EQUIPMENT[32] 2 state draw_automag
		else ife SPECIALIST_EQUIPMENT[39] 2 state draw_skorpion
		else state drawtokarev
		}
	ife CHAR 4
		{
		set RETURN 1
		ife SPECIALIST_EQUIPMENT[40] 2 state draw_gold_spell1
		else state drawspell1
		}
	ife CHAR 5
		{
		set RETURN 1
		ife SPECIALIST_EQUIPMENT[24] 2 state draw_r1858 else
		ife SPECIALIST_EQUIPMENT[41] 2 state draw_gold_revolvers else
		ife SPECIALIST_EQUIPMENT[29] 2 state draw_microuzi else
		state drawrevolvers
		}
	ife CHAR 6
		{
		set RETURN 12
		ife SPECIALIST_EQUIPMENT[42] 2 state drawg_gold_pistol else
		state drawgpistol
		}
	ife CHAR 7
		{
		set RETURN 1
		ife SPECIALIST_EQUIPMENT[4] 2 state draw_MDF_magnum
		else ife SPECIALIST_EQUIPMENT[43] 2 state draw_gold_rose
		else state drawmpistol
		}
	ife CHAR 9 { set RETURN 1 state drawpcpistol }
	ife CHAR 10 { set RETURN 1 state draw_deagle }
	ife CHAR 11 { set RETURN 1 state draw_morningstar }
	ife CHAR 12 { set RETURN 1 state draw_handlaser }
	ife CHAR 13
		{
		set RETURN 1
		ife SPECIALIST_EQUIPMENT[46] 2 state draw_gold_metalstorm_pistol
		else ife SPECIALIST_EQUIPMENT[60] 2 state draw_longside
		else ife SPECIALIST_EQUIPMENT[73] 2 state draw_tecsmg
		else state draw_metalstorm_pistol
		}
	ife CHAR 14 { set RETURN 1 state draw_hblaster }
	ife CHAR 15 { set RETURN 1 state draw_metalstorm_pistol }
	}
	else ife currentweapon 2
	{
	ife CHAR 0
		{
		set RETURN 1
		ife JAMES_JACKH 1
		state draw_jackhammer
		else ife SPECIALIST_EQUIPMENT[61] 2 state draw_gold_CAWS
		else ife SPECIALIST_EQUIPMENT[25] 2 state draw_auto5
		else ife SPECIALIST_EQUIPMENT[53] 2 state draw_ksg12
		else state draw_protecta
		}
	ife CHAR 1
		{
		set RETURN 1
		ife SPECIALIST_EQUIPMENT[62] 2 state draw_z_goldshotgun
		else ife SPECIALIST_EQUIPMENT[5] 2 state draw_z_quadshot
		else state draw_z_shotgun
		}
	ife CHAR 2
		{
		set RETURN 1
		ife SPECIALIST_EQUIPMENT[51] 2 state draw_guandao
		else ife SPECIALIST_EQUIPMENT[63] 2 state drawm_gold_sword
		else state drawmsword
		}
	ife CHAR 3
		{
		set RETURN 1
		ife SPECIALIST_EQUIPMENT[13] 2 state draw_saiga12 else
		ife SPECIALIST_EQUIPMENT[65] 2 state draw_golden_saiga12 else
		state draw870
		}
	ife CHAR 4
		{
		set RETURN 1
		ife SPECIALIST_EQUIPMENT[31] 2 state draw_spell2_fire
		else ife SPECIALIST_EQUIPMENT[64] 2 state draw_spell2_gold
		else state drawspell2
		}
	ife CHAR 5
		{
		set RETURN 1
		ife SPECIALIST_EQUIPMENT[83] 2 state draw_autom_shotgun
		else ife SPECIALIST_EQUIPMENT[3] 2 state draw_overunder
		else ife SPECIALIST_EQUIPMENT[66] 2 state draw_gold_handshotgun
		else state draw_autoshotgun
		}
	ife CHAR 6
		{
		set RETURN 1
		ife SPECIALIST_EQUIPMENT[20] 2 state draw_gplasmashotgun
		else ife SPECIALIST_EQUIPMENT[67] 2 state drawg_goldshotgun
		else state drawgshotgun
		}
	ife CHAR 7
		{
		set RETURN 1
		ife SPECIALIST_EQUIPMENT[30] 2 state draw_m_assault_shotgun
		else ife SPECIALIST_EQUIPMENT[68] 2 state drawm_gold_shotgun
		else ife SPECIALIST_EQUIPMENT[85] 2 state draw_msc12
		else state drawmshotgun
		}
	ife CHAR 9 { set RETURN 1 state displaytemp_sawnoff }
	ife CHAR 10 { set RETURN 1 state draw_aa12 }
	ife CHAR 11 { set RETURN 1 state displaytemp_crossbow }
	ife CHAR 12 { set RETURN 1 state drawlblaster }
	ife CHAR 13
		{
		set RETURN 1
		ife SPECIALIST_EQUIPMENT[58] 2 state draw_mc_whiplash
		else ife SPECIALIST_EQUIPMENT[69] 2 state draw_mc_gold_shotgun
		else state draw_mc_shotgun
		}
	ife CHAR 14 { set RETURN 1 state draw_sf_shotgun }
	}
	else ife currentweapon 3
	{
	ife CHAR 0
		{
		set RETURN 1
		ife SPECIALIST_EQUIPMENT[8] 2 state draw_mp5
		else ife SPECIALIST_EQUIPMENT[15] 2 state draw_pp19
		else ife SPECIALIST_EQUIPMENT[55] 2 state draw_ump
		else state drawtmp
		}
	ife CHAR 1
		{
		set RETURN 1
		ife SPECIALIST_EQUIPMENT[23] 2 state draw_rc_zsmg
		else ife SPECIALIST_EQUIPMENT[70] 2 state draw_zsgalil
		else state drawzsmg
		}
	ife CHAR 2
		{
		set RETURN 1
		ife SPECIALIST_EQUIPMENT[26] 2 state draw_longaxe
		else state drawdaxe
		}
	ife CHAR 3
		{
		set RETURN 1
		ife SPECIALIST_EQUIPMENT[7] 2 state drawm16a2
		else ife SPECIALIST_EQUIPMENT[14] 2 state draw_ASVAL
		else state drawAKM
		}
	ife CHAR 4
		{
		set RETURN 1
		ife SPECIALIST_EQUIPMENT[6] 2 state draw_bar
		else ife SPECIALIST_EQUIPMENT[16] 2 state draw_ppsh
		else ife SPECIALIST_EQUIPMENT[34] 2 state draw_sang_sr-2
		else ife SPECIALIST_EQUIPMENT[71] 2 state draw_F2000
		else ife SPECIALIST_EQUIPMENT[74] 2 state draw_ak47
		else state drawsuzi
		}
	ife CHAR 5
		{
		set RETURN 1
		ife SPECIALIST_EQUIPMENT[9] 2 state draw_m41c
		else ife SPECIALIST_EQUIPMENT[27] 2 state draw_ak74
		else { ife RUSTY_BAYONET 1 state drawbar_bayonet else state drawbar }
		}
	ife CHAR 6
		{
		set RETURN 1
		ife SPECIALIST_EQUIPMENT[12] 2 state draw_ap_gsmg
		else ife SPECIALIST_EQUIPMENT[81] 2 state draw_gp_63
		else state drawgsmg
		}
	ife CHAR 7
		{
		set RETURN 1
		ife SPECIALIST_EQUIPMENT[21] 2 state draw_msmg
		else ife SPECIALIST_EQUIPMENT[47] 2 state draw_mikko_battle_rifle
		else state drawmassrifle
		}
	ife CHAR 9 { set RETURN 1 state displaytemp_tommygun }
	ife CHAR 10 { set RETURN 1 state drawm4a1 }
	ife CHAR 11 { set RETURN 1 state drawsunstaff }
	ife CHAR 12 { set RETURN 1 state drawlplasma }
	ife CHAR 13
		{
		set RETURN 1
		ife SPECIALIST_EQUIPMENT[48] 2 state draw_ar73
		else ifand MICKY_UPGRADE 4 state draw_mc_ar_gl
		else state draw_mc_ar
		}
	ife CHAR 14 { set RETURN 1 state draw_SF_AR }
	}
	else ife currentweapon 4
	{
	ife CHAR 0
		{
		set RETURN 1
		ife SPECIALIST_EQUIPMENT[77] 2 state draw_jranger else
		state drawjgrenadel
		}
	ife CHAR 1
		{
		set RETURN 1
		ife SPECIALIST_EQUIPMENT[75] 2 state draw_z_plasma_rpg
		else state draw_z_rpg
		}
	ife CHAR 2
		{
		set RETURN 1
		ife SPECIALIST_EQUIPMENT[56] 2 state COMPOUND_BOW else
		state MBOW
		}
	ife CHAR 3 { set RETURN 1 state drawmissilel }
	ife CHAR 4 { set RETURN 1 state drawspell4 }
	ife CHAR 5 { set RETURN 1 state drawtrimissile }
	ife CHAR 6 { set RETURN 1 state drawggrenadel }
	ife CHAR 7 { set RETURN 1 state drawfireballc }
	ife CHAR 10 { set RETURN 1 state draw_xm25 }
	ife CHAR 13 { set RETURN 1 state draw_mc_rocket }
	ife CHAR 14 { set RETURN 1 state draw_sf_rocket }
	ife CHAR 9 set RETURN 1
	}
	else ife currentweapon 5
	{
	set RETURN 1
	ife CHAR 0 state displayjgrenade else
	ife CHAR 1 state DISP_zax_pike else
	ife CHAR 3 state displaygrenade else
	ife CHAR 5 state displaydynastick else
	ife CHAR 6 state displaydiscbomb else
	ife CHAR 7 state displaygrenade else
	ife CHAR 9 state displaydynastick else
	ife CHAR 10 state displaygrenade else
	ife CHAR 12 state draw_handbomb else
	state displaypipe
	}
	else ife currentweapon 6
	{
	ife CHAR 0
		{
		set RETURN 1 ife SPECIALIST_EQUIPMENT[49] 2 state draw_j_autocrossbow
		else state drawjsautos
		}
	ife CHAR 2 { set RETURN 1 state drawmthundersword }
	ife CHAR 3 { set RETURN 1 state drawrrifle }
	ife CHAR 4 { set RETURN 1 state drawspell5 }
	ife CHAR 5 { set RETURN 1 state drawmine_dart }
	ife CHAR 6 { set RETURN 1 state drawg_railgun }
	ife CHAR 7
		{
		set RETURN 1 ife SPECIALIST_EQUIPMENT[59] 2 state draw_awms
		else state drawgreenmgun
		}
	ife CHAR 9 set RETURN 1
	ife CHAR 10 { set RETURN 1 state displaytemp_shrinker }
	ife CHAR 11 set RETURN 1
	ife CHAR 12 set RETURN 1
	ife CHAR 13 { set RETURN 1 state draw_mc_auto_pulsegun }
	ife CHAR 14 { set RETURN 1 state draw_sf_cannon }
	}
	else ife currentweapon 7
	{
	ife CHAR 0
		{
		set RETURN 1
		ife SPECIALIST_EQUIPMENT[45] 2 state drawLR300
		else ife SPECIALIST_EQUIPMENT[78] 2 state draw_G36
		else ife SPECIALIST_EQUIPMENT[84] 2 state draw_m4-15
		else state draw_steyr_aug
		}
	ife CHAR 1
		{
		set RETURN 1
		ife SPECIALIST_EQUIPMENT[52] 2 state DISP_zaxfirestorm
		else state DISP_zaxdevi
		}
	ife CHAR 2
		{
		set RETURN 1
		ife SPECIALIST_EQUIPMENT[50] 2 state draw_warcannon
		else state drawblunderbuss
		}
	ife CHAR 3 { set RETURN 1 state drawhighgl }
	ife CHAR 4
		{
		set RETURN 1
		ife SPECIALIST_EQUIPMENT[80] 2 state draw_manacle
		else ife SPECIALIST_EQUIPMENT[86] 2 state draw_seraph_shotg
		else state drawunmaker
		}
	ife CHAR 5 { set RETURN 1 state drawpulserifle }
	ife CHAR 6
		{
		set RETURN 1
		ife SPECIALIST_EQUIPMENT[79] 2 state draw_geo_autoshotgun
		else state drawmeltarifle
		}
	ife CHAR 7 { set RETURN 1 state drawredmgun }
	ife CHAR 9 { set RETURN 1 state displaytemp_missilel }
	ife CHAR 10 { set RETURN 1 state display_M99 }
	ife CHAR 11 set RETURN 1
	ife CHAR 12 { set RETURN 1 state displaytemp_missilel }
	ife CHAR 13
		{
		set RETURN 1
		ife SPECIALIST_EQUIPMENT[54] 2 state draw_mc_meson_cannon
		else state draw_mc_explosive_shotgun
		}
	ife CHAR 14 { set RETURN 1 state draw_sf_lightning }
	}
	else ife currentweapon 8
	{
	set RETURN 1
	getp[].ammo_amount 8 TEMP
	ifg TEMP 0
			{
			ife CHAR 0 state drawjamesprox else
			ife CHAR 2 state draw_merlijn_trap else
			ife CHAR 4 state drawheartleech else
			ife CHAR 5 state drawrustytrap else
			ife CHAR 6 state displaydisctripbomb else
			ife CHAR 11 state draw_merlijn_trap else
			ife CHAR 13 state draw_mc_icebomb else
			state displaytripbomb
			}
	}
	else ife currentweapon 9
	{
	ife CHAR 0
		{ set RETURN 1
		ife SPECIALIST_EQUIPMENT[22] 2 state draw_an94 else
		ife SPECIALIST_EQUIPMENT[72] 2 state draw_gilboa else
		state drawm16shotgun
		}
	ife CHAR 1 { set RETURN 1 state draw_petrify }
	ife CHAR 2 { set RETURN 1 state drawdragonslayer }
	ife CHAR 3
		{
		set RETURN 1
		ife SPECIALIST_EQUIPMENT[11] 2 state drawRPKM else
		ife SPECIALIST_EQUIPMENT[35] 2 state drawPKM else
		state drawRPK
		}
	ife CHAR 4
		{
		set RETURN 1
		ife SPECIALIST_EQUIPMENT[57] 2 state draw_nemesis_staff
		else state drawspell8
		}
	ife CHAR 5 { set RETURN 1 state drawnailgun }
	ife CHAR 6 { set RETURN 1 state drawgshockr }
	ife CHAR 7
		{
		set RETURN 1
		ife SPECIALIST_EQUIPMENT[19] 2 state draw_mdf_plasma else
		ife SPECIALIST_EQUIPMENT[33] 2 state DISP_ms_nailgun else
		state drawmplasma
		}
	ife CHAR 9 { set RETURN 1 state displaytemp_FNFAL }
	ife CHAR 10 { set RETURN 1 state displaytemp_jplasma }
	ife CHAR 11 set RETURN 1
	ife CHAR 12 { set RETURN 1 state drawl_m249 }
	ife CHAR 13
		{
		set RETURN 1
		ife SPECIALIST_EQUIPMENT[76] 2 state draw_mc_pbeam else
		state draw_mc_flamethrower
		}
	ife CHAR 14 { set RETURN 1 state draw_sf_hmg }
	}
	else ife currentweapon 10 ifn CHAR 1 { set RETURN 1 state drawdetonator }
	else ife currentweapon 11 ifn CHAR 1
	{
	ife CHAR 0
		{
		set RETURN 1 ife SPECIALIST_EQUIPMENT[49] 2 state draw_j_autocrossbow
		else state drawjsautos
		}
	ife CHAR 2 { set RETURN 1 state drawmflamesword }
	ife CHAR 3 { set RETURN 1 state drawrrifle }
	ife CHAR 4 { set RETURN 1 state drawspell5 }
	ife CHAR 5 { set RETURN 1 state draw_in_mine_dart }
	ife CHAR 6 { set RETURN 1 state drawg_railgun }
	ife CHAR 7
		{
		set RETURN 1 ife SPECIALIST_EQUIPMENT[59] 2 state draw_awms
		else state drawgreenmgun
		}
	ife CHAR 9 set RETURN 1
	ife CHAR 10 { set RETURN 1 state displaytemp_expander }
	ife CHAR 11 set RETURN 1
	ife CHAR 12 set RETURN 1
	ife CHAR 13 { set RETURN 1 state draw_mc_auto_pulsegun }
	ife CHAR 14 { set RETURN 1 state draw_sf_cannon }
	}
}
else ife TEMP 2 // If weapon Icons is set...
state weaponicons
else set RETURN 0

ifg SCOPE 0
	{
	ife SCOPE 2
		{
		ifg DISP_TEMP6 2047 set DISP_TEMP6 0
		add DISP_TEMP6 1
		rotatespritea 160 100 NORMALSIZE DISP_TEMP6 4810 10 0 0 -255 0 0 xdim ydim // Crosshair

		rotatesprite 160 100 16384 0 4966 0 0 0 0 0 xdim ydim // Crosshair

		ifl DISP_TEMP4 0 set DISP_TEMP4 2048
		sub DISP_TEMP4 1
		rotatespritea 160 100 HALFSIZE DISP_TEMP4 4810 0 0 0 -255 0 0 xdim ydim // Crosshair

		}

	else
		{
		  set x 160
		  set DISP_TEMP2 WEAPSWAYX
		  divvar DISP_TEMP2 2
		  sub x DISP_TEMP2
		  set y 100
		  set DISP_TEMP3 WEAPSWAYY
		  divvar DISP_TEMP3 2
		  sub y DISP_TEMP3

		rotatesprite x y NORMALSIZE 0 4962 shade pal 0 0 0 xdim ydim // farthest part of scope
		rotatesprite x y NORMALSIZE 0 4969 25 pal 1 0 0 xdim ydim // 'blur'
		rotatesprite 160 100 16384 0 4966 0 0 0 0 0 xdim ydim // Crosshair
		set DISP_TEMP4 2048
		set DISP_TEMP5 GUN_SPREAD
		mul DISP_TEMP5 256
		mul DISP_TEMP4 GUN_ACCURACY
		add DISP_TEMP4 DISP_TEMP5
		rotatesprite 160 100 DISP_TEMP4 0 5021 0 33 0 0 0 xdim ydim // Crosshair
		set x 160
		sub x WEAPSWAYX
		set y 100
		sub y WEAPSWAYY
		rotatesprite x y 96638 0 4962 shade 0 0 0 0 xdim ydim // closest part of scope
		rotatesprite x y 96638 0 4969 25 0 33 0 0 xdim ydim // closest part of scope

		ifl player_shade_diff -5
			{
			set WEAP_DISP_TEMP3 player_shade_diff
			mulvar WEAP_DISP_TEMP3 2
			rotatespritea x y 43000 0 2587 player_shade_diff wall_pal 33 WEAP_DISP_TEMP3 0 0 xdim ydim // Glass in holosight
			}
		}
	}

ifg onladder 0
 ifn LADDERTYPE 2
	{
	ifand BITS_PRESS 1 nullop else
	ifand BITS_PRESS 2 nullop else
	{
		ifg fpress 0
		{
		add LADDER_ANIM1 1
		ifg LADDER_ANIM1 10
			{
			ife DISP_TEMP7 1 set DISP_TEMP7 0 else set DISP_TEMP7 1
			set LADDER_ANIM1 0
			}
		}
		else
		ifg bpress 0
		{
		add LADDER_ANIM1 1
		ifg LADDER_ANIM1 10
			{
			ife DISP_TEMP7 1 set DISP_TEMP7 0 else set DISP_TEMP7 1
			set LADDER_ANIM1 0
			}
		}
  ife CHAR 0
	{
	ifand CHAR_APP 1
		{
		ife DISP_TEMP7 1 set DISP_TEMP 19890
		else set DISP_TEMP 19891
		}
	else set DISP_TEMP 8973
	}
	  else ife CHAR 1 set DISP_TEMP 8978
	  else ife CHAR 2 set DISP_TEMP 8977
	  else ife CHAR 3 set DISP_TEMP 8972
	  else ife CHAR 4
		{
		ifand CHAR_APP 2 set DISP_TEMP 8982
		else set DISP_TEMP 8976
		}
	  else ife CHAR 5 set DISP_TEMP 8972
	  else ife CHAR 6 set DISP_TEMP 8975
	  else ife CHAR 7 set DISP_TEMP 8974
	  else ife CHAR 9 set DISP_TEMP 8972
	  else ife CHAR 10 set DISP_TEMP 14582
	  else ife CHAR 11 set DISP_TEMP 8977
	  else ife CHAR 12 set DISP_TEMP 8974
	  else ife CHAR 13 set DISP_TEMP 8974
	  else ife CHAR 14 set DISP_TEMP 20981
	  else ife CHAR 15 set DISP_TEMP 8972

				ifg bpress 0 ife LADDERTYPE 1
				{
				rotatesprite 40 200 NORMALSIZE 1024 CHOLDING_2 shade pal 4 0 0 xdim ydim
				rotatesprite 280 200 NORMALSIZE 0 CHOLDING shade pal 0 0 0 xdim ydim
				}
				else
				  {
				  set LADDER_ANIM2 190
				  add LADDER_ANIM2 LADDER_ANIM1
				  ifg LADDER_ANIM2 320 set LADDER_ANIM2 190
				  ifl LADDER_ANIM2 190 set LADDER_ANIM2 190
					  ife DISP_TEMP7 1
					  {
					  rotatesprite 160 LADDER_ANIM2 NORMALSIZE 0 DISP_TEMP shade pal 0 0 0 xdim ydim
					  }
					  else
					  {
					  rotatesprite 160 LADDER_ANIM2 NORMALSIZE 1024 DISP_TEMP shade pal 4 0 0 xdim ydim
					  }
					}
		}
	}

ife DEBUG_STUFF 2
	{
	rotatesprite 160 100 NNORMALSIZE 0 5890 0 0 0 0 0 xdim ydim
	}

ife DEBUG_STUFF 1
	{
	set DISP_TEMP AMMO_TYPES[CURWEAP]
	digitalnumber DIGITALNUM 60 60 DISP_TEMP 0 1 0 0 0 xdim ydim
	digitalnumber DIGITALNUM 60 70 AMMO_TYPE 0 2 0 0 0 xdim ydim
	}

endevent

